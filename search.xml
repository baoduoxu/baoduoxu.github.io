<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>术语缩写汇总</title>
    <url>/2023/07/30/abbr-term/</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very
first post. Check <a href="https://hexo.io/docs/">documentation</a> for
more info. If you get any problems when using Hexo, you can find the
answer in <a
href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or
you can ask me on <a
href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a
href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a
href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a
href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<hr />
<blockquote>
<p>下面是一些问题的记录.</p>
</blockquote>
<h2 id="如何自定义">如何自定义?</h2>
<p>http://theme-next.iissnan.com/</p>
<h2 id="如何插入图片">如何插入图片</h2>
<h2 id="一些公式渲染的问题">一些公式渲染的问题</h2>
<p>主要是LaTeX和markdown一些符号的语义冲突。</p>
<p>1:
公式中出现两个下划线时，markdown会将两个下划线之间的部分识别为斜体。解决方法是将
<code>\node_modules\kramed\lib\rules\inline.js</code> 中的
<code>escape</code> 项和 <code>em</code> 项做如下更改:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/, </span></span><br><span class="line">  <span class="attr">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,</span><br></pre></td></tr></table></figure>
<p>以及 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span><br><span class="line">  <span class="attr">em</span>: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br></pre></td></tr></table></figure></p>
<p>记得将 <code>\themes\next\_config.yml</code> 中的 <code>math</code>
项中的 <code>per_page</code> 项设置为 <code>false</code>,
否则要在每篇文章的 <code>Front-matter</code> 中加入
<code>mathjax: true</code>.</p>
<p>2: 公式中出现两个及以上的 <code>&lt;</code> 时, 某两个
<code>&lt;</code> 之间的内容可能会不见.
在这些小于号的前后加上空格即可.</p>
<p>3: 公式中出现多个 <code>*</code> 时,
某两个星号之间的内容也会被markdown变为斜体. 解决方法是用
<code>\ast</code> 代替.</p>
<p>4: 两个大括号连用可能会渲染失败(虽然我还没碰到过),
解决方法是在大括号之间加空格.</p>
]]></content>
      <categories>
        <category>My Start</category>
      </categories>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
  <entry>
    <title>Heuristic Algorithms for TSP</title>
    <url>/2023/07/20/CO/TSP/</url>
    <content><![CDATA[<h1 id="tsp上界">TSP上界</h1>
<p>考虑欧氏平面上的完全图 <span
class="math inline">\(G=(V,E),|V|=n\)</span>,
此时边权为正且满足三角不等式. 设最优环游为 <span
class="math inline">\(H^*\)</span>, 启发式算法产生的解记作 <span
class="math inline">\(H\)</span>, 边权 <span
class="math inline">\(c:E\to\mathbb{R}_+\)</span>.</p>
<h2 id="最近邻法">最近邻法</h2>
<p>从起点开始, 每次选择距离当前点最近的点即可. 满足 <span
class="math inline">\(c(H)\le
\frac{1}{3}\left\lceil\log_2(n+1)+\frac{4}{9}\right\rceil
c(H^*)\)</span>, 粗略点就是 <span
class="math inline">\(c(H)/c(H^*)=O(\log n)\)</span>.</p>
<p>如果图不满足三角不等式,
那么最近邻法产生的环游与最优环游的比值可以任意大.</p>
<h2 id="插入法">插入法</h2>
<h2 id="christofides-启发式方法">Christofides 启发式方法</h2>
<p>需要用到最小生成树 <span class="math inline">\(T\)</span>, 记 <span
class="math inline">\(W\)</span> 为 <span
class="math inline">\(T\)</span> 中度数为奇数的顶点的集合, 在 <span
class="math inline">\(T\)</span> 中, 由握手定理可得 <span
class="math inline">\(\sum_{v\in W}\deg(v)\)</span> 为偶数, 于是必然有
<span class="math inline">\(|W|\)</span> 为偶数, 因此诱导子图 <span
class="math inline">\(G[W]\)</span> 存在最小费用完美匹配 <span
class="math inline">\(M\)</span>, 令 <span
class="math inline">\(J=E(T)\cup M\)</span>,
在这里边集的并要求保留重复元素, 即允许出现重边, 这样得到子图 <span
class="math inline">\(G&#39;=(V,J)=T\cup (W,M)\)</span>, 显然 <span
class="math inline">\(G&#39;\)</span> 中所有点的度数均为偶数,
因为将完美匹配并入最小生成树 <span class="math inline">\(T\)</span>
中时未改变偶数度顶点的度数, 给每个奇数度顶点的度数加上了一, 于是 <span
class="math inline">\(G&#39;\)</span> 中存在欧拉圈, 设欧拉圈为 <span
class="math inline">\(v_0,\cdots,v_0\)</span>,
在欧拉圈的基础上构造TSP环游: 置 <span
class="math inline">\(H:=\emptyset\)</span>, 按照欧拉圈的顺序逐边向
<span class="math inline">\(H\)</span> 中添加边, 若在 <span
class="math inline">\(v_{i}\)</span> 时 <span
class="math inline">\(v_{i+1},\cdots,v_{j}(j\ge i+1)\)</span>
已经被访问过且 <span class="math inline">\(v_{j+1}\)</span> 未被访问过,
则置 <span class="math inline">\(H:=H\cup
\{v_{i},v_{j+1}\}\)</span>(即跳过已经被访问过的点),
直到所有顶点都被访问.</p>
<p><strong>定理1</strong> Christofides 启发式方法得到的环游满足 <span
class="math inline">\(c(H)/c(H^*)\le 3/2\)</span>.</p>
<p><strong><em>PROOF</em></strong> 由于环游 <span
class="math inline">\(H\)</span> 是在 <span
class="math inline">\(G&#39;=T\cup (W,M)\)</span> 上进行改进得到的,
只需要证明 <span class="math inline">\(c(E(G&#39;))\le
1.5c(H^*)\)</span> 即可, 分别考虑最小生成树和完美匹配的边权. 首先一定有
<span class="math inline">\(c(E(T))\le c(H^*)\)</span>, 如若不然, 去掉
<span class="math inline">\(H^*\)</span>
的一条边得到的生成树便可成为新的最小生成树; 对于 <span
class="math inline">\(W\)</span>, 按照顶点在 <span
class="math inline">\(H^*\)</span> 的顺序将 <span
class="math inline">\(W\)</span> 中的点画成一个圈 <span
class="math inline">\(C\)</span>, 由三角不等式可得 <span
class="math inline">\(c(C)\le c(H^*)\)</span>, 且圈 <span
class="math inline">\(C\)</span> 可以被划分为 <span
class="math inline">\(G[W]\)</span> 的两个完美匹配 <span
class="math inline">\(M_1,M_2\)</span>, 显然最小费用完美匹配 <span
class="math inline">\(M\)</span> 满足 <span
class="math inline">\(c(M)\le \min \{c(M_1),c(M_2)\}\le
\frac{c(M_1)+c(M_2)}{2}=c(C)/2\le c(H^*)/2\)</span>. 因此 <span
class="math inline">\(c(H)\le c(J)=c(E(T))+c(M)\le 1.5c(H^*)\)</span>.
<span class="math inline">\(\blacksquare\)</span></p>
<p>这个 <span class="math inline">\(1.5\)</span> 不能再继续减小了.</p>
<blockquote>
<p>还有一种更简单的用到最小生成树的启发式算法:
先序遍历最小生成树得到的环游可以作为一个启发式的解, 此时满足 <span
class="math inline">\(c(H)/c(H^*)\le 2\)</span>.</p>
</blockquote>
<h2 id="k-交换"><span class="math inline">\(k\)</span>-交换</h2>
<p>常用的是2-opt和3-opt.</p>
<p><span class="math inline">\(k\)</span>-opt用于改进已有的环游,
比如Chrisrofides产生的环游 <span class="math inline">\(H\)</span>. <span
class="math inline">\(2\)</span>-opt 是对 <span
class="math inline">\(H\)</span> 的不相邻的两条边做交换操作, 更详细地说,
是将这两条边删去得到两条路径 <span
class="math inline">\(H_1,H_2\)</span>, 通过一种唯一的方法将 <span
class="math inline">\(H_1,H_2\)</span> 组合成一条新的环游 <span
class="math inline">\(H&#39;\)</span>, 若 <span
class="math inline">\(c(H&#39;)&lt; c(H)\)</span>, 那我们就认为 <span
class="math inline">\(H&#39;\)</span> 是更优的选择.
最终可以达到一个最优的状态, 即不能再通过2-交换得到更优的环游.
3-交换是类似的操作, 删边-重新组合. 当 <span
class="math inline">\(k&gt;3\)</span> 时,
删边重新组合成新的环游的方法数呈指数级上升, 一般不采用.</p>
<p>遗憾的是虽然可以在 <span class="math inline">\(O(|V|^2)\)</span>
内验证一条环游是否是2-opt的,
但是有可能需要指数次交换才能将任意一条环游变为2-opt的.</p>
<h2 id="lin-kernighan">Lin-Kernighan</h2>
<p>Lin-Kernighan启发式方法简称为LKH,
是目前最高效的TSP启发式算法之一。</p>
<p>首先需要定义 <span
class="math inline">\(\delta\)</span>-path相关的概念. <span
class="math inline">\(\delta\)</span>-path是一条path满足path的终点是路径上的某个点,
也就是说 <span class="math inline">\(\delta\)</span>-path中含有一个圈,
如下图的 <span class="math inline">\(P\)</span> 所示, 其中 <span
class="math inline">\(w\)</span> 为该路径的终点(当然也在路径中出现过),
<span class="math inline">\(r\)</span> 为 <span
class="math inline">\(w\)</span> 紧跟着的点.</p>
<p>可以通过一个 <span class="math inline">\(\delta\)</span>-path
构造一个TSP环游, 构造规则为: 将路径终点所在的路径中的</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/20230721201048.png" /></p>
<p>LKH算法的核心思想就是不断通过删边与加边构造费用越来越小的 <span
class="math inline">\(\delta\)</span>-path.</p>
<p><a
href="https://stemlounge.com/animated-algorithms-for-the-traveling-salesman-problem/">11
Animated Algorithms for the Traveling Salesman Problem
(stemlounge.com)</a></p>
<h1 id="tsp下界">TSP下界</h1>
<h2 id="held-karp-bound">Held-Karp bound</h2>
<p>对于任意一个环游 <span class="math inline">\(H\subset E\)</span>,
一个相当 trivial 的下界可以由下面的方式找到:</p>
<p>对于 <span class="math inline">\(v_1\in V\)</span>, 设 <span
class="math inline">\(e,f\)</span> 是以 <span
class="math inline">\(v_1\)</span> 为端点的两条不同的边, 令 <span
class="math inline">\(P=T\backslash\{e,f\}\)</span>, 那么就有 <span
class="math inline">\(c(H)=c(P)+c_e+c_f\)</span>, 倘若有 <span
class="math display">\[
\begin{cases}
A\le c_e+c_f\\
B\le c(P)
\end{cases}
\]</span> 那么 <span class="math inline">\(A+B\)</span> 自然就是环游
<span class="math inline">\(H\)</span> 费用的一个下界.</p>
<p>那么该如何找到这样的 <span class="math inline">\(A,B\)</span> 呢?
<span class="math inline">\(A\)</span> 是相当好找的, 找到费用最小的以
<span class="math inline">\(v_1\)</span> 为端点的两条边即可. 对于 <span
class="math inline">\(B\)</span>, 首先 <span
class="math inline">\(P\)</span> 是 <span
class="math inline">\(G\backslash\{v_1\}\)</span> 的一棵生成树, 那么显然
<span class="math inline">\(G\backslash\{v_1\}\)</span>
的最小生成树的费用可以作为下界 <span class="math inline">\(B\)</span>,
上面这样的 <span class="math inline">\(A+B\)</span> 称为 <strong>1-tree
bound</strong>.</p>
<blockquote>
<p>为何不直接用 <span class="math inline">\(G\)</span>
的最小生成树的费用来作为下界呢? 上面的方法是否可以获得更紧的下界呢?</p>
</blockquote>
<p>这个界还可以改善, 比如下面的例子中的 1-tree bound 是 <span
class="math inline">\(0\)</span>, 这是一个相当平凡的值,
出现这种原因是因为有三条边权为 <span class="math inline">\(0\)</span>
的点与点 <span class="math inline">\(u\)</span> 相连,
这意味着这三条边在最小生成树中一定会出现, 为了改善这种情况,
可以考虑修改边权而不改变最优环游的位置(当然其实我们不关注修改后的最优环游,
关注的是修改后的 1-tree bound). 可以将以 <span
class="math inline">\(u\)</span> 为端点的边的权重都加 <span
class="math inline">\(10\)</span>, 那么下界将变为 <span
class="math inline">\(30\)</span> 而最优环游并不发生变化.</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308142038469.png" style="zoom:50%;" /></p>
<p>下面形式化地叙述 Held-Karp bound 的计算过程:</p>
<p><strong>定理1 (Held-Karp bound)</strong> 设原始费用函数为 <span
class="math inline">\(c: E\to\mathbb{R_{\ge 0}}\)</span>, 对于任意 <span
class="math inline">\(v\in V\)</span> 和 <span
class="math inline">\(\mathbf{y}=(\cdots,y_v,\cdots)\in\mathbb{R}^{|V|}\)</span>
, 给顶点 <span class="math inline">\(v\)</span> 分配一个实数 <span
class="math inline">\(y_v\)</span>, 将以顶点 <span
class="math inline">\(v\)</span> 为顶点的边的费用都减少 <span
class="math inline">\(y_v\)</span>, 得到一个新的费用函数为 <span
class="math inline">\(c&#39;\)</span>(即对任意 <span
class="math inline">\((u,v)\in E,c&#39;(u,v)=c(u,v)-y_u-y_v\)</span>) ,
令 <span class="math inline">\(C\)</span> 为 <span
class="math inline">\(G\)</span> 关于费用 <span
class="math inline">\(c&#39;\)</span> 的一个 1-tree bound, 那么 <span
class="math inline">\(2\sum_{v\in V}y_v+C\)</span> 是 <span
class="math inline">\(G\)</span> 关于费用 <span
class="math inline">\(c\)</span> 的最优环游的费用的下界. <span
class="math inline">\(\square\)</span></p>
<p>如何寻找合适的 <span class="math inline">\(\mathbf{y}\)</span>? Held
和 Karp 给出了一个迭代策略: 设 <span
class="math inline">\(y_{v}^{(k)}\)</span> 表示第 <span
class="math inline">\(k\)</span> 轮迭代赋予的值, 首先初始化 <span
class="math inline">\(\mathbf{y}^{(0)}\)</span> 同时得到一棵初始的
1-tree bound 对应的子图 <span class="math inline">\(T_0\)</span>, 接着设
<span class="math inline">\(d_{T_k}(v)\)</span> 表示 <span
class="math inline">\(T_k\)</span> 中顶点 <span
class="math inline">\(v\)</span> 的度数, 那么 <span
class="math inline">\(y_v^{(k+1)}=y_v^{(k)}+t(2-d_T(v))\)</span>,
其中实数 <span class="math inline">\(t\)</span> 为一个固定的步长.
步长也可以做启发式的更改, 迭代公式可以写为 <span
class="math inline">\(y_v^{(k+1)}=y_v^{(k)}+t_k(2-d_{T_k}(v))\)</span>,
其中 <span class="math display">\[
t_k=\frac{\alpha_k(U-L_{\text{H-K}}^{(k)})}{\sum_{v\in V}
(2-d_{T_k}(v))^2}
\]</span> 其中 <span class="math inline">\(U\)</span> 是一个 TSP 上界,
可以由前述的启发式算法得到, <span
class="math inline">\(L_{\text{H-K}}^{(k)}\)</span> 是当前的 Held-Karp
bound, <span class="math inline">\(\alpha_k\)</span> 是一个在 <span
class="math inline">\((0,2]\)</span> 的实数, 可以令 <span
class="math inline">\(\alpha_0=2\)</span> 并使序列以固定的步长减少,
这个数取决于顶点数目以及我们愿意花费的时间.</p>
<p>可以证明固定步长的迭代会收敛到一个最优 Held-Karp 界对应的 <span
class="math inline">\(\mathbf{y}\)</span>,
但这个收敛时间可能是指数级别的, 同时并不是每次迭代获得的 <span
class="math inline">\(\mathbf{y}\)</span> 都改善当前的 Held-Karp 界,
可能会获得更糟糕的界.</p>
<p>可以使用线性规划获得与 Held-Karp bound 完全等价的bound.</p>
<h2 id="线性规划下界技术">线性规划下界技术</h2>
<h1 id="tsp的一个dp算法">TSP的一个DP算法</h1>
<p>设 <span class="math inline">\(V=\{c_1,\cdots,c_n\}\)</span>,
考虑到环游中起点的任意性, 以 <span class="math inline">\(c_1\)</span>
为起点. 对非空集合 <span class="math inline">\(S\subset
\{c_2,\cdots,c_n\}\land c_i\in S\)</span>, 设 <span
class="math inline">\(f(S,c_i)\)</span> 表示以 <span
class="math inline">\(c_1\)</span> 为起点 <span
class="math inline">\(c_i\)</span> 为终点且经过 <span
class="math inline">\(S\)</span> 中所有点的最短路径, 首先 <span
class="math inline">\(|S|=1\)</span> 时 <span
class="math inline">\(f(S,c_i)=f(\{c_i\},c_i)=d(c_1,c_i)\)</span>; 当
<span class="math inline">\(|S|&gt;1\)</span> 时, 只需枚举 <span
class="math inline">\(c_i\)</span> 的前置结点 <span
class="math inline">\(c_j(j\ne i)\)</span>, 此时终止于 <span
class="math inline">\(c_j\)</span> 的最短路径对应的 <span
class="math inline">\(f\)</span> 可以表示为 <span
class="math inline">\(f(S\backslash\{c_i\},c_j)\)</span>, 那么就有 <span
class="math display">\[
f(S,c_i)=\min_{c_j\in
S\backslash\{c_i\}}f(S\backslash\{c_i\},c_j)+d(c_j,c_i)
\]</span> 最终最优环游为 <span class="math inline">\(\min_{2\le i\le
n}f(\{c_2,\cdots,c_n\},c_i)+d(c_i,c_1)\)</span>. 这个动态规划的复杂度为
<span
class="math inline">\(\sum_{k=1}^{n-1}O\left(\binom{n}{k}k^2\right)=O(n^22^n)=O^*(2^n)\)</span>,
<span class="math inline">\(O^*(b^n)=O(b^np(n))\)</span>其中 <span
class="math inline">\(p(n)\)</span> 为多项式.</p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>算法复杂性理论入门</title>
    <url>/2023/08/11/CO/algorithm-complexity-theory/</url>
    <content><![CDATA[<p>记所有字母的集合为 <span class="math inline">\(\Sigma\)</span>,
若干字母组合成为字符串 <span class="math inline">\(s\)</span>, 记 <span
class="math inline">\(\Sigma^*\)</span> 为所有字符串的集合, <span
class="math inline">\(\emptyset_{s}\)</span> 为空串, 语言 <span
class="math inline">\(L\)</span> 为字符串的集合, <span
class="math inline">\(\emptyset_L\)</span> 为空语言, 且 <span
class="math inline">\(L\subset \Sigma^*\)</span>.</p>
<p>记作 <span class="math inline">\(\mathcal{C}\)</span> 是 legitimate
problems 的集合, <span class="math inline">\(\mathcal{C}_A\)</span>
表示简单的问题的集合, <span class="math inline">\(\mathcal{C}_B\)</span>
表示困难的问题的集合. 在一对 leg 问题中, 可以定义难度关系,
这可以引出下面的 reduction lemma:</p>
<p>对于问题 <span class="math inline">\(P,Q\)</span>, 若 <span
class="math inline">\(Q\in \mathcal{C}_A\)</span> 且 <span
class="math inline">\(P\)</span> 不难于 <span
class="math inline">\(Q\)</span>, 则 <span class="math inline">\(Q\in
\mathcal{C}_A\)</span>; 若 <span class="math inline">\(P\in
\mathcal{C}_B\)</span> 且 <span class="math inline">\(P\)</span> 难于
<span class="math inline">\(Q\)</span>, 则 <span
class="math inline">\(P\in \mathcal{C}_B\)</span>.</p>
<h1 id="mathsfp-和-mathsfnp"><span
class="math inline">\(\mathsf{P}\)</span> 和 <span
class="math inline">\(\mathsf{NP}\)</span></h1>
<h1 id="图灵机">图灵机</h1>
]]></content>
  </entry>
  <entry>
    <title>网络流(1)</title>
    <url>/2023/08/14/CO/network-flow1/</url>
    <content><![CDATA[<h1 id="基本概念">基本概念</h1>
<p>已知有向图 <span class="math inline">\(G=(V,E),\)</span> 映射 <span
class="math inline">\(c:E\to \mathbb{R}_{\ge 0}\)</span> 称为 <span
class="math inline">\(G\)</span> 中每条边的<strong>容量</strong>,
是一个非负实数, 记作 <span class="math inline">\(c(e),e\in E\)</span>
或者 <span class="math inline">\(c(u,v),(u,v)\in E,u,v\in V.\)</span> 在
<span class="math inline">\(G\)</span> 中有两个特殊顶点 <span
class="math inline">\(s,t(s\ne t),\)</span> 分别称作源点和汇点,
这样可以用一个五元组 <span class="math inline">\((V,E,c,s,t)\)</span>
表示一个容量网络 <span class="math inline">\(N\)</span>. 定义每条边
<span class="math inline">\(e\)</span> 的可行流为 <span
class="math inline">\(f(e),\)</span> 映射 <span
class="math inline">\(f:E\to \mathbb{R}_{\ge 0},\)</span> 表示大小为有
<span class="math inline">\(f(e)\)</span> 的<strong>流量</strong>流经边
<span class="math inline">\(e,\)</span> <span
class="math inline">\(f\)</span> 需满足两个要求:</p>
<p>1: 每条边的流量不能超过该边的容量, 即 <span
class="math inline">\(\forall e\in E,f(e)\le c(e).\)</span></p>
<p>2: 对于所有的非源点和汇点的点,
流入每个点的流量之和等于流出每个点的流量之和, 即 <span
class="math inline">\(\forall v\in V-\{s,t\},\)</span> 有 <span
class="math display">\[
\sum_{(u,v)\in E}f(u,v)=\sum_{(v,u)\in E}f(v,u)
\]</span></p>
<p>这很像基尔霍夫电流定律, 即流入每个结点的电流等于流出每个结点的电流.
为了方便, 用 <span
class="math inline">\(\mathrm{in}(v),\mathrm{out}(v)\)</span>
分别表示流入 <span class="math inline">\(v\)</span> 和流出 <span
class="math inline">\(v\)</span> 的流量, 在定义了广义结点后, <span
class="math inline">\(\mathrm{in}(),\mathrm{out}()\)</span>
的含义同样适用.</p>
<p>在上面两个要求的定义之下, 可以定义<strong>整张网络的流量</strong>
<span class="math inline">\(\mathcal{F}(f)\)</span> 为原点 <span
class="math inline">\(s\)</span> 的<strong>净流出量</strong>, 或者汇点
<span class="math inline">\(t\)</span> 的<strong>净流入量</strong>, 即
<span class="math display">\[
\mathcal{F}(f)=\mathrm{out}(s)-\mathrm{in}(s)=\mathrm{in}(v)-\mathrm{out}(v)
\]</span> 最关注的问题是最大流问题,
也就是求出一张容量网络的最大流量.</p>
<p>如果对于结点 <span class="math inline">\(u,v\)</span> 同时有 <span
class="math inline">\((u,v)\in E\land (v,u)\in E\)</span> ,
可以定义广义节点 <span class="math inline">\(v&#39;=\{u,v\},\)</span>
或者在 <span class="math inline">\(u,v\)</span> 之间插入一个节点 <span
class="math inline">\(k,\)</span> 并使 <span
class="math inline">\(c(v,k)=c(k,u)=c(v,u)\)</span> 或者 <span
class="math inline">\(c(u,k)=c(k,v)=c(u,v).\)</span>
在后面就默认两个结点之间有且仅有一条边.</p>
<p>容量网络中另一个有用的概念是<strong>割集</strong>: 对于 <span
class="math inline">\(N=(V,E,c,s,t),\)</span> 若 <span
class="math inline">\(A\subset V\)</span> 满足 <span
class="math inline">\(s\in A\land t\in \bar{A},\)</span> 则称 <span
class="math inline">\((A\times \bar{A})\cap E\)</span> 为 <span
class="math inline">\(N\)</span> 的一个割集, 记作 <span
class="math inline">\((A,\bar{A})\)</span> (这只是一种形式上的记法).
割集是一些边的集合, 这些边的流量之和 <span
class="math inline">\(\sum_{e\in (A,\bar{A})}c(e)\)</span>
称为割集的<strong>容量</strong>, 记作 <span
class="math inline">\(C(A,\bar{A}).\)</span> 割集就是把 <span
class="math inline">\(V\)</span> 分成两部分后,
端点分别在两部分的那部分边的集合, 和二分图很是相似.</p>
<p>若将 <span class="math inline">\(A,\bar{A}\)</span> 均看作广义节点,
那么整张网络中只剩下这两个结点, 此时显然有 <span
class="math inline">\(\mathcal{F}(f)=\mathrm{out}(A)-\mathrm{in}(A)=\mathrm{in}(\bar{A})-\mathrm{out}(\bar{A}),\)</span>
以及 <span class="math inline">\(\mathrm{out}(A)=
\mathrm{in}(\bar{A}),\mathrm{out}(\bar{A})= \mathrm{in}(A).\)</span></p>
<p>最关注的问题是最小割问题,
也就是求出一张容量网络的所有割集中容量最小的那个.</p>
<p>下面通过线性规划理论论述最大流与最小割的关系.</p>
<p>最大流与最小割都可以写成线性规划问题的形式.</p>
<p>最大流: <span class="math display">\[
\begin{aligned}
&amp;\max \sum_{(s,u)\in E}f(s,u)-\sum_{(u,s)\in E}f(u,s)\\
\text{s.t.}&amp;\forall e\in E,0\le f(e)\le c(e)\\
&amp;\forall v\in V-\{s,t\},\sum_{(u,v)\in E}f(u,v)=\sum_{(v,u)\in
E}f(v,u)
\end{aligned}
\]</span></p>
<p>最小割: <span class="math display">\[
\begin{aligned}
&amp;\min \sum_{e\in (A\times \bar{A})\cap E}c(e)\\
\text{s.t.}&amp; A\subset V\\
&amp; s\in A,t\in \bar{A}
\end{aligned}
\]</span></p>
<p>最大流问题和最小割问题实际上互为对偶问题, 下面证明这一结论.</p>
<p>考虑用式 <span
class="math inline">\(\mathcal{F}(f)=\mathrm{out}(A)-\mathrm{in}(A),\)</span>
则最大流问题是如下的线性规划问题 <span class="math display">\[
\begin{aligned}
&amp;\max \sum_{(s,u)\in (A\times \bar{A})\cap E}f(s,u)-\sum_{(u,s)\in
(\bar{A}\times A)\cap E}f(u,s)\\
\text{s.t.}&amp;\forall e\in E,0\le f(e)\le c(e)\\
&amp;\forall v\in V-\{s,t\},\sum_{(u,v)\in E}f(u,v)=\sum_{(v,u)\in
E}f(v,u)\\
&amp;A\subset V\\
&amp; s\in A,t\in \bar{A}
\end{aligned}
\]</span> 一共 <span class="math inline">\(m+n-2\)</span>
个约束条件(<span class="math inline">\(m\)</span> 个容量限制, <span
class="math inline">\(n-2\)</span> 个平衡条件) , <span
class="math inline">\(m\)</span> 个变量 <span
class="math inline">\(f(e),e\in E\)</span> , 则对偶问题有 <span
class="math inline">\(m+n-2\)</span> 个变量, <span
class="math inline">\(m\)</span> 个约束条件, 且变量可以写为 <span
class="math inline">\(g(e),e\in E,\)</span> 与 <span
class="math inline">\(m\)</span> 个不等式约束条件进行对应; <span
class="math inline">\(g_1,\cdots,g_{n-2},\)</span> 与 <span
class="math inline">\(n-2\)</span> 个等式约束条件进行对应,
于是对偶问题为 <span class="math display">\[
\begin{aligned}&amp;\min \sum_{e\in E} g(e)c(e)\\\text{s.t.}&amp;
g(e)\ge 0 \\&amp;\forall e\in (A\times \bar{A})\cap E,g(e)\ge
1\\&amp;\forall e\in (\bar{A}\times A)\cap E,g(e)\ge -1\\&amp;A\subset
V\\&amp; s\in A,t\in \bar{A}\end{aligned}
\]</span> 其中 <span class="math inline">\(g_1,\cdots,g_{n-2}\)</span>
是自由变量. 由于 <span class="math inline">\(\forall e,g(e)\ge
0,\)</span> 因此每个 <span class="math inline">\(g(e)\)</span>
都取最小值时 <span class="math inline">\(\sum_{e\in E} g(e)c(e)\)</span>
取得最小值, 此时 <span class="math display">\[
\sum_{e\in E} g(e)c(e)=\sum_{e\in (A\times \bar{A})\cap E}c(e)
\]</span> 因此上述优化问题就可以改写为 <span class="math display">\[
\begin{aligned}
&amp;\min \sum_{e\in (A\times \bar{A})\cap E}c(e)\\
\text{s.t.}&amp; A\subset V\\
&amp; s\in A,t\in \bar{A}
\end{aligned}
\]</span> 也就是最小割问题.
这就证得了最大流与最小割问题互为对偶问题.</p>
<p>下面介绍常见的算法.</p>
<h1 id="ff算法">FF算法</h1>
<p>首先是Ford-Fulkerson算法. 最简单的想法是,
从源点开始搜索到汇点的可行路径,
该条路径上的最小容量为该条路径上的可行流, 不断重复该过程,
直到没有可行路径为止, 所有可行流的流量.</p>
<p>给出一些定义:</p>
<ul>
<li>增广路: 考虑从 <span class="math inline">\(s\)</span> 到 <span
class="math inline">\(t\)</span> 的一条路径, 在该条路径中,
如果所有前向边非饱和, 所有后向边非零流, 则称这样的一条路径为增广路.</li>
</ul>
<p>FF算法就是通过DFS不断搜索增广路的过程, 需要注意的是,
每找到一条增广路且有 <span class="math inline">\(f(u,v)\)</span>
的流流过边 <span class="math inline">\((u,v)\)</span> 时, 需要再使 <span
class="math inline">\(-f(u,v)\)</span> 的流流过 <span
class="math inline">\((u,v)\)</span>, 即建立反向边 <span
class="math inline">\((v,u)\)</span>, 并使得 <span
class="math inline">\(f(u,v)\)</span> 的流流过 <span
class="math inline">\((v,u)\)</span>,
这个过程实际上相当于一个撤销返反悔的过程,
即在刚开始搜索得到的可行流可能并不是最优的,
它们中有的边可能并不需要经过.</p>
<p>下面给出FF算法的证明, 即下面的定理:</p>
<p>可行流 <span class="math inline">\(f\)</span> 是最大流的充要条件是
<span class="math inline">\(N\)</span> 中不存在增广路.</p>
<p><strong><em>PROOF</em></strong> 必要性: 如果 <span
class="math inline">\(f\)</span> 是最大流, 且仍然存在增广路,
设增广路可流的剩余流量为 <span
class="math inline">\(\delta&gt;0\)</span>,
显然可以继续从增广路增加流量, 增加 <span
class="math inline">\(\delta\)</span> 后的流 <span
class="math inline">\(f&#39;\)</span> 显然是最大流, 且此时不存在增广路,
这就证得了必要性.</p>
<p>充分性. 假设 <span class="math inline">\(N\)</span>
中不存在关于可行流 <span class="math inline">\(f\)</span> 的 <span
class="math inline">\(s-t\)</span> 增广路, 置集合 <span
class="math inline">\(A=\{j\in V:存在关于f的s-j增广路\}\)</span>, 同时令
<span class="math inline">\(s\in A\)</span>, 显然由条件可得 <span
class="math inline">\(t\not\in A\)</span>. 对任意 <span
class="math inline">\((i,j)\in (A,\bar{A})\)</span>, 必定有 <span
class="math inline">\(f(i,j)=c(i,j)\)</span>,
即割集中的每条边都是饱和的, 否则, 假设存在 <span
class="math inline">\((i,j)\)</span> 使得 <span
class="math inline">\(f(i,j)\le c(i,j)\)</span>, 由于 <span
class="math inline">\(i\in A\)</span>, 则 <span
class="math inline">\(s-i\)</span> 增广路可以延伸到 <span
class="math inline">\(j\)</span>, 这就意味着 <span
class="math inline">\(j\in A\)</span>, 这与 <span
class="math inline">\(j\in \bar A\)</span> 显然矛盾, 于是割集 <span
class="math inline">\((A,\bar{A})\)</span> 的每条边都是饱和的.
同理可以证明所有的 <span class="math inline">\((j,i)\in
(\bar{A},A)\)</span> 都是零流的, 即若存在非零流的 <span
class="math inline">\((j,i)\)</span>, 仍然可以得到 <span
class="math inline">\(j\in\bar{A}\)</span>, 矛盾! 于是 <span
class="math display">\[
v(f)=\sum_{(i,j)\in (A\times \bar{A})\cap E}f(s,u)-\sum_{(j,i)\in
(\bar{A}\times A)\cap E}f(u,s)=\sum_{(i,j)\in
(A,\bar{A})}c(i,j)=c(A,\bar{A})
\]</span> 这实际上就是最大流.这同时也再一次证明了最大流等于最小割.</p>
<p>FF的时间复杂度: 记 <span class="math inline">\(C=\sum_{(s,j)\in
E}c(s,j)\)</span>, 且容量均为整数,
则每次搜索后至少会当前可行流的流量至少增加 <span
class="math inline">\(1\)</span>, 且每次至多遍历所有的边,
于是时间复杂度为 <span class="math inline">\(O(C|E|)\)</span>,
与流量的大小成正比.</p>
<p>FF算法的过程, 在基础的DFS基础上, 遍历的时候要给点做一些标记,
包括点是否被访问过的标记, 到当前点 <span
class="math inline">\(j\)</span> 的前一个顶点 <span
class="math inline">\(i\)</span> 和 <span
class="math inline">\((i,j)\)</span> 为前向边还是反向边, 以及到当前点时
<span class="math inline">\(j\)</span>
的路径上的所有正向边的残存容量与反向边的容量的最小值.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://www.luogu.com.cn/problem/P3376</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">205</span>][<span class="number">205</span>]; <span class="comment">//采用邻接矩阵</span></span><br><span class="line"><span class="type">int</span> <span class="type">const</span> inf=<span class="number">0x7777777</span>;</span><br><span class="line"><span class="type">int</span> n,m,s,t,ans=<span class="number">0</span>,isv[<span class="number">105</span>];</span><br><span class="line"><span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> v,<span class="type">int</span> flow)</span></span>&#123; <span class="comment">//_min为这条增广路上的最小容量</span></span><br><span class="line">    <span class="keyword">if</span>(v==t)&#123;</span><br><span class="line">        <span class="keyword">return</span> flow; <span class="comment">//该增广路的流量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[v][i]&gt;<span class="number">0</span>&amp;&amp;isv[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            isv[i]=<span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> c=<span class="built_in">dfs</span>(i,<span class="built_in">min</span>(flow,a[v][i]));</span><br><span class="line">            <span class="keyword">if</span>(c!=<span class="number">-1</span>)&#123;</span><br><span class="line">                a[v][i]-=c;</span><br><span class="line">                a[i][v]=c;<span class="comment">//建反边</span></span><br><span class="line">                <span class="keyword">return</span> c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">FF</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    <span class="keyword">while</span>((c=<span class="built_in">dfs</span>(s,inf))&amp;&amp;c!=<span class="number">-1</span>)&#123;</span><br><span class="line">        ans+=c;</span><br><span class="line">        <span class="built_in">memset</span>(isv,<span class="number">0</span>,<span class="built_in">sizeof</span>(isv));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        cin&gt;&gt;a[x][y]; <span class="comment">//容量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">FF</span>();</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="ek算法">EK算法</h1>
<p>EK算法并没有在FF算法上做什么改进, 只是换了搜索方式,
即使用BFS而不是DFS. 但是这会使得EK算法的性能好于FF算法,
因为BFS能保证每次找到的增广路是最短的(假设边权为 <span
class="math inline">\(1\)</span>),
而DFS为了找到容量最大的增广路可能会绕远路.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line">ll a[<span class="number">205</span>][<span class="number">205</span>]; <span class="comment">//采用邻接矩阵</span></span><br><span class="line">ll <span class="type">const</span> inf=<span class="number">0xffffffffff</span>;</span><br><span class="line"><span class="type">int</span> n,m,s,t;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">ll flow[<span class="number">205</span>];<span class="comment">//流向每个结点的流量，其中流向源点的流量可以认为是inf</span></span><br><span class="line">ll last[<span class="number">205</span>];<span class="comment">//每个结点的前置结点，默认为-1，即如果为-1表示</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(last,<span class="number">-1</span>,<span class="built_in">sizeof</span>(last));</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())q.<span class="built_in">pop</span>();</span><br><span class="line">    flow[s]=inf;</span><br><span class="line">    q.<span class="built_in">push</span>(s);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        <span class="type">int</span> u=q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(u==t)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[u][i]&gt;<span class="number">0</span>&amp;&amp;last[i]==<span class="number">-1</span>&amp;&amp;i!=s)&#123;</span><br><span class="line">                last[i]=u;</span><br><span class="line">                flow[i]=<span class="built_in">min</span>(flow[u],a[u][i]);<span class="comment">//流向结点i的流量是流向u的流量与边(u,i)的当前容量的较小值</span></span><br><span class="line">                q.<span class="built_in">push</span>(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> last[t];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">EK</span><span class="params">()</span></span>&#123; <span class="comment">//要不停地进行bfs，直到无法搜索到汇点t</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">bfs</span>()!=<span class="number">-1</span>)&#123;<span class="comment">///每次搜索过后都要更新整张网络</span></span><br><span class="line">        ans+=flow[t];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=t;i!=s&amp;&amp;i!=<span class="number">-1</span>;i=last[i])&#123;</span><br><span class="line">            <span class="comment">// cout&lt;&lt;i&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">            flow[last[i]]=flow[i];</span><br><span class="line">            a[last[i]][i]-=flow[i];</span><br><span class="line">            a[i][last[i]]+=flow[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;s&gt;&gt;t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        ll w;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;w;</span><br><span class="line">        a[x][y]+=w; <span class="comment">//容量</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">EK</span>();</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="dinic算法">Dinic算法</h1>
<p>FF算法每次只能找到一条增广路, 同时每次寻找的时候都需要重新进行标号,
然后在寻找新的增广路时, 原来顶点的标号可能不变, 这样就造成了重复标号,
Dinic算法就是这样的思想, 借助已经做过的标记,
防止做重复性工作来提高效率.</p>
<p>现在定义关于容量网络 <span class="math inline">\(N\)</span>
上的可行流 <span class="math inline">\(f\)</span> 的辅助网络 <span
class="math inline">\(N(f)=\langle V,E_f,c_a,s,t
\mathbb{R}angle\)</span>: <span class="math inline">\(E_f=E^+_f\cup
E_f^-\)</span>, 其中 <span class="math inline">\(E^+_f=\{(i,j)\in
E:f(i,j)&lt;c(i,j)\},E_f^-=\{(j,i)\in E:f(i,j)&gt;0\}\)</span>, 即 <span
class="math inline">\(E_f^+\)</span> 并表示不饱和的正向边, <span
class="math inline">\(E_f^-\)</span> 表示流量大于零的反向边. <span
class="math inline">\(c_a:E_f\to\mathbb{R}_{+}\)</span> 满足 <span
class="math display">\[
c_a(i,j)=
\begin{cases}
c(i,j)-f(i,j),&amp;(i,j)\in E_f^+\\
f(j,i),&amp;(i,j)\in E_f^-
\end{cases}
\]</span> <span class="math inline">\(c_a\)</span> 称为辅助容量, 显然,
<span class="math inline">\(N(f)\)</span> 也是一个容量网络, <span
class="math inline">\(c_a\)</span> 是它的容量, 不难发现, <span
class="math inline">\(N(f)\)</span> 中的<span
class="math inline">\(s-t\)</span> 有向路径均为 <span
class="math inline">\(N\)</span> 中的 <span
class="math inline">\(s-t\)</span> 增广路.</p>
<p>首先想关注的问题是,辅助容量网络 <span
class="math inline">\(N(f)\)</span> 的最大流和原容量网络 <span
class="math inline">\(N\)</span> 的最大流有什么关系呢?
这是下面的定理:</p>
<p>设 <span class="math inline">\(N\)</span> 的最大流为 <span
class="math inline">\(v_N\)</span>, 则 <span
class="math inline">\(f\)</span> 是它的一可行流, 则 <span
class="math inline">\(N(f)\)</span>的最大流为 <span
class="math inline">\(v_N-v(f)\)</span>.</p>
<p><strong><em>PROOF</em></strong> 设 <span
class="math inline">\(N\)</span> 的一个割集为 <span
class="math inline">\((A,\bar{A})\)</span>, 显然它也是 <span
class="math inline">\(N(f)\)</span> 的一个割集, 记作 <span
class="math inline">\((A,\bar{A})_f\)</span>, <span
class="math inline">\((A,\bar{A})_f\)</span> 包括 <span
class="math inline">\((A,\bar{A})\)</span> 的非饱和正向边和非零流反向边,
设这两者的集合分别为 <span class="math inline">\(E_1,E_2\)</span>,
那么可以得到 <span class="math display">\[
\begin{aligned}
c_a((A,\bar{A})_f)
&amp;=\sum_{(i,j)\in E_1}(c(i,j)-f(i,j))+\sum_{(i,j)\in E_2}f(j,i)\\
&amp;=\sum_{(i,j)\in (A,\bar{A})}(c(i,j)-f(i,j))+\sum_{(j,i)\in
(\bar{A},A)}f(j,i)\\
&amp;=\sum_{e\in (A,\bar{A})}c(e)-\left(\sum_{(i,j)\in
(A,\bar{A})}f(i,j)-\sum_{(j,i)\in (\bar{A},A)}f(j,i) \right)\\
&amp;=c(A,\bar{A})-v(f)
\end{aligned}
\]</span> 且 <span class="math inline">\(c(A,\bar{A})=v_N\)</span>,
这就证得了 <span
class="math inline">\(c_a((A,\bar{A})_f)=v_N-v(f)\)</span>, 同时 <span
class="math inline">\(c_a((A,\bar{A})_f)\)</span> 也为 <span
class="math inline">\(N(f)\)</span> 的最大流.</p>
<p>设 <span class="math inline">\(f\)</span> 为 <span
class="math inline">\(N\)</span> 上的可行流, <span
class="math inline">\(g\)</span> 为 <span
class="math inline">\(N(f)\)</span> 上的可行流, 定义 <span
class="math inline">\(f&#39;=f+g\)</span> 满足对任意 <span
class="math inline">\((i,j)\in E\)</span> 都有 <span
class="math inline">\(f&#39;(i,j)=f(i,j)+g(i,j)-g(j,i)\)</span>, 那么
<span class="math inline">\(f+g\)</span> 也是 <span
class="math inline">\(N\)</span> 上的可行流, 且满足 <span
class="math inline">\(v(f+g)=v(f)+g(f)\)</span>.</p>
<p>现在在 Dinic 算法中引入分层的思想. 设 <span
class="math inline">\(s\)</span> 的层数为 <span
class="math inline">\(0\)</span>, 顶点 <span
class="math inline">\(u\)</span> 的层数 <span
class="math inline">\(d(u)\)</span> 定义为 <span
class="math inline">\(s\)</span> 到 <span
class="math inline">\(u\)</span> 的最短路径, 且边权定义为 <span
class="math inline">\(1\)</span>, 这通过一次BFS便可预处理出, 并令 <span
class="math inline">\(d=d(t)\)</span>, 显然要获得最短的可行流,
可行流不可能从高层流向低层, 同时不会经过 <span
class="math inline">\(d(x)&gt;d\)</span> 的点 <span
class="math inline">\(x\)</span>. 现在定义分层辅助网络 <span
class="math inline">\(N_A(f)\)</span> 为删去 <span
class="math inline">\(N(f)\)</span> 中冗余的边和点,
冗余的边和点定义如上, 即高层到低层的边以及层数大于 <span
class="math inline">\(d\)</span> 的点, 用符号表示为 <span
class="math inline">\(N_A(f)=(V_f,E_A(f),c_a,s,t)\)</span>, 且 <span
class="math inline">\(\displaystyle V_f=\bigcup_{0 \le k\le
d}V_{f_k},V_{f_k}=\{i\in V:d(i)=k\},0\le k\le
d-1,V_{f_d}=\{t\}\)</span>, <span class="math inline">\(\displaystyle
E_A(f)=\bigcup_{0\le k\le d-1}E_{f_k},E_{f_k}=\{(i,j)\in E_f:i\in
V_{f_k}\land j\in V_{f_{k+1}}\}\)</span>. 即 <span
class="math inline">\(V_{f_k}\)</span> 表示第 <span
class="math inline">\(k\)</span> 层顶点的集合, <span
class="math inline">\(E_{f_k}\)</span> 表示起点为第 <span
class="math inline">\(k\)</span> 层顶点终点为第 <span
class="math inline">\(k+1\)</span> 层顶点的有向边. 于是 <span
class="math inline">\(N_A(f)\)</span> 实际上是一个有向无环图,
且只有一个源点和汇点.</p>
<p>如果 <span class="math inline">\(N\)</span> 中不存在关于 <span
class="math inline">\(f\)</span> 的且不含反向边的增广路, 那么称 <span
class="math inline">\(f\)</span> 为 <span
class="math inline">\(N\)</span> 中的极大流.
显然可行流是最大流的必要条件是可行流为极大流. Dinic算法的关键步骤是求
<span class="math inline">\(N_A(f)\)</span> 的极大流, 即在 <span
class="math inline">\(N_A(f)\)</span> 中找到尽可能多的可行流.</p>
<p>对于每个顶点而言, 能流经该顶点 <span class="math inline">\(i\)</span>
的最大流量显然为终点为该顶点的边的容量和与起点为该顶点边的容量和这两者之间的最小值,
记作 <span class="math inline">\(\ell(i)\)</span>, 规定 <span
class="math inline">\(\ell(s)=\ell(t)=\infty\)</span>.</p>
<p>求 <span class="math inline">\(N_A(f)\)</span>
的极大流的过程也类似于寻找增广路, 但是不像FF算法那样一条一条的找,
而是一次找多条. 在定义过顶点最大流量 <span
class="math inline">\(\ell\)</span> 后, 只需要删去满足 <span
class="math inline">\(\ell(u)=0\)</span> 的顶点及其边, 在剩下的顶点中,
假设 <span class="math inline">\(k=\arg\min_{y\in E_A(f)}
\ell(y)\)</span>, 那么就把流量 <span
class="math inline">\(\ell(k)\)</span> 推送到 <span
class="math inline">\(t\)</span>, 再反向推送到 <span
class="math inline">\(s\)</span>, 接着删去 <span
class="math inline">\(k\)</span> 及其相邻的边, 然后再删去 <span
class="math inline">\(N(f)\)</span> 中已经饱和的边, 得到新的 <span
class="math inline">\(N_A(f)\)</span>, 直到 不存在从 <span
class="math inline">\(s\)</span> 到 <span
class="math inline">\(t\)</span> 的路径为止, 此时便得到了 <span
class="math inline">\(N_A(f)\)</span> 的极大流 <span
class="math inline">\(g\)</span>, 接着置 <span
class="math inline">\(f:=f+g\)</span> 即可, 直到 <span
class="math inline">\(N(f)\)</span> 中也不存在从 <span
class="math inline">\(s\)</span> 到 <span
class="math inline">\(t\)</span> 的路径, 算法即可停止.</p>
<p>Dinic 算法得到的 <span class="math inline">\(f\)</span> 是最大流,
且复杂度为 <span class="math inline">\(O(|V|^3)\)</span>.</p>
<p><strong><em>PROOF</em></strong> 算法终止时, <span
class="math inline">\(N(f)\)</span> 不存在从 <span
class="math inline">\(s\)</span> 到 <span
class="math inline">\(t\)</span> 的路径, 这意味着 <span
class="math inline">\(N(f)\)</span> 的最大流为零, 于是 <span
class="math inline">\(v_N=v(f)\)</span>, 即 <span
class="math inline">\(f\)</span> 为 <span
class="math inline">\(N\)</span> 的最大流. 注意到每个阶段的 <span
class="math inline">\(N_A(f)\)</span> 中的 <span
class="math inline">\(d(t)\)</span> 都大于前一阶段的 <span
class="math inline">\(d(t)\)</span>, 而整张图中最长路径为 <span
class="math inline">\(|V|\)</span>, 于是至多有 <span
class="math inline">\(|V|\)</span> 个阶段. 在每个阶段中,
需要做的事情包括构造 <span class="math inline">\(N_A(f)\)</span> 和计算
<span class="math inline">\(\ell\)</span>, 这在一次BFS中可以做到,
复杂度为 <span class="math inline">\(O(|E|)\)</span>; 接着需要计算极大流
<span class="math inline">\(g\)</span>, 包括删边和修改容量,
删边的次数显然为 <span class="math inline">\(O(|E|)\)</span> 次,
而对于修改容量, 由于 <span class="math inline">\(N_A(f)\)</span>
为有向无环图, 则推送最小 <span class="math inline">\(\ell(k)\)</span>
时至多推送 <span class="math inline">\(|V|\)</span> 次,
每次推送修改容量至多修改 <span class="math inline">\(|V|\)</span> 次,
于是工作为 <span class="math inline">\(O(|V|^2)\)</span>,
因此每个阶段的复杂度为 <span
class="math inline">\(O(|E|)+O(|E|)+O(|V|^2)=O(|V^2|)\)</span>,
于是最终的复杂度为 <span class="math inline">\(O(|V|^3)\)</span>.</p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>一些做题记录</title>
    <url>/2023/07/25/essay/essay/</url>
    <content><![CDATA[<h1 id="p2949">P2949</h1>
<p>优先队列<code>priority_queue</code>默认大根堆, 如果要实现小根堆:
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;q;</span><br></pre></td></tr></table></figure></p>
<p>优先队列的元素为 <code>pair&lt;int,int&gt;</code> 时,
入队的排序依据为第一个元素.</p>
<p>结构体入队时, 通过重载实现比较方式:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_foo</span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="keyword">friend</span> <span class="type">bool</span> <span class="keyword">operator</span> &gt; (_foo x,_foo y)&#123; <span class="comment">// 一般不重载 &lt;</span></span><br><span class="line">        <span class="keyword">return</span> x.b &lt; y.b; <span class="comment">// 符号相同为大根堆</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;foo;</span><br><span class="line">priority_queue&lt;foo&gt;q; <span class="comment">// 小根堆</span></span><br></pre></td></tr></table></figure>
<h1 id="loj10001">LOJ10001</h1>
<p>https://loj.ac/p/10001</p>
<p>暴力可过, 先假设每个点都种即 <code>ans=n</code>,
然后从头到尾扫描一遍, 如果不种不违反约束条件(不会导致某个区间的树不够)就
<code>ans--</code>, <span class="math inline">\(O(nh)\)</span>.</p>
<p>更快的方法是差分约束, 考虑前缀和, 约束条件可以转化为 <span
class="math inline">\(S_{e_j}-S_{b_j -1}\ge t_j\)</span> 的形式.
(没学过, 有时间再学)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://loj.ac/p/10001</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">5e3</span>,maxn2=<span class="number">3e4</span>;</span><br><span class="line"><span class="type">int</span> sug[maxn+<span class="number">5</span>][<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> num[maxn+<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,h,ans=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;h;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line">        cin&gt;&gt;sug[i][<span class="number">0</span>]&gt;&gt;sug[i][<span class="number">1</span>]&gt;&gt;sug[i][<span class="number">2</span>];</span><br><span class="line">        num[i]=sug[i][<span class="number">1</span>]-sug[i][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=n;k++)&#123;</span><br><span class="line">        <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(k&gt;=sug[i][<span class="number">0</span>]&amp;&amp;k&lt;=sug[i][<span class="number">1</span>]&amp;&amp;num[i]==sug[i][<span class="number">2</span>])&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            ans--;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;h;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(k&gt;=sug[i][<span class="number">0</span>]&amp;&amp;k&lt;=sug[i][<span class="number">1</span>])&#123;</span><br><span class="line">                    num[i]--;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="loj10002">LOJ10002</h1>
<p>首先考虑每个圆能够覆盖的区间,
用勾股定理将问题转化为从若干区间中选择最少的能覆盖给定区间的区间.
接着按照右端点排序, 从左到右进行覆盖, 记录当前能覆盖到的区间的右端点
<code>crt</code>, 在剩下的区间中选择左端点小于 <code>crt</code>
的且右端点最大的区间即可, 当不存在这样的区间或者最大的区间右端点小于
<code>L</code> 时输出 <code>-1</code>.</p>
<p>注意涉及到比较和运算的变量都要设置为浮点型.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> crt=<span class="number">0</span>;<span class="comment">// 覆盖到的区间的右端点</span></span><br><span class="line"><span class="type">int</span> flag=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">if</span>(arr[<span class="number">0</span>].r&lt;L)&#123;</span><br><span class="line">    cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (crt&lt;L)&#123;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!isv[i]&amp;&amp;arr[i].l&lt;crt)&#123;</span><br><span class="line">                isv[i]=<span class="number">1</span>;</span><br><span class="line">                ans++;</span><br><span class="line">                crt=arr[i].r;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123; <span class="comment">// 不存在左端点小于crt的线段</span></span><br><span class="line">            cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">            is_out=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!is_out)</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="p2158">P2158</h1>
<p>找到满足 <span class="math inline">\(2\le x &lt; y \le n-1\land
\gcd(x,y)=1\)</span> 的 <span class="math inline">\((x,y)\)</span>
的对数, 最后结果乘2加上 <span class="math inline">\(3\)</span> 即可,
显然是转化为欧拉函数的前缀和, 最终答案为</p>
<p><span class="math display">\[
\mathtt{ans}=2\sum_{i=2}^{n-1}\varphi(n)+3
\]</span></p>
<p>用线性筛求积性函数即可, <span class="math inline">\(O(n)\)</span>. 当
<span class="math inline">\(p_j\mid i\)</span> 时, 设 $i=kp_j^{a} $,
<span
class="math inline">\(\varphi(ip_j)=\varphi(kp_j^{a+1})=\varphi(k)(p_j^{a+1}-p_j^a)=\varphi(kp_{j}^a)p_j=\varphi(i)p_j\)</span>.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> phi[N],p[N],isv[N],cnt=<span class="number">0</span>,n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Euler</span><span class="params">()</span></span>&#123;</span><br><span class="line">    isv[<span class="number">1</span>]=phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!isv[i])&#123;</span><br><span class="line">            p[++cnt]=i; <span class="comment">//记录素数</span></span><br><span class="line">            phi[i]=i<span class="number">-1</span>; <span class="comment">// 欧拉函数的性质</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*p[j]&lt;=n;j++)&#123;</span><br><span class="line">            isv[i*p[j]]=<span class="number">1</span>; <span class="comment">// 筛掉</span></span><br><span class="line">            <span class="keyword">if</span>(i%p[j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                phi[i*p[j]]=phi[i]*phi[p[j]]; <span class="comment">// 如果i和p[j]互质</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                phi[i*p[j]]=phi[i]*p[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>好像也可以用莫比乌斯反演求 <span class="math inline">\(\displaystyle
\sum_{i=1}^{n-1}\sum_{j=1}^{n-1}[\gcd(i,j)=1]\)</span>, <a
href="https://www.luogu.com.cn/problem/P2522">这里</a>是个更一般的题.
不会做.</p>
]]></content>
  </entry>
  <entry>
    <title>机器学习（1）：回归与分类</title>
    <url>/2023/01/05/ML/ml-regresion-and-clar/</url>
    <content><![CDATA[<!-- $$
\newcommand{\mb}{\mathbf}
\newcommand{\eps}{\varepsilon}
\newcommand{\bar}{\overline}
\newcommand{\boldsymbol}{\boldsymbol}
$$ -->
<p>这部分与数理统计中的多元线性回归（最小二乘法），一些优化迭代算法以及简单的矩阵微分有重叠，比较简单，主要引入了一些概念，不过也是新瓶装旧酒，没什么新的东西。</p>
<h2 id="术语与记号含义">术语与记号含义</h2>
<p><span class="math inline">\(x\)</span> 为输入变量或特征(features),
<span class="math inline">\(y\)</span> 为输出变量.</p>
<p>训练集(training set): <span
class="math inline">\(\mathcal{T}=\{(x^{(i)},y^{(i)}):i=1,\cdots,m
\},\)</span> 输入集 <span class="math inline">\(\cal X,\)</span> 输出集
<span class="math inline">\(\cal Y.\)</span></p>
<p>监督学习(supervised learning)问题实际上是: 给定训练集,
通过学习得到映射 <span class="math inline">\(h:\cal X\to Y,\)</span>
使得 <span class="math inline">\(h(x)\)</span> 能够很好地对 <span
class="math inline">\(y\)</span> 进行预测, <span
class="math inline">\(h\)</span> 又被称为假设(hypothesis).</p>
<p>如果 <span class="math inline">\(Y\)</span> 是连续集/不可列, 那么确定
<span class="math inline">\(h\)</span>
的过程称为<strong>回归</strong>(regression)问题; 如果 <span
class="math inline">\(Y\)</span> 是离散集/可列, 那么确定 <span
class="math inline">\(h\)</span>
的过程称为<strong>分类</strong>(classification)问题.
本部分将解决线性回归问题与二元分类问题.</p>
<blockquote>
<p>训练集实际上就是样本的集合捏</p>
</blockquote>
<p>自然对数用 <span class="math inline">\(\log\)</span> 而不是 <span
class="math inline">\(\ln.\)</span></p>
<h3 id="和概率论中的记号区分">和概率论中的记号区分</h3>
<p>这部分会出现很多概率论中的东西, 一些记号做如下修改:</p>
<ul>
<li>密度函数用 <span class="math inline">\(p(x;\theta)\)</span> 而不是
<span class="math inline">\(f(x;\theta)\)</span></li>
<li>01分布/伯努利分布 <span class="math inline">\(B(1,p)\)</span> 的参数
<span class="math inline">\(p\)</span> 写成 <span
class="math inline">\(\phi,\)</span> 为了与概率密度做区分,
伯努利分布记作 <span
class="math inline">\(\mathrm{Bernoulli}(\phi),\)</span> 太长了,
还是用二项分布的记号简记为 <span
class="math inline">\(B(1,\phi)\)</span> 吧.</li>
<li>随机变量不再用大写字母, 当说某个依赖于参数的随机变量服从某个分布时,
参数写明, 以正态分布为例, 写成 <span class="math inline">\(x;\theta\sim
N(\mu,\sigma^2),\)</span> 如果是条件分布, 比如在随机变量 <span
class="math inline">\(x\)</span> 已知的条件下 <span
class="math inline">\(y\)</span> 服从正态分布, 则写成 <span
class="math inline">\(y|x;\theta\sim N(\mu,\sigma^2).\)</span></li>
</ul>
<h2 id="线性回归">线性回归</h2>
<p>线性函数的形式较为简单且性质较好, 是我们常常研究的对象, 此时 <span
class="math inline">\(h(x)\)</span> 具有 <span
class="math inline">\(h_{\theta}(x)=\theta_0+\theta_1x_1+\cdots+\theta_nx_n\)</span>
的形式, 就像<a href="">多元线性回归</a>那样, 为了简便令 <span
class="math inline">\(x=(x_0,x_1,\cdots,x_n)\in\mathbb{R}^{n+1},x_0=1,\theta=(\theta_0,\cdots,\theta_n)\in\mathbb{R}^{n+1},\)</span>
于是就有 <span class="math display">\[
h_{\theta}(x)=\theta^Tx
\]</span> 对于给定 <span class="math inline">\(\cal T,\)</span> 要确定
<span class="math inline">\(\theta,\)</span>
采用的方法和多元线性回归基本一致,
在这里是选择使<strong>代价函数</strong>(cost function)值最小的参数 <span
class="math inline">\(\theta,\)</span> 即下面的优化问题 <span
class="math display">\[
\begin{aligned}
&amp;\min J(\theta)=\frac{1}{2}\sum_{i=1}^m(\theta^Tx^{(i)}-y^{(i)})^2\\
\text{s.t. }&amp;\theta\in\mathbb{R}^{n+1}
\end{aligned}
\]</span></p>
<blockquote>
<p>在多元线性回归部分, <span class="math inline">\(Q(\theta)\)</span>
并无系数 <span class="math inline">\(1/2,\)</span> 这里加上 <span
class="math inline">\(1/2\)</span> , 可以在求导的时候系数不出现 <span
class="math inline">\(2,\)</span> 并无大碍.</p>
</blockquote>
<p>多元线性回归部分已经给出了该问题的闭式解(又称为normal equations):
<span
class="math inline">\(\theta=(X^TX)^{-1}X^T\boldsymbol{y},\)</span>
这里的 <span class="math inline">\(X,\boldsymbol{y}\)</span>
与多元线性回归的 <span class="math inline">\(X,Y\)</span> 含义基本一致,
表达也相同, 注意大小写即可. 在多元线性回归部分同样给出了<a
href="">为什么最小二乘法采用平方而不是四次方之类的</a>原因.
这部分不再赘述, 下面介绍用优化算法求解上述优化问题的做法.</p>
<h3 id="借助最速下降法求解">借助最速下降法求解</h3>
<p>根据<a href="">最速下降法</a>的迭代公式: <span
class="math display">\[
\begin{aligned}
&amp;x_{k+1}=x_k-\alpha_kg_k\\
&amp;g_k=\nabla f(x)\\
&amp;\alpha_k=\arg\min_{\alpha&gt;0}f(x_k-\alpha g_k)
\end{aligned}
\]</span> 在这里, 迭代过程中要执行赋值语句 <span class="math display">\[
\theta_j:=\theta_j-\alpha \frac{\partial J}{\partial \theta_j},\forall
j=0,\cdots,n
\]</span> 其中步长 <span class="math inline">\(\alpha\)</span>
又被称为学习率(learning rate), 且 <span class="math display">\[
\begin{aligned}
\frac{\partial J}{\partial \theta_j}
&amp;=\frac{\partial }{\partial
\theta_j}\frac{1}{2}\sum_{i=1}^m(\theta^Tx^{(i)}-y^{(i)})^2\\
&amp;=\sum_{i=1}^m(\theta^Tx^{(i)}-y^{(i)})x_{j}^{(i)}
\end{aligned}
\]</span> 于是迭代公式为 <span class="math display">\[
\boxed{\theta_j:=\theta_j-\alpha\sum_{i=1}^m(\theta^Tx^{(i)}-y^{(i)})x_{j}^{(i)},\forall
j=0,\cdots,n}
\]</span></p>
<blockquote>
<p>CS229的notes里给出的是固定步长而不是最优步长.</p>
</blockquote>
<h3 id="随机梯度下降sgd">随机梯度下降SGD</h3>
<p>上面这种梯度下降法又被称为batch gradient descent,
每次迭代都需要遍历整个训练集 <span class="math inline">\(\cal
T,\)</span> 当 <span class="math inline">\(\#\cal T=m\)</span>
不太大时这种方法是行之有效的且收敛的, 但是 <span
class="math inline">\(m\)</span> 太大的时候这种方式显然代价太高,
此时随机算法就有更大的优势. 随机梯度下降(stochastic gradient descent,
SGD)每次只</p>
<h3 id="局部加权回归locally-weighted-regression">局部加权回归(locally
weighted regression)</h3>
<p>局部加权回归的思想是, 在求 <span
class="math inline">\(h_{\theta}(x)\)</span> 时更关注 <span
class="math inline">\(x\)</span> 附近的训练样本,
即让这部分在代价函数中的占比更大, 而远离 <span
class="math inline">\(x\)</span> 的那部分训练样本占比变小一些,
于是给每一项增加权重 <span class="math inline">\(w^{(i)},\)</span>
代价函数修改为 <span class="math display">\[
J(\theta)=\sum_{i=1}^mw^{(i)}(y^{(i)}-\theta^Tx^{(i)})^2
\]</span> 其中 <span class="math display">\[
w^{(i)}=\exp\left(-\frac{\|x^{(i)}-x\|^2}{2\tau^2} \right),
\]</span> 是 <span class="math inline">\(x\)</span> 的函数, 保证在确定
<span class="math inline">\(h_{\theta}(x)\)</span>
的时候将重点放在要预测的值得附近. 容易看出 <span
class="math inline">\(\|x^{(i)}-x\|\to 0\)</span> 时 <span
class="math inline">\(w^{(i)}\to 1,\)</span> 而 <span
class="math inline">\(\|x^{(i)}-x\|\to \infty\)</span> 时 <span
class="math inline">\(w^{(i)}\to 0,\)</span>
这权重的设置符合我们的预期.</p>
<blockquote>
<p><span class="math inline">\(w^{(i)}\)</span>
的形式很像正态分布的概率密度(不过两者并无直接关系), 参数 <span
class="math inline">\(\tau\)</span> 被称为bandwidth参数,
大小会影响权重的分布导致过拟合 (overfit) 或你和不足 (underfit),
具体如何影响的细节见习题.</p>
<p><span class="math inline">\(w^{(i)}\)</span> 的另一种形式是 <span
class="math display">\[
w^{(i)}=\exp\left(-\frac{1}{2}(x^{(i)}-x)^T\Sigma^{-1}(x^{(i)}-x)
\right),
\]</span> 其中 <span class="math inline">\(\Sigma \in
\mathbb{R}^{(n+1)\times (n+1)}\)</span> 是可逆矩阵.</p>
</blockquote>
<p><strong>参数学习算法(parametric learning
algorithm)与非参数学习(non-parametric learning algorithm)</strong>:</p>
<ul>
<li></li>
<li></li>
</ul>
<h2 id="分类与-logistic-回归">分类与 logistic 回归</h2>
<p>分类问题中最简单的一种就是 <span class="math inline">\(\#
Y=2\)</span> 即二元分类的情形, 此时 <span
class="math inline">\(Y\)</span> 可以表示为 <span
class="math inline">\(\{0,1\},\{+,-\}\)</span> 等等集合, <span
class="math inline">\(0\)</span> 被称为 negtive class, <span
class="math inline">\(1\)</span> 被称为 positive class.</p>
<p>离散的问题往往不是那么好处理,
于是我们希望将二元分类问题转化为连续的问题并用回归的方式来解决.
单位阶跃函数 <span class="math inline">\(y=\delta(x)\)</span> 满足值为
<span class="math inline">\(0,1\)</span> 但不好处理,
一个方案是选择其他形状与其相似的连续函数并采用四舍五入的处理, sigmond
函数 <span class="math inline">\(\displaystyle
g(z)=\frac{1}{1+\mathrm{e}^{-z}}\in(0,1)\)</span> 是一个很好的选择,
同时我们想利用线性回归得到的 <span
class="math inline">\(\theta^Tx\in\mathbb{R},\)</span> 毕竟 sigmond
函数只有在 <span class="math inline">\(z&gt;0\)</span> 时 <span
class="math inline">\(&gt;0.5,\)</span> <span
class="math inline">\(z&lt;0\)</span> 时 <span
class="math inline">\(&lt;0.5,\)</span> <span
class="math inline">\(y\)</span> 与 <span
class="math inline">\(x\)</span> 显然不会满足这种关系,
于是可以可以构造代价函数为 <span class="math display">\[
h_{\theta}(x)=g(\theta^Tx)=\frac{1}{1+\mathrm{e}^{-\theta^Tx}}
\]</span> 下面根据代价函数确定参数 <span
class="math inline">\(\theta.\)</span></p>
<p>由于最小二乘法与 MLE 在求解参数 <span
class="math inline">\(\theta\)</span> 时是一脉相承的,
因此在这里我们将使用 MLE 确定参数 <span
class="math inline">\(\theta\)</span>
(毕竟最小二乘法仅仅适用于线性回归), 需要构造概率密度. 由于 <span
class="math inline">\(h_{\theta}(x)\in(0,1),\)</span> 不妨设 <span
class="math inline">\(P(y=1|x;\theta)=h_{\theta}(x),\)</span> 则 <span
class="math inline">\(P(y=0|x;\theta)=1-h_{\theta}(x).\)</span></p>
<blockquote>
<p>这里采用了条件概率的记号 <span
class="math inline">\(P(y=1|x;\theta),\)</span> 因为 <span
class="math inline">\(y\)</span> 的值是依赖于 <span
class="math inline">\(x\)</span> 的, 而其中使用了分号 <span
class="math inline">\(;\)</span> 而不是逗号, 是因为 <span
class="math inline">\(\theta\)</span> 是参数而非随机变量,
如果使用逗号的话, 写在 <span class="math inline">\(|\)</span>
的后面就认为 <span class="math inline">\(\theta\)</span>
也是随机变量了.</p>
</blockquote>
<p>为了在计算过程的简便, 将这两种情况合并, 可以将 <span
class="math inline">\(y\)</span> 的条件概率密度 <span
class="math inline">\(p(y|x;\theta)=h_{\theta}(x)^{y}(1-h_{\theta}(x))^{1-y},\)</span>
于是在训练集样本相互独立的条件下, 似然函数 <span class="math display">\[
L(\theta)=\prod_{i=1}^m
h_{\theta}(x^{(i)})^{y^{(i)}}(1-h_{\theta}(x^{(i)}))^{1-y^{(i)}}
\]</span> 为了便于求导取对数: <span class="math display">\[
\begin{aligned}
\ell(\theta)
&amp;=\log L(\theta)\\
&amp;=\sum_{i=1}^m
-(1-y^{(i)})\theta^Tx^{(i)}-\log(1+\mathrm{e}^{-\theta^T x^{(i)}})
\end{aligned}
\]</span> <span class="math inline">\(\theta\)</span> 满足 <span
class="math display">\[
\frac{\partial }{\partial \theta}\ell(\theta)=0
\]</span> 考虑每一个 <span class="math inline">\(\theta_j,\)</span> 有
<span class="math display">\[
\begin{aligned}
\frac{\partial }{\partial \theta_j}\ell(\theta)
&amp;=\sum_{i=1}^m
\left[-(1-y^{(i)})x_j^{(i)}-\frac{-\mathrm{e}^{-\theta^T
x^{(i)}}}{1+\mathrm{e}^{-\theta^T x^{(i)}}}x_j^{(i)}\right] \\
&amp;=\sum_{i=1}^m
\left[-(1-y^{(i)})+\left(1-\frac{1}{1+\mathrm{e}^{-\theta^T
x^{(i)}}}\right) \right]x_j^{(i)}\\
&amp;=\sum_{i=1}^m(y^{(i)}-h_{\theta}(x^{(i)}))x_j^{(i)}
\end{aligned}
\]</span></p>
<blockquote>
<p>如果能注意到 <span class="math inline">\(g(z)\)</span> 满足 <span
class="math inline">\(g&#39;(z)=g(z)(1-g(z))\)</span> 的话, 用链式法则求
<span class="math inline">\(\frac{\partial }{\partial
\theta_j}\ell(\theta)\)</span> 不失为更好的选择.</p>
</blockquote>
<p>这导函数的零点显然是无法用初等函数显式表达出来, 于是可以考虑用<a
href="">最速下降法</a>或<a href="">牛顿法</a>, 迭代过程中更新公式分别为
<span class="math display">\[
\theta_j:=\theta_j+\alpha\sum_{i=1}^m(y^{(i)}-h_{\theta}(x^{(i)}))x_j^{(i)}
\]</span></p>
<blockquote>
<p>注意这里是 <span class="math inline">\(+,\)</span>
因为是求最大值的优化问题: <span class="math display">\[
\begin{aligned}
&amp;\max \ell(\theta)\\
\text{s.t. }&amp; \theta \in\mathbb{R}^{n+1}
\end{aligned}
\]</span> 应沿梯度方向迭代而不是负梯度方向.</p>
</blockquote>
<p>将这与线性回归的最速下降法迭代公式作比较,
可以很惊讶地发现两者的形式是完全吻合的.</p>
<p>牛顿法: <span class="math display">\[
\theta:=\theta-\nabla^2\ell(\theta)^{-1}g
\]</span> 其中 <span class="math inline">\(g=\nabla
\ell(\theta),\)</span> 这里采用的是最原始的牛顿法而不是修正牛顿法.</p>
<blockquote>
<p>通过构造的概率密度得到的 <span
class="math inline">\(\ell(\theta)\)</span> 具有非常好的性质, 它在 <span
class="math inline">\(\mathbb{R}^n\)</span> 是凸的,
因此无需再考虑最速下降法或牛顿法会陷入局部最优解的情况了,
因为凸优化问题的局部最优解一定是全局最优解.</p>
</blockquote>
<h2 id="广义线性模型glm">广义线性模型(GLM)</h2>
<p>不管是线性回归还是 logistics 回归, 它们都隶属于概率论中的回归分析,
也就是说 <span class="math inline">\(y\)</span> 总是一个随机变量,
依赖于自变量 <span class="math inline">\(x\)</span> 和参数 <span
class="math inline">\(\theta\)</span> 以及随机误差 <span
class="math inline">\(e,\)</span> 若假定 <span
class="math inline">\(e\sim N(0,\sigma^2),\)</span> 那么 <span
class="math inline">\(y|x;\theta\sim N(\mu,\sigma^2),\)</span> 其中
<span class="math inline">\(\mu=h_{\theta}(x);\)</span> 对于分类问题,
比如二元分类问题, <span class="math inline">\(y|x;\theta\sim
B(1,\phi).\)</span> 在广义线性模型中, <span
class="math inline">\(y\)</span> 的分布不再局限于上面两种形式,
最常见的是指数类型的分布, 这类分布满足概率密度为: <span
class="math display">\[
p(y;\eta)=b(y)\mathrm{e}^{\eta^TT(y)-a(\eta)}
\]</span> 叫做<strong>指数分布族(Exponential family)</strong>, 其中参数
<span class="math inline">\(\eta\)</span> 称为自然参数 (natural
parameter/canonical parameter), <span
class="math inline">\(b(y),T(y)\)</span> 都是 <span
class="math inline">\(y\)</span> 的函数, <span
class="math inline">\(T(y)\)</span> 被称为充分统计量(sufficient
statistic), 对于常见的分布, 一般有 <span
class="math inline">\(T(y)=y\)</span> ; <span
class="math inline">\(a(\eta)\)</span> 是 <span
class="math inline">\(\eta\)</span> 的函数, 它的主要作用是保证 <span
class="math display">\[
\int_{\mathbb{R}^n}p(y;\eta)\mathrm{d} y=1\text{ or }\sum p(y;\eta)=1
\]</span> 使其符合概率密度应满足的特点.</p>
<p>显然, 伯努利分布和正态分布都是指数类型的分布, 下面将说明这一点.</p>
<p><strong>伯努利分布</strong>:</p>
<p>设 <span class="math inline">\(y;\phi\sim
B(1,\phi),y\in\{0,1\},\)</span> 则 <span class="math display">\[
\begin{aligned}
p(y;\phi)
&amp;=\phi^y(1-\phi)^{(1-y)}\\
&amp;=(\exp y\log \phi)\cdot(\exp(1-y)\log(1-\phi))\\
&amp;=\exp \left(y\log\frac{\phi}{1-\phi}+\log(1-\phi)\right)
\end{aligned}
\]</span> 显然就有 <span class="math inline">\(b(y)=1,T(y)=t,\)</span>
且 <span class="math display">\[
\eta=\log\frac{\phi}{1-\phi}\Rightarrow
\phi=\frac{1}{1+\mathrm{e}^{-\eta}}
\]</span> 于是 <span
class="math inline">\(a(\eta)=-\log(1-\phi)=\log\frac{\mathrm{e}^{-\eta}}{1+\mathrm{e}^{-\eta}}=-\log(1+\mathrm{e}^{\eta}).\)</span></p>
<p><strong>正态分布</strong>:</p>
<p>设 <span class="math inline">\(y;\mu,\sigma^2\sim
N(\mu,\sigma^2),\)</span> 则 <span class="math display">\[
\begin{aligned}
p(y;\mu,\sigma^2)
&amp;=\frac{1}{\sqrt{2\pi}\sigma}\mathrm{e}^{-\frac{(y-\mu)^2}{2\sigma^2}}\\
\end{aligned}
\]</span> 需要注意的是, 在回归分析时我们并没有用到 <span
class="math inline">\(\sigma^2,\)</span> 这意味着 <span
class="math inline">\(\sigma^2\)</span> 对于我们构造代价函数 <span
class="math inline">\(h_{\theta}(x)\)</span> 以及最终确定参数 <span
class="math inline">\(\theta\)</span> 并无影响, 因此它可以是任意的,
为了计算简便, 可以令 <span class="math inline">\(\sigma=1,\)</span></p>
<blockquote>
<p>事实上也可以将 <span class="math inline">\(\sigma^2\)</span>
考虑在内, 不过就需要更一般的指数类型的分布的概率密度: <span
class="math display">\[
p(y;\eta)=b(y)\mathrm{e}^{}
\]</span></p>
</blockquote>
<h3 id="三个假设">三个假设</h3>
<p>对于回归问题和分类问题, 我们想根据自变量 <span
class="math inline">\(x\)</span> 预测随机变量 <span
class="math inline">\(y\)</span> 的值, 为了得到广义线性模型,
做出下面的三个假设:</p>
<ul>
<li><span class="math inline">\(y|x;\theta\sim EF(\eta),\)</span> 其中
<span class="math inline">\(EF(\eta)\)</span> 为自然参数为 <span
class="math inline">\(\eta\)</span> 的指数族分布.</li>
<li><span class="math inline">\(\mathbb{E}(y|x)=h(x).\)</span></li>
<li>自然参数 <span class="math inline">\(\eta\)</span> 与自变量 <span
class="math inline">\(x\)</span> 满足线性关系: <span
class="math inline">\(\eta=\theta^Tx.\)</span></li>
</ul>
<p>这三个假设看起来很突兀, 下面一一做解释:</p>
<h4 id="为什么是指数族分布">为什么是指数族分布?</h4>
<p>我们假设 <span class="math inline">\(y|x;\theta\)</span>
服从指数族分布主要有两个原因:</p>
<ol type="1">
<li><p>指数分布具有良好的性质, 若随机变量 <span
class="math inline">\(Y\sim EF(\eta),\)</span> 则 <span
class="math inline">\(Y\)</span> 的期望与方差的形式非常简洁,
我们现在来计算一下.</p>
<p><strong>期望</strong>: 注意到 <span
class="math inline">\(\frac{\partial \log p(y;\eta)}{\partial
\eta}=y-\nabla a(\eta),\)</span> 于是定义随机变量 <span
class="math inline">\(X=Y-\nabla a(\eta),\)</span> 于是 <span
class="math inline">\(\mathbb{E}(X)=\mathbb{E}(Y)-\nabla
a(\eta),\)</span> 且根据<a href="">随机变量函数的期望</a>, 有 <span
class="math display">\[
\begin{aligned}
\mathbb{E}(X)
&amp;=\int (y-\nabla a(\eta))p(y;\eta)\mathrm{d} y\\
&amp;=\int \left(\frac{\partial}{\partial \eta}\log p\right)p\mathrm{d}
y\\
&amp;=\int\frac{1}{p}\frac{\partial p}{\partial \eta}p\mathrm{d} y\\
&amp;=\int \frac{\partial}{\partial \eta}p\mathrm{d} y\\
&amp;=\frac{\partial}{\partial \eta}\int p\mathrm{d} y\\
&amp;=\frac{\partial}{\partial \eta}1=0
\end{aligned}
\]</span> 这就意味着 <span
class="math inline">\(\mathbb{E}(X)=\mathbb{E}(Y)-\nabla
a(\eta)=0,\)</span> 即 <span
class="math inline">\(\boxed{\mathbb{E}(Y)=\nabla a(\eta)}.\)</span></p>
<blockquote>
<p>上面交换积分和求导的次序原则上需要证明一致收敛之类的, 在这里不是重点,
就略去了, 同时用到了概率密度 <span
class="math inline">\(p(y;\eta)\)</span> 的规范性. 若 <span
class="math inline">\(y\in\mathbb{R}^n,\)</span> 则上面的积分都是在整个
<span class="math inline">\(\mathbb{R}^n\)</span> 上进行的.
这里的期望算子 <span class="math inline">\(\mathbb{E}:\mathbb{R}^n \to
\mathbb{R}^n,\)</span> 即对多维随机变量的每一维求期望. 梯度 <span
class="math inline">\(\nabla f(x)\)</span> 按理来说是列向量即 <span
class="math inline">\(\frac{\partial f}{\partial x}=\nabla
f(x)^T,\)</span> 这里为了方便就不区分 <span
class="math inline">\(\frac{\partial f}{\partial x}\)</span> 与 <span
class="math inline">\(\nabla f(x)\)</span> 的区别了.</p>
<p>上面的 "注意到" 好像有点突兀, 也可以从其他角度来求,
但关键还是要想到对 <span class="math inline">\(\eta\)</span>
求导以及交换积分和求导次序, 因为 <span class="math display">\[
\frac{\partial p}{\partial \eta}=p(y-\nabla a(\eta))
\]</span> 这时候出现了 <span class="math inline">\(py,\)</span>
积分后就是期望了, 而且剩下一项刚好是概率密度, 积分后就为 <span
class="math inline">\(1\)</span> 了.</p>
</blockquote>
<p><strong>方差</strong>: <span class="math display">\[
\mathbb{D} (X)=\nabla^2 a(\eta)
\]</span> 即函数 <span class="math inline">\(a(\eta)\)</span>
的黑塞矩阵.</p></li>
<li><p>常见的大多数分布都属于指数分布族.
比如上面提到过的正态分布与伯努利分布, 以及指数分布, 二项分布, 多项分布,
泊松分布, <span class="math inline">\(\Gamma\)</span> 分布, <span
class="math inline">\(\beta\)</span> 分布等等, 都属于指数分布族,
而这些分布又可以刻画大多数问题, 所以假定 <span
class="math inline">\(y\)</span> 服从指数族分布是有一定道理的.</p>
<p><a href="">这里</a>补充了 <span class="math inline">\(\Gamma\)</span>
分布和 <span class="math inline">\(\beta\)</span> 分布,
以及对其他分布属于指数分布族的验证.</p></li>
</ol>
<h4 id="代价函数为什么是期望">代价函数为什么是期望?</h4>
<p>这里确定 <span class="math inline">\(h(x)\)</span>
的过程与回归分析并无二致, 关于连续型随机变量 <span
class="math inline">\(\mathbb{E}(Y|X_1,\cdots,X_n)=f(x_1,\cdots,x_n)\)</span>
的解释, 见<a href="">回归分析</a>, 实际上就是对随机误差期望为 <span
class="math inline">\(0\)</span> 的假定,
也可以借助参数估计的无偏性来理解.</p>
<p>离散型随机变量与连续型随机变量有一点不同</p>
<h4 id="为什么是线性关系">为什么是线性关系?</h4>
<p>线性关系的假定可以看作是一种约定俗成,
这大概是因为因为线性关系具有诸多良好的性质, 就像局部加权回归那样,
如果只关注预测值附近的样本的话, 线性近似带来的误差并不是很大.
更精确的拟合所提高的精度相比计算的代价可能并不那么诱人.</p>
<blockquote>
<p>反正是我瞎说的捏</p>
</blockquote>
<h3
id="借助广义线性模型解决多分类问题-softmax-regression">借助广义线性模型解决多分类问题:
softmax regression</h3>
<p>说了那么多理论和计算, 该看个例子了. 在前面解决了二元分类,
现在我们来看如何用 GLM 解决多分类问题. 多分类问题中, <span
class="math inline">\(\mathcal{Y}=\{1,2,\cdots,k\},\)</span> 表示有
<span class="math inline">\(k\)</span> 类. 在给定 <span
class="math inline">\(x\)</span> 的条件下, 设 <span
class="math inline">\(P(y=i|x;\phi)=\phi_i,\)</span> 其中 <span
class="math inline">\(\phi=(\phi_1,\cdots,\phi_k)\)</span>
的每一维都是概率, 满足 <span class="math inline">\(\sum_{i=1}^k
\phi_i=1.\)</span></p>
<blockquote>
<p>对于命题 <span class="math inline">\(q,\)</span> 记号 <span
class="math inline">\([]:\{\text{true, false}\}\to \{0,1\}\)</span>
表示若 <span class="math inline">\(q\)</span> 为真则 <span
class="math inline">\([q]=1,\)</span> 若 <span
class="math inline">\(p\)</span> 为假则 <span
class="math inline">\([q]=0.\)</span> 比如 <span
class="math inline">\([1=0]=0.\)</span>
(为什么这也要煞有介事地写个映射)</p>
</blockquote>
<p>于是概率密度可以写成: <span class="math display">\[
\begin{aligned}
p(y;\phi)
&amp;=\prod_{i=1}^k\phi_i^{[y=i]}\\
&amp;=\exp \sum_{i=1}^k [y=i]\log \phi_i
\end{aligned}
\]</span> 将其与指数族分布的概率密度对照, 则有 <span
class="math inline">\(\eta=(\log\phi_1,\cdots,\log\phi_k)^T,\)</span>
<span class="math inline">\(T(y)=([y=1],\cdots,[y=k])^T,\)</span> <span
class="math inline">\(b(y)=1,\)</span> 然后就发现出问题了, 此时 <span
class="math inline">\(a(\eta)=0,\)</span> 那代价函数就恒为 <span
class="math inline">\(0\)</span> 了, 显然不对.</p>
<p>问题出在哪里了呢? 因为 <span
class="math inline">\(\phi_1,\cdots,\phi_k\)</span> 满足了 <span
class="math inline">\(\sum_{i=1}^k\phi_i=1,\)</span> 所以这 <span
class="math inline">\(k\)</span> 个参数有一个多余的, 于是用 <span
class="math inline">\(1-\sum_{i=1}^{k-1}\phi_i\)</span> 替换掉 <span
class="math inline">\(\phi_k,\)</span> 那么自然参数就满足 <span
class="math inline">\(\eta\in \mathbb{R}^{k-1}\)</span> 而不是 <span
class="math inline">\(\mathbb{R}^k\)</span> 了,
不过下面的运算过程为了简便仍然用 <span
class="math inline">\(\phi_k\)</span> , 现在置 <span
class="math inline">\(\phi=(\phi_1,\cdots,\phi_{k-1}),\)</span> 则 <span
class="math display">\[
\begin{aligned}
p(y;\phi)
&amp;=\exp \sum_{i=1}^k [y=i]\log \phi_i\\
&amp;=\exp \sum_{i=1}^{k-1}[y=i]\log\phi_i+[y=k]\log \phi_k\\
&amp;=\exp
\sum_{i=1}^{k-1}[y=i]\log\phi_i+\log\phi_k\sum_{\ell=1}^{k}[y=\ell]-\log\phi_k
\sum_{\ell=1}^{k-1}[y=\ell]\\
&amp;=\exp\sum_{i=1}^{k-1}[y=i]\log\frac{\phi_i}{\phi_k}+\log\phi_k
\end{aligned}
\]</span> 于是就有 <span class="math inline">\(\eta
=(\log\phi_1/\phi_k,\cdots,\phi_{k-1}/\phi_k)^T,T(y)=([y=1],\cdots,[y=k-1])^T,b(y)=1,\)</span>
以及 <span class="math display">\[
a(\eta)=-\log\phi_k=-\log\left(1-\sum_{i=j}^{k-1}\phi_j \right)
\]</span> 为了求出 <span class="math inline">\(h(x)=\nabla
a(\eta),\)</span> 先求出 <span class="math inline">\(\eta\)</span> 与
<span class="math inline">\(\phi\)</span> 之间的关系, 这相当于是解方程:
<span class="math display">\[
\begin{cases}
\phi_i=\phi_k\mathrm{e}^{\eta_i},i=1,\cdots,k-1\\
\displaystyle \phi_k=1-\sum_{i=1}^{k-1}\phi_i
\end{cases}
\]</span> 解出 <span class="math display">\[
\phi_k=\frac{1}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\eta_i}}
\]</span> 于是 <span class="math display">\[
a(\eta)=-\log\phi_k=\log \left(1+\sum_{i=1}^{k-1}e^{\eta_i}\right)
\]</span> 且 <span class="math inline">\(\eta_i=\theta_i^Tx,\)</span>
其中 <span class="math inline">\(\theta_i\in\mathbb{R}^{n+1},\)</span>
于是</p>
<p><span class="math display">\[
h(x)=\nabla a(\eta)=
\begin{bmatrix}
\frac{\mathrm{e}^{\eta_1}}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\eta_i}}\\
\frac{\mathrm{e}^{\eta_2}}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\eta_i}}\\
\vdots\\
\frac{\mathrm{e}^{\eta_{k-1}}}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\eta_{i}}}
\end{bmatrix}=
\begin{bmatrix}
\frac{\mathrm{e}^{\theta_1^Tx}}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\theta_i^Tx}}\\
\frac{\mathrm{e}^{\theta_2^Tx}}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\theta_i^Tx}}\\
\vdots\\
\frac{\mathrm{e}^{\theta_{k-1}^Tx}}{1+\sum_{i=1}^{k-1}\mathrm{e}^{\theta_i^Tx}}
\end{bmatrix}
\]</span></p>
<p>这是一个 <span class="math inline">\(k-1\)</span> 维向量, 其中第
<span class="math inline">\(i\)</span> 维是参数 <span
class="math inline">\(P(y=i|x;\phi)=\phi_i\)</span> 的预测值,
利用所有维度可以求出 <span
class="math inline">\(P(y=k|x;\phi)=\phi_k\)</span> 的预测值.
如果想要求出最佳参数, 采用 MLE 并利用梯度法和牛顿法进行求解即可,
似然函数为 <span
class="math inline">\(\prod_{i=1}^{k}P(y=i|x;\phi).\)</span></p>
]]></content>
  </entry>
  <entry>
    <title>一点想法</title>
    <url>/2023/08/06/essay/thought1/</url>
    <content><![CDATA[<blockquote>
<p>用两句话概括我大学前两年的生活:</p>
<ul>
<li><p>什么都想学, 什么都学不会.</p></li>
<li><p>两手抓, 两手丢.</p></li>
</ul>
</blockquote>
<!-- 今天是2023.8.6, 距离返校还有三四天, 返校后就正式开始大三的生活了.

总结一下大二下的生活.

因为疫情提前回家, 寒假凭空多出来一个月, 所以提前返校了一周来复习期末考试, 可惜的是复习得不怎么样, 数据结构考得很烂, 其他科目也没有到95+, 所以均分仍然没有到自己理想的水平, 还是复习得不够充分, 实力也不行, 不过上了大学以后, 好像就没有哪件事再像高中那样准备得"很充分"了, 不过是面试还是考试竞赛, 总有学不完的东西填不完的坑, 可能这才是常态.

考完概率论, 培养方案就没有(算保研的)数学基础课了(这学期的矩阵分析不算), 自己可能也就没有什么优势了. 说来也奇怪, 都快大三了, 我对自己的定位似乎还是"喜欢数学", 对于真正与计算机相关的课程并不十分感兴趣, 当然也不能这么说， 毕竟写代码搞些小玩意儿还是挺有意思地, 不过相比之下还是数学对我更有吸引力一点, 所以对于这学期的计网/计组/数据库, 我的学习动力好像并没有很强, 再加上我这上课睡觉的毛病, 这三门课无一例外都考得很烂, 这学期的排名肯定会掉一些. 

是摆烂了吗? 应该是, 毕竟我上计网数据库的时候光睡觉, 上计组的时候听不懂就摸鱼, 最后的综合实验也不会做, 只能连抄带编带搜带问 ChatGPT 地搞完了; 好像也不是, 我能想起来导师让我写优化算法地时候我每天都在写代码 debug, 经常在深夜(十二点算深夜吗?)写, 四五月份同时准备数竞/数模/蓝桥杯, 不过还好没有怎么看数模, 不然真的就心力交瘁了(是吗? 蓝桥杯数竞那水题, 认真做也不会怎么耗时间). 

为什么听不懂呢? 现在想来, 可能还是需要预习, 希望下学期对每门课(尤其是OS和KR吧)能做好简单的预习, 上课也不能再摸鱼了, 总要做点有意义的事情的. **不要高估了自己一天能做的事, 也不要低估了自己一年能做的事.** 至于上课睡觉, 仔细考虑原因, 首先是睡眠不足, 其次是内容不感兴趣或者是听不太懂, 所以做自己的事情, 尤其是写代码可以有效防止上课打瞌睡.

睡两年了, 希望最后一年能有改善吧.

看来人的 taste 不是一成不变的, 我记得大一刚开学的时候我对分析还挺感兴趣, 后来就逐渐对数论和组合感兴趣了, 觉得知乎上那些复杂的积分也索然无味了, 现在的想法就是搞组合优化, 但是作为计算机专业的人还是要有工程能力, 否则就是走应用数学的路子了, 所以还是想学一下系统层面的优化. 不过还是有点顾虑, 不知道自己是否有天赋去做这个, 但至少不会在 AI 相关的 CV/NLP/多模态之类的方向之间纠结了, 也不用当炼丹师了(希望如此).

这几天在家十分焦虑, 但是就是学不进去, 自己一个人学习太容易碰壁了, 没有人能沟通交流而要靠自己去想明白一些东西太痛苦了, 还是会经常幻想要是自己智商再高一点就好了. 希望提前返校能改善一下状态, 但是身份证还没到, 也走不了.

开学后还要先准备将近四个周的数模, 实在是太煎熬了, 本来之前对数模还信心满满的, 但是经过两次训练好像感觉也不是那回事, 其他人也很厉害, 自己还是有很多欠缺的知识, 只能在8.17之前再稍微补一下基础了.

在舒适圈待得太久了, 好像跳不出来了. -->
]]></content>
  </entry>
  <entry>
    <title>WSL2 相关</title>
    <url>/2023/07/31/essay/vscode-wsl-permission/</url>
    <content><![CDATA[<h1 id="vscode连接-wsl2-无权访问文件">VSCode连接 WSL2 无权访问文件</h1>
<p>执行下面的命令即可:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chown -R username path</span><br></pre></td></tr></table></figure>
<p>比如:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chown -R xubaoduo /home/xubaoduo/project</span><br></pre></td></tr></table></figure>
<h2 id="reference"><strong>Reference</strong></h2>
<p><a
href="https://stackoverflow.com/questions/66496890/vs-code-nopermissions-filesystemerror-error-eacces-permission-denied">https://stackoverflow.com/questions/66496890/vs-code-nopermissions-filesystemerror-error-eacces-permission-denied</a></p>
<h1 id="wsl2安装docker遇到的问题">WSL2安装Docker遇到的问题</h1>
<p>在官网下载运行安装打开后出现下面的情况:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202307311712344.png" /></p>
<p>以管理员权限运行cmd后, 输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">path - C:\Windows\system32</span><br></pre></td></tr></table></figure>
<p>再打开就解决了.</p>
<p>在WSL2的CLI中输入 <code>docker --veriosn</code> 后提示 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">The command &#x27;docker&#x27; could not be found in this WSL 2 distro.</span><br><span class="line">We recommend to activate the WSL integration in Docker Desktop settings.</span><br><span class="line"></span><br><span class="line">For details about using Docker Desktop with WSL 2, visit:</span><br><span class="line"></span><br><span class="line">https://docs.docker.com/go/wsl2/</span><br></pre></td></tr></table></figure>
只需要运行下面两句安装即可:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker.io</span><br></pre></td></tr></table></figure>
<blockquote>
<p>微软商店的 Windows Terminal 确实挺好看的.</p>
</blockquote>
<h2 id="reference-1">Reference</h2>
<p>ChatGPT以及StackOverflow.</p>
<h1 id="git-常见命令">git 常见命令</h1>
<p><a href="https://www.runoob.com/note/56524">这里。</a></p>
<h1 id="generate-new-token-for-picgo">Generate new token for PicGo</h1>
<p>主页的 <code>Settings</code> 中, 选择最下方的
<code>Developer settings</code>, 在 <code>Personal access token</code>
中就能找到.</p>
<p>看来一个月就过期有点频繁.</p>
]]></content>
      <categories>
        <category>随手记录的问题</category>
      </categories>
  </entry>
  <entry>
    <title>使用 git 管理 jupyter notebook</title>
    <url>/2023/09/15/essay/git-jupyter-notebook/</url>
    <content><![CDATA[<p>在 VSCode 中用 <code>git init</code> 初始化, 在修改文件后,
可以直接打开右上角的 <code>Open Changes</code>
查看修改过后的版本与上一版本的对比, 此时 <code>.ipynb</code>
文件仍然是富文本格式而不是 JSON 格式, 效果如下:</p>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309151123413.png"
alt="红色的圈为 Open Changes 选项" />
<figcaption aria-hidden="true">红色的圈为 Open Changes 选项</figcaption>
</figure>
<p>但是如果要对比历史某一版本与当前版本, 比如用 Git Graph
插件的查看情况, 只能显示 JSON 格式:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309151126958.png" /></p>
<p>看起来很难受.</p>
<p>解决方法是使用 <a
href="https://nbdime.readthedocs.io/en/latest/installing.html">nbdime</a>.
根据官方教程安装:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install nbdime</span><br></pre></td></tr></table></figure>
<p>根据 <a
href="https://nbdime.readthedocs.io/en/latest/vcs.html#git-integration">Version
Control 部分的教程</a>, 在本地仓库中初始化:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nbdime config-git --<span class="built_in">enable</span></span><br></pre></td></tr></table></figure>
<p>然后类似于 <code>git diff</code> 的用法:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nbdiff-web &lt;commit&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure>
<p>其中 <code>&lt;commit&gt;</code> 选项表示提交的历史版本的 hash 值,
<code>&lt;path&gt;</code> 为想要查看的文件的路径,
运行之后会在浏览器打开一个网页, 显示对比, 如下所示:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309151135341.png" /></p>
]]></content>
      <categories>
        <category>随手记录的问题</category>
      </categories>
  </entry>
  <entry>
    <title>精确算法 BRANCHING</title>
    <url>/2023/08/17/exact-exponetial-algorithm/exact-algorithm-branching/</url>
    <content><![CDATA[<h1 id="basic-concepts">Basic Concepts</h1>
<p>branch 有两条规则:</p>
<ul>
<li><strong><em>reduction rule</em></strong>.
用来简化问题或者停止算法.</li>
<li><strong><em>branching rule</em></strong>.
通过递归地求解更小的问题的实例来解决一个问题.</li>
</ul>
<p>因此设计一个 branch 算法很大程度上是设计 reduction 和 branching
rule.</p>
<h1 id="upper-bound-analysis">Upper Bound Analysis</h1>
<p>要分析 branching 算法需要一些假设:</p>
<ul>
<li>polynomial time.</li>
<li>Simplifying produces simpler problem.</li>
</ul>
<p>在上面的假设下, 复杂度为 搜索树结点 <span
class="math inline">\(\times\)</span> 一个多项式.</p>
<p>研究 branch 算法时, 问题的输入参数往往不是输入的长度,
而是一个可以描述问题规模的很自然的参数, 比如图的结点数,
称这样的参数为问题的 <strong><em>instance</em></strong>.</p>
<p>设 <span class="math inline">\(T(n)\)</span> 是 instance 数目为 <span
class="math inline">\(n\)</span> 的一个问题的分支树的叶子节点个数.
给定一个 branching 规则 <span class="math inline">\(b\)</span>, 设 <span
class="math inline">\(r\ge 2\)</span>, <span
class="math inline">\(t_i&gt;0,i\in [r]\)</span>, 规则 <span
class="math inline">\(b\)</span> 将当前的 instance 分成了 <span
class="math inline">\(r\)</span> 个子问题且每个子问题的 instance
数量至多为 <span class="math inline">\(n-t_i,i=1,\cdots,r,n\ge
\max_{1\le i\le r}t_i\)</span>, 那么称向量 <span
class="math inline">\(\mathbf{b}=(t_1,\cdots,t_r)\)</span> 称为
branching vector. 根据树的递归结构, 有 <span class="math display">\[
T(n)\le \sum_{i=1}^rT(n-t_i)
\]</span> 这是一个线性递推不等式, 考虑用特征方程来解, 等式 <span
class="math inline">\(T^*(n)=\sum_{i=1}^rT^*(n-t_i)\)</span>
的特征方程为 <span
class="math inline">\(x^n-x^{n-t_1}-\cdots-x^{n-t_r}=0\)</span>,
而显然有 <span class="math inline">\(T(n)\le T^*(n)\)</span>, <span
class="math inline">\(T^*(n)\)</span> 为特征方程的所有根的 <span
class="math inline">\(n\)</span> 次幂的线性组合(系数为 <span
class="math inline">\(n\)</span> 的多项式), 可以写成 <span
class="math inline">\(T^*(n)=O^*(\alpha^n),\alpha\)</span>
为方程的<strong>唯一正根</strong>, 称作 <span
class="math inline">\(\mathbf{b}\)</span> 的 branching factor,
这就意味着 <span class="math inline">\(T(n)=O^*(\alpha^n)\)</span>.</p>
<blockquote>
<p>书上写的是 unique positive real root, 个人感觉应该是最大正根.</p>
</blockquote>
<p>对于 branching vector <span
class="math inline">\((t_1,\cdots,t_r)\)</span>, 定义其 branching factor
为 <span class="math inline">\(\tau(t_1,\cdots,t_r)=\alpha\)</span>.
有如下性质:</p>
<ul>
<li><span
class="math inline">\(\tau(t_1,\cdots,t_r)=\tau(t_{\pi(1)},\cdots,t_{\pi(r)})\)</span>,
其中 <span class="math inline">\(\pi\)</span> 为 <span
class="math inline">\(1,\cdots,r\)</span> 的任意排列.</li>
<li><span
class="math inline">\(\tau(t_1,\cdots)&lt;\tau(t_1&#39;,\cdots),
t_1&gt;t_1&#39;\)</span>.</li>
<li><span class="math inline">\(\tau(k,k)\le
\tau(i,j),i+j=2k\)</span>.</li>
<li><span
class="math inline">\(\tau(i,j)&gt;\tau(i+\varepsilon,j-\varepsilon),0&lt;i&lt;j
\land 0&lt;\varepsilon&lt;(j-i)/2\)</span>.</li>
</ul>
<h2 id="addition-of-branching-vectors">Addition of Branching
Vectors</h2>
<p>设有两个分支规则 <span class="math inline">\(b_1,b_2\)</span>,
branching vector 分别为 <span
class="math inline">\((t_1,t_2),(t_1&#39;,t_2&#39;)\)</span>, 且 <span
class="math inline">\(b_1\)</span> 的 <span
class="math inline">\(t_1\)</span> 分支恰好符合实施 <span
class="math inline">\(b_2\)</span> 分支规则的条件,
那么可以把这两次分支并在一起, 得到新的 branching vector <span
class="math inline">\((t_1+t_1&#39;,t_1+t_2&#39;,t_2)\)</span>,
有时候会减少 branching factor.</p>
<h1 id="k-sat"><span class="math inline">\(k\)</span>-SAT</h1>
<p>令变量集合 <span class="math inline">\(X=\{x_1,\cdots,x_n\}\land
x_i\in\{0,1\},\)</span> 有下面的概念:</p>
<ul>
<li><strong><em>literal</em></strong> <span class="math inline">\(x\in
X\)</span> 以及 <span class="math inline">\(\bar{x}\)</span> 被称为
literal, 与 <span class="math inline">\(X\)</span> 有关的 literal
的集合记作 <span
class="math inline">\(L(X)=\{x_1,\bar{x}_1,\cdots,x_n,\bar{x}_n\}\)</span>.</li>
<li><strong><em>clause</em></strong> 一个 clause <span
class="math inline">\(c\)</span> 是若干 literal 的 disjunction <span
class="math inline">\(c=\ell_1\lor \cdots\lor \ell_t,\ell_i\in
L(X)\)</span>. 要求一个 clause 不含有<strong>两个相同的 literal</strong>
或者 <strong>一个 literal 和它的非</strong>. 用集合 <span
class="math inline">\(\{\ell_1,\cdots,\ell_t\}\)</span> 来表示一个
clause.</li>
<li><strong><em>CNF formula</em></strong> 是若干 clause 的conjunction
<span class="math inline">\(F=c_1\land \cdots\land c_m\)</span>, 用集合
<span class="math inline">\(\{c_1,\cdots,c_m\}\)</span> 来表示一个 CNF
formula. 若 <span class="math inline">\(F\)</span> 的每个 clause
都含有至多 <span class="math inline">\(k\)</span> 个 literal, 则称其为
<span class="math inline">\(k\)</span>-CNF formula. 如果 CNF formula
<span class="math inline">\(F&#39;\)</span> 满足 <span
class="math inline">\(F&#39;\)</span> 的每个 clause 都是 <span
class="math inline">\(F\)</span> 的每个 clause 的子集, 则称 <span
class="math inline">\(F&#39;\)</span> 是 <span
class="math inline">\(F\)</span> 的 subformula.</li>
</ul>
<p>称 CNF formula <span class="math inline">\(F\)</span> 是 satisfiable
的当且仅当存在对 <span class="math inline">\(F\)</span> 的 literal
的合法赋值使得 <span class="math inline">\(F=1\)</span>. 以此定义 SAT 和
<span class="math inline">\(k\)</span>-SAT 问题:</p>
<ul>
<li><em>Satisfiability Problem</em>. 给定一个含有 <span
class="math inline">\(n\)</span> 个变量和 <span
class="math inline">\(m\)</span> 个 clause 的的 CNF formula <span
class="math inline">\(F\)</span>,
要求判断是否能找到对变量的合法赋值(对每个变量赋值得到 <span
class="math inline">\(F\)</span> 的一个结果的过程称为 <em>truth
assignment</em>)使 <span class="math inline">\(F=1\)</span>.</li>
<li><span class="math inline">\(k\)</span><em>-Satisfiability
Problem</em>. 在 SAT 的基础上, 要求 <span
class="math inline">\(F\)</span> 是 <span
class="math inline">\(k\)</span>-CNF formula.</li>
</ul>
<h2 id="k-sat-的一个-branch-算法"><span
class="math inline">\(k\)</span>-SAT 的一个 branch 算法</h2>
<p>考虑到对于 <span class="math inline">\(F\)</span> 的任意 clause <span
class="math inline">\(c=\ell_1\lor \cdots\lor \ell_q\)</span>, 当 <span
class="math inline">\(\ell_i=1\)</span> 时便有 <span
class="math inline">\(c=1\)</span>, 同时可以得到 <span
class="math inline">\(F&#39;\)</span>, 其中 <span
class="math inline">\(F&#39;\)</span> 相比 <span
class="math inline">\(F\)</span> 少了一个变量 . 以这种方式作为分支规则,
可以得到 <span class="math inline">\(q\)</span> 个 subformula:</p>
<ul>
<li><span class="math inline">\(F_1:\ell_1=1\)</span></li>
<li><span class="math inline">\(F_2:\ell_1=0,\ell_2=1\)</span></li>
<li><span
class="math inline">\(F_3:\ell_1=0,\ell_2=0,\ell_3=1\)</span></li>
<li><span class="math inline">\(\cdots\)</span></li>
<li><span
class="math inline">\(F_q:\ell_1=0,\ell_2=0,\cdots,\ell_q=1\)</span></li>
</ul>
<p>于是若 <span class="math inline">\(F_1,\cdots,F_q\)</span>
之中至少要有一个是可满足的, 便可得到 <span
class="math inline">\(F\)</span> 是可满足的.</p>
<h3 id="复杂度分析">复杂度分析</h3>
<p>由于 <span class="math inline">\(F\)</span> 有 <span
class="math inline">\(n\)</span> 个变量即 <span
class="math inline">\(n\)</span> 个instance, 于是经过赋值, <span
class="math inline">\(F_i\)</span> 有 <span
class="math inline">\(n-i\)</span> 个 instances, 其 branching vector 为
<span class="math inline">\((1,\cdots,q)\)</span>, 对应的特征方程为
<span class="math inline">\(x^{n}-x^{n-1}-\cdots-x^{n-q}=0\)</span>,
利用等比数列求和化简得 <span
class="math inline">\(x^{q+1}-2x^{q}+1=0\)</span>, 设其 branching factor
为 <span class="math inline">\(\beta_q\)</span>, 序列 <span
class="math inline">\(\{\beta_q\}_{q\ge 1}\)</span> 是单调递增的 ,
那么上述 branch 算法的复杂度为 <span
class="math inline">\(O^*(\beta_q^n)\)</span>, 且 <span
class="math inline">\(q\le k\)</span> , 故复杂度上界为 <span
class="math inline">\(O^*(\beta_k^n)\)</span>. 这个复杂度不算很优秀,
因为对于有线性时间复杂度的 2-SAT 而言, branch 算法得到的复杂度为 <span
class="math inline">\(O(1.6181^n)\)</span>.</p>
<h2 id="基于-autark-的改进">基于 autark 的改进</h2>
<p>第一个改进的技巧是每次选择最小的 clause 做分支, 这通过复杂度 <span
class="math inline">\(O^*(\beta_q^n)\)</span> 就能体现出来.</p>
<p>同时还能注意到一个事实: 若 <span class="math inline">\(k\)</span>-CNF
formula <span class="math inline">\(F\)</span> 存在 <span
class="math inline">\(|c|=k-1\)</span> 的 clause <span
class="math inline">\(c\)</span>, 那么在 <span
class="math inline">\(c\)</span> 上做分支, 那么复杂度为 <span
class="math inline">\(O^*(\beta_{k-1}^n)\)</span>, 此时对于 2-SAT 变为
<span class="math inline">\(O^*(1)\)</span>, 已经是多项式复杂度了.</p>
<p>若 <span class="math inline">\(c\)</span> 都满足 <span
class="math inline">\(|c|=k\)</span>, 考虑通过下面的称作 autark
的技巧做进一步改进:</p>
<p>定义 partial truth assignment 是对部分变量的赋值,
如果这样的赋值可以满足 <span class="math inline">\(F\)</span> 的一个
subformula <span class="math inline">\(F&#39;\)</span> (<span
class="math inline">\(F&#39;\)</span> 还要满足 <span
class="math inline">\(F&#39;\)</span> 与 <span
class="math inline">\(F\backslash F&#39;\)</span> 没有相同的变量) ,
就称这个赋值为 autark, <span class="math inline">\(F&#39;\)</span>
称为autark subset.</p>
<blockquote>
<p>举个例子, 对于 <span class="math display">\[
F=(x_1\lor x_2\lor \bar{x}_3)\land(\bar{x}_1\lor
\bar{x}_2)\land(\bar{x}_2\lor \bar{x}_3\lor x_4)\land(x_3\lor \bar{x}_4)
\]</span> <span class="math inline">\(x_1=1,x_2=0\)</span>
是一个对部分变量的赋值同时也是一个 autark, 它使 <span
class="math inline">\(F&#39;=(x_1\lor x_2)\land(\bar{x}_1\lor
\bar{x}_2)\land(\bar{x}_2)\)</span> 得到满足, 且赋值过后得到的
subformula 为 <span class="math inline">\(F&#39;&#39;=x_3\lor
\bar{x}_4\)</span>, 只需再判断 <span
class="math inline">\(F&#39;&#39;\)</span> 是否是可满足的, 便可得到
<span class="math inline">\(F\)</span> 是否是可满足的.</p>
<p>autarky 即 autarchy 本身是“自给自足”的含义.</p>
</blockquote>
<p>在前述的简单分支规则的基础上, 设 <span
class="math inline">\(F\)</span> 经过一个赋值后得到的 subformula 为
<span class="math inline">\(F&#39;&#39;\)</span>, 有下面两种情况:</p>
<ul>
<li>若该赋值为 autark, 那么 <span class="math inline">\(F\)</span>
可满足当且仅当 <span class="math inline">\(F&#39;&#39;\)</span> 可满足,
因此递归地解决 <span class="math inline">\(F&#39;&#39;\)</span>
的可满足性即可.</li>
<li>若该赋值不是 autark, 那么存在一个被赋值的 literal <span
class="math inline">\(\ell_i=0\)</span>, 它出现在某一个 clause <span
class="math inline">\(c&#39;\)</span> 中, 在赋值之后, 一定有 <span
class="math inline">\(|c&#39;|\le k-1\)</span>, 那么直接在赋值之后的
<span class="math inline">\(c&#39;\)</span>
上做分支即可(事实上还是在最小的 clause 上做分支).</li>
</ul>
<blockquote>
<p>在上面的例子中, <span class="math inline">\(x_1=0,x_2=1\)</span>
不是一个 autark, 那么 <span class="math inline">\(\bar{x}_2\)</span>
是一个值为 <span class="math inline">\(0\)</span> 的literal, 它出现在
clause <span class="math inline">\(\bar{x}_2\lor \bar{x}_3\lor
x_4\)</span> 中, 赋值之后, 该 clause 变成了 <span
class="math inline">\(\bar{x}_3\lor x_4\)</span>, 大小从 <span
class="math inline">\(3\)</span> 变成了 <span
class="math inline">\(2\)</span>.</p>
</blockquote>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308301452429.png" /></p>
<p>在这个改进的基础上, 3-SAT 的复杂度为 <span
class="math inline">\(O^*(1.6181^n)\)</span>.</p>
<h1 id="最大独立集">最大独立集</h1>
<h2 id="一个简单的-branching">一个简单的 branching</h2>
<p>独立集一些简单的结论:</p>
<ul>
<li>若 <span class="math inline">\(v\in I\)</span>, 则 <span
class="math inline">\(N(v)\cap I=\emptyset\)</span>.</li>
<li>若 <span class="math inline">\(I\)</span> 是 MIS, 则对于 <span
class="math inline">\(v\not\in I\)</span>, <span
class="math inline">\(N(v)\)</span> 中至少有一个点在 <span
class="math inline">\(I\)</span> 中即 <span
class="math inline">\(|N(v)\cap I|\ge 1\)</span>, 如若不然, <span
class="math inline">\(I\cup\{v\}\)</span> 可成为新的独立集.</li>
</ul>
<p>这些结论实际上是在说, 想得到最大独立集, 对任意点 <span
class="math inline">\(v\)</span> , 只能在它的闭邻域 <span
class="math inline">\(N[v]\)</span> 中选择一个点.</p>
<p>下面是递推关系式: <span class="math display">\[
\alpha(G)=
\begin{cases}
0,&amp; V=\emptyset\\
\displaystyle 1+\max_{y\in N[v],v=\arg\min_{u\in V(G)}\deg
(u)}\alpha(G\backslash\ N[y]),&amp;\text{otherwise}
\end{cases}
\]</span> 对于度数最小的点 <span class="math inline">\(v\)</span>, 枚举
<span class="math inline">\(N[v]\)</span> 中的点 <span
class="math inline">\(y\)</span>, 然后删去 <span
class="math inline">\(N[y]\)</span>, 得到若干子图 <span
class="math inline">\(G\backslash N[y]\)</span>,
再重复这个过程求这些子图中独立集的最大值.</p>
<p>复杂度为 <span class="math inline">\(O^*(s^{n/s}),s=\min_{v\in
V}\deg(v)+1\)</span>, <span class="math inline">\(s=3\)</span> 时为<span
class="math inline">\(O^*(3^{n/3})\)</span> 是最大值. 设最小度数的点为
<span class="math inline">\(v\)</span>, <span
class="math inline">\(N(v)\)</span> 中的点的度数分别为 <span
class="math inline">\(d(v_1),\cdots,d(v_{d(v)})\)</span>, 有 <span
class="math inline">\(d(v_i)\ge d(v)\)</span>, 于是 <span
class="math display">\[
\begin{aligned}
T(n)&amp;\le T(n-d(v)-1)+\sum_{i=1}^{d(v)}T(n-d(v_i)-1)+O(1)\\
&amp;\le (d(v)+1)T(n-d(v)-1)+O(1)\\
&amp;=sT(n-s)+c,s=d(v)+1
\end{aligned}
\]</span> 不断由 <span class="math inline">\(T(n)\le sT(n-s)+c\)</span>
递推得 <span class="math inline">\(T(n)\le
c(1+s+s^2\cdots+s^{n/s})=c\frac{1-s^{n/s+1}}{1-s}=O^*(s^{n/s})\)</span>.</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/20230730170842.png" /></p>
<p>可以证明下面的最大独立集的个数的定理:</p>
<p>一个有 <span class="math inline">\(n\)</span> 个顶点的图 <span
class="math inline">\(G\)</span> 的最大独立集个数至多为 <span
class="math display">\[
\begin{cases}
3^{n/3},&amp;n\equiv 0\pmod 3\\
4\cdot3^{(n-4)/3},&amp;n\equiv 1\pmod 3\\
2\cdot3^{(2-4)/3},&amp;n\equiv 2\pmod 3
\end{cases}
\]</span> 即 <span class="math inline">\(O(3^{n/3})\)</span>,
构造很容易, 只需要让 <span class="math inline">\(G\)</span> 由 <span
class="math inline">\(n/3\)</span> 个不相交的 <span
class="math inline">\(K_3\)</span> 组成, 那么每个 <span
class="math inline">\(K_3\)</span> 只能取一个点, 有三种取法,
就得到了结论.</p>
<h2 id="一个复杂的-branching">一个复杂的 branching</h2>
<p>这个 branching 算法基于下面的引理.</p>
<p><strong>Lemma 1 (domination rule)</strong> 设 <span
class="math inline">\(\{v,w\}\in E\land N[v]\subset N[w]\)</span> , 则
<span class="math inline">\(\alpha(G)=\alpha(G\backslash w)\)</span>.
<span class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 相当于证明 <span
class="math inline">\(G\)</span> 存在不包括 <span
class="math inline">\(w\)</span> 的最大独立集. 设某个最大独立集 <span
class="math inline">\(I\)</span> 满足 <span class="math inline">\(w\in
I\)</span>, 那么 <span class="math inline">\(N(w)\cap
I=\emptyset\)</span> 即 <span class="math inline">\(N(v)\cap
I=\emptyset\)</span>. 由于 <span class="math inline">\(v\)</span> 与
<span class="math inline">\(w\)</span> 相邻, 因此可以将 <span
class="math inline">\(w\)</span> 替换成 <span
class="math inline">\(v\)</span> 而不违反独立集需要满足的要求, 那么
<span class="math inline">\((I\backslash \{w\})\cup \{v\}\)</span>
是一个不包括 <span class="math inline">\(w\)</span> 的最大独立集. <span
class="math inline">\(\blacksquare\)</span></p>
<p><strong>Lemma 2 (standard branching)</strong> 求解最大独立集时,
要么选择 <span class="math inline">\(v\)</span> 舍弃其邻域, 要么直接舍弃
<span class="math inline">\(v\)</span>, 于是 <span
class="math inline">\(\alpha(G)=\max\{1+\alpha(G\backslash
N[v]),\alpha(G\backslash v)\}\)</span>. 它的 branching vector 为 <span
class="math inline">\((d(v)+1,1)\)</span>.</p>
<p><strong>Lemma 3</strong> 对于 <span class="math inline">\(v\in
V\)</span>, 若 <span class="math inline">\(G\)</span>
的<strong>所有</strong>最大独立集都不含 <span
class="math inline">\(v\)</span>, 那么 <span
class="math inline">\(G\)</span>
的<strong>每一个</strong>最大独立集都至少含有 <span
class="math inline">\(N(v)\)</span> 中的两个顶点. <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 假设存在一个最大独立集 <span
class="math inline">\(I\)</span> 使得 <span class="math inline">\(|I\cap
N(v)|\le 1\)</span>, 分为两种情况:</p>
<ul>
<li><span class="math inline">\(I\)</span> 不含有 <span
class="math inline">\(N[v]\)</span> 中的任何点, 此时 <span
class="math inline">\(I\cup \{v\}\)</span> 可以成为新的最大独立集,
矛盾.</li>
<li><span class="math inline">\(I\)</span> 仅含有 <span
class="math inline">\(N(v)\)</span> 中的一个顶点, 此时设 <span
class="math inline">\(I\cap N(v)=\{w\}\)</span>, 于是 <span
class="math inline">\(I\backslash\{w\}\)</span> 不含有 <span
class="math inline">\(N(v)\)</span> 中的顶点也不含有 <span
class="math inline">\(N(w)\)</span> 中的顶点, 于是 <span
class="math inline">\((I\backslash\{w\})\cup \{v\}\)</span>
也是一个最大独立集, 这与所有最大独立集都不含有 <span
class="math inline">\(v\)</span> 相矛盾.</li>
</ul>
<p><span class="math inline">\(\blacksquare\)</span></p>
<p>定义 <span class="math inline">\(N^2(v)\)</span> 表示 <span
class="math inline">\(v\)</span> 的邻居的邻居的集合(不包括 <span
class="math inline">\(N[v]\)</span> 中的点), 若 <span
class="math inline">\(w\in N^2(v)\)</span> 满足 <span
class="math inline">\(N(v)\backslash N(w)\)</span> 是团, 则称 <span
class="math inline">\(w\)</span> 为 <span
class="math inline">\(v\)</span> 的 mirror. 设 <span
class="math inline">\(M(v)\)</span> 是 <span
class="math inline">\(v\)</span> 在 <span
class="math inline">\(G\)</span> 中的所有的 mirror 点的集合. 定义 <span
class="math inline">\(N^2[v]=N[v]\cup N^2(v)\)</span>.</p>
<p><strong>Lemma 4 (mirror branching)</strong> <span
class="math inline">\(\alpha(G)=\max\{1+\alpha(G\backslash
N[v]),\alpha(G\backslash(M(v)\cup \{v\}))\}\)</span>. <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 如果 <span
class="math inline">\(G\)</span> 存在一个包括 <span
class="math inline">\(v\)</span> 的最大独立集, 那么 <span
class="math inline">\(\alpha(G)=1+\alpha(G\backslash N[v])\)</span>
则命题为真; 反之若所有最大独立集都不包括 <span
class="math inline">\(v\)</span>, 那么由引理 3 可得所有最大独立集都包括
<span class="math inline">\(N(v)\)</span> 中的至少两个顶点, 设某个
mirror 为 <span class="math inline">\(w\)</span>, 由 mirror 的定义知
<span class="math inline">\(N(v)\backslash N(w)\)</span> 为 clique,
而一个 clique 中至多有一个点在最大独立集中, 于是 <span
class="math inline">\(N(w)\)</span>
中的点至少有一个在所有的最大独立集中, 这意味所有的最大独立集都不可能包含
<span class="math inline">\(w\)</span>, 因此可以丢弃掉 <span
class="math inline">\(v\)</span> 的所有 mirror <span
class="math inline">\(M(v)\)</span> 而不影响最大独立集的大小. <span
class="math inline">\(\blacksquare\)</span></p>
<p><strong>Lemma 5 (simplicial rule)</strong> 设 <span
class="math inline">\(N[v]\)</span> 是一个 clique, 则 <span
class="math inline">\(\alpha(G)=1+\alpha(G\backslash N[v])\)</span>.</p>
<p><strong>Lemma 6 (seperator branching)</strong> 设 <span
class="math inline">\(S\subset V\)</span> 是 <span
class="math inline">\(G\)</span> 的 (small) seperator 且 <span
class="math inline">\(\mathcal{I}(S)\)</span> 是 <span
class="math inline">\(S\)</span> 的所有子集中为 <span
class="math inline">\(G\)</span> 的独立集的那些子集的集合, 那么 <span
class="math display">\[
\alpha(G)=\max_{A\in \mathcal{I}(S)}|A|+\alpha(G\backslash (S\cup N[A]))
\]</span></p>
<p>seperator 的定义是 <span class="math inline">\(G\backslash S\)</span>
不连通.</p>
<p><strong><em>PROOF</em></strong> 这个公式还算好理解,
就是将图分为两部分分别计算两部分的最大独立集(其中有一部分比较小,
在这里是 <span class="math inline">\(S\)</span>,
可以快速处理出最大独立集) <span class="math inline">\(S,G&#39;\)</span>,
其中 <span class="math inline">\(G&#39;\)</span> 为 <span
class="math inline">\(G\backslash S\)</span> 再去除掉 <span
class="math inline">\(S\)</span> 中最大独立集的邻接点的子图防止直接算
<span class="math inline">\(S,G\backslash S\)</span>
的最大独立集时出现冲突, 枚举 <span class="math inline">\(G[S]\)</span>
所有的最大独立集即可.</p>
<blockquote>
<p>只对较小的 <span class="math inline">\(S\)</span> 应用 Lemma 6,
防止分支数目过多, 在本算法中会确保 <span class="math inline">\(|S|\le
2\)</span>.</p>
</blockquote>
<p><strong>Lemma 7</strong> 对于不连通的图 <span
class="math inline">\(G\)</span>, 设 <span
class="math inline">\(C\)</span> 是它的连通分量, 则 <span
class="math inline">\(\alpha(G)=\alpha(G[C])+\alpha(G\backslash
C)\)</span>.</p>
<blockquote>
<p>也许设所有连通分量的集合为 <span class="math inline">\(\cal
C\)</span>, 可以写成下面的公式 <span class="math display">\[
\alpha(G)=\sum_{C\in \mathcal{C}}\alpha(G[C])
\]</span></p>
</blockquote>
<h3 id="具体的算法">具体的算法</h3>
<p>当 <span class="math inline">\(\delta(G)\le 3\)</span>
时每次选择度数最小的结点 <span class="math inline">\(v\)</span> 做
branch, 当 <span class="math inline">\(\Delta(G)\ge 6\)</span>
时每次选择度数最大的结点 <span class="math inline">\(v\)</span> 做
branch, 有如下分类讨论:</p>
<ul>
<li><p><span class="math inline">\(d(v)=0\)</span> 或 <span
class="math inline">\(d(v)=1\)</span> 时, 直接选 <span
class="math inline">\(v\)</span>, 并递归地求解 <span
class="math inline">\(G\backslash N[v]\)</span> 的最大独立集.</p></li>
<li><p><span class="math inline">\(d(v)=2\)</span> 时, 设 <span
class="math inline">\(v\)</span> 的邻接顶点为 <span
class="math inline">\(u_1,u_2\)</span></p>
<ul>
<li><p>若 <span class="math inline">\(u_1,u_2\)</span> 相邻则 <span
class="math inline">\(N[v]\)</span> 是一个 clique, 则 <span
class="math inline">\(\alpha(G)=1+\alpha(G\backslash N[v])\)</span>
递归求 <span class="math inline">\(\alpha(G\backslash N[v])\)</span>.
(Lemma 5)</p></li>
<li><p>若 <span class="math inline">\(u_1,u_2\)</span> 不相邻:</p>
<p><em>(i)</em> 若 <span class="math inline">\(|N^2(v)|=1\)</span>,
则应用 seperator branching,</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308311827747.png" alt="|N^2(v)|=1的情况" style="zoom:50%;" /></p>
<p>其中 <span class="math inline">\(G&#39;\)</span> 是除了 <span
class="math inline">\(v,u_1,u_2,w\)</span> 以外剩下的子图, 那么此时的
seperator <span class="math inline">\(S=N^2(v)=\{w\}\)</span>, 于是
<span class="math inline">\(\mathcal{I}(S)=\{\emptyset,\{w\}\}\)</span>,
那么 <span class="math display">\[
\alpha(G)=\max \{\alpha(G\backslash \{w\}),1+\alpha(G\backslash
(\{w\}\cup N[w]))\}
\]</span> 移除 <span class="math inline">\(w\)</span>
后左边的图十分简单, 因此 <span class="math inline">\(\alpha(G\backslash
\{w\})=2+\alpha(G\backslash N^2[v])\)</span>, 以及 <span
class="math inline">\(1+\alpha(G\backslash (\{w\}\cup
N[w]))=2+\alpha(G\backslash (N^2[v]\cup N[w]))\)</span>, 那么 branching
vector 为 <span class="math inline">\((|N^2[v]\cup
N[w]|,|N^2[v]|)\)</span>, 这至少是 <span
class="math inline">\((5,4)\)</span>.</p>
<p><em>(2)</em> 若 <span class="math inline">\(|N^2(v)|\ge 2\)</span>,
则应用 mirror branching. 若丢弃 <span class="math inline">\(v\)</span>
则所有最大独立集都不会包括 <span class="math inline">\(v\)</span>, 那么
<span class="math inline">\(v\)</span> 的两个邻接顶点 <span
class="math inline">\(u_1,u_2\)</span> 都要被选择(引理3)并递归求解 <span
class="math inline">\(\alpha(G\backslash N[v])\)</span>; 如果选择 <span
class="math inline">\(v\)</span>, 则需要丢弃 <span
class="math inline">\(u_1,u_2\)</span> 和所有的 mirror, 递归求解 <span
class="math inline">\(\alpha(G\backslash
M(v)\cup\{v,u_1,u_2\})=\alpha(G\backslash N^2[v])\)</span>. 因此
branching factor 为 <span
class="math inline">\((|N[v]|,|N^2[v]|)\)</span>, 至少是 <span
class="math inline">\((3,5)\)</span>. 此时上界是 <span
class="math inline">\(\tau(5,3)&lt;1.1939\)</span>.</p></li>
</ul></li>
<li><p><span class="math inline">\(d(v)=3\)</span> 时, 设 <span
class="math inline">\(v\)</span> 的邻接顶点为 <span
class="math inline">\(u_1,u_2,u_3\)</span>, 则</p>
<ul>
<li><p>若 <span class="math inline">\(N(v)\)</span> 是一个独立集, 假设
<span class="math inline">\(u_i\)</span> 都有在 <span
class="math inline">\(N^2(v)\)</span> 中的邻接顶点, 如若不然, 应用
domination rule 可以删掉 <span class="math inline">\(u_i\)</span>,
这样就退化为了 <span class="math inline">\(d(v)=2\)</span> 的情况. 若
<span class="math inline">\(w\in N^2(v)\)</span> 与 <span
class="math inline">\(N(v)\)</span> 中的至少两个点相连, 则 <span
class="math inline">\(N(v)\backslash N(w)\)</span> 有一个或两个顶点,
一定是 clique, 也就是说这样的 <span class="math inline">\(w\)</span> 为
mirror.</p>
<p><span class="math inline">\(\it 1.\)</span> 若 <span
class="math inline">\(v\)</span> 有 mirror 则直接 mirror branching,
branching factor 为 <span class="math inline">\(\tau([|N[v]|,|\{v\}\cup
M(v)|)\)</span>, 至少为 <span
class="math inline">\(\tau(4,2)&lt;1.2721\)</span> ;</p>
<p><span class="math inline">\(\it 2.\)</span> 若 <span
class="math inline">\(v\)</span> 没有 mirror, <span
class="math inline">\(N^2(v)\)</span> 中的每一个点都恰与 <span
class="math inline">\(N(v)\)</span> 中的<strong>一个</strong>顶点相连,
同时 <span class="math inline">\(G\)</span> 中的每个结点的度数都至少是
<span class="math inline">\(3\)</span>, 那么 <span
class="math inline">\(u_i\)</span> 至少与 <span
class="math inline">\(N^2(v)\)</span> 的两个点相连. 直接做分支:</p>
<ul>
<li>选 <span class="math inline">\(v\)</span> 丢 <span
class="math inline">\(N(v)\)</span>, 至少丢 <span
class="math inline">\(4\)</span> 个点</li>
<li>丢 <span class="math inline">\(v\)</span> 选 <span
class="math inline">\(N(v)\)</span> 中的至少两个点, 即 <span
class="math inline">\(110,101,011,111\)</span> (分别代表 <span
class="math inline">\(u_1,u_2,u_3\)</span> ), 为了方便将 <span
class="math inline">\(111\)</span> 并入某个情况, 减少一个分支.
有两个分支至少丢弃了 <span class="math inline">\(8\)</span> 个点,
有一个分支至少丢了 <span class="math inline">\(7\)</span> 个点.</li>
</ul>
<p>那么 branch factor 为 <span
class="math inline">\(\tau(4,7,8,8)\)</span>.</p></li>
<li><p>若 <span class="math inline">\(G[N(v)]\)</span> 有 <span
class="math inline">\(1\)</span> 或 <span
class="math inline">\(2\)</span> 条边:</p>
<ul>
<li><span class="math inline">\(1\)</span> 条边. 不妨设 <span
class="math inline">\(\{u_1,u_2\}\in E\)</span>, 那么 <span
class="math inline">\(u_3\)</span> 至少连了 <span
class="math inline">\(N^2(v)\)</span> 中的两个点, 且 <span
class="math inline">\(G[\{v,u_1,u_2\}]\)</span> 是一个 clique, 于是
<span class="math inline">\(N^2(v)\)</span> 中与 <span
class="math inline">\(u_3\)</span> 相连的点都是 <span
class="math inline">\(v\)</span> 的 mirror, 至少两个, 实施 mirror
branching, 故 <span class="math inline">\(|N[v]|=4,|M(v)\cup \{v\}|\ge
3\)</span>, <span class="math inline">\(\tau
(4,3)&lt;1.2208\)</span>.</li>
<li><span class="math inline">\(2\)</span> 条边. 不妨在上面的基础上设
<span class="math inline">\(\{u_2,u_3\}\in E\)</span>, 那么很容易验证
<span class="math inline">\(u_1,u_3\)</span> 所有的在 <span
class="math inline">\(N^2(v)\)</span> 中的邻居都是 <span
class="math inline">\(v\)</span> 的 mirror, 于是实施 mirror branching,
在丢弃 <span class="math inline">\(v\)</span> 和所有的 mirror 点之后,
<span class="math inline">\(d(u_1)=d(u_3)=1\)</span>, 根据 <span
class="math inline">\(d(v)=1\)</span> 的情况可以直接选 <span
class="math inline">\(u_1,u_3\)</span> , 故 factor 至少为 <span
class="math inline">\(\tau(4,5)&lt;1.1674\)</span>.</li>
</ul></li>
<li><p>若 <span class="math inline">\(N[v]\)</span> 是个 clique (3条边),
直接 simplicial rule.</p></li>
</ul></li>
<li><p><span class="math inline">\(\Delta(G)\ge 6\)</span> 时,
直接选最大的点 branch 就可, <span
class="math inline">\(\tau(7,1)&lt;1.2554\)</span>.</p></li>
<li><p>若 <span class="math inline">\(G\)</span> 是 <span
class="math inline">\(4\)</span> 或 <span
class="math inline">\(5\)</span>-regular (每个点的度数都为 4 或 5 ) ,
选任意点做分支, 但是不考虑它对时间复杂度的影响.
因为对任意正则图做分支只会增加分支树上叶子节点的数目.</p></li>
<li><p>若 <span class="math inline">\(\Delta(G)=5\land \delta
(G)=4\)</span>, 一定存在 <span class="math inline">\(d(v)=5\land
d(w)=4\land\{v,w\}\in E\)</span>, 直接对 <span
class="math inline">\(v\)</span> 实施 mirror branching, 有 mirror
的话就是 <span class="math inline">\(\tau(2,6)\)</span>, 没有 mirror
的话就是 <span class="math inline">\(\tau(1,6)&lt;1.2852\)</span>,
这个是最劣情况, 显然有点太大了. 考虑用 Addition of Branching Vectors
做改良. 由于选 <span class="math inline">\(v\)</span> 或丢弃 <span
class="math inline">\(v\)</span> 之后 <span
class="math inline">\(d(w)=3\)</span>, 于是在 <span
class="math inline">\(v\)</span> 上做 branch 之后分支 <span
class="math inline">\(1\)</span> 就可以立刻在 <span
class="math inline">\(w\)</span> 上做 branch, 此时相当于要把 <span
class="math inline">\((4,2)\)</span> 或者 <span
class="math inline">\((4,7,8,8)\)</span> 加到 <span
class="math inline">\((1,6)\)</span> 上, 得到 <span
class="math inline">\(\tau(5,3,6)&lt;1.2786\)</span> 或 <span
class="math inline">\((5,8,9,9,6)&lt;1.2548\)</span>.</p></li>
</ul>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309011131090.png" style="zoom:50%;" /></p>
<p>最终得到的复杂度为 <span
class="math inline">\(O^*(1.2786^n)\)</span>,
算法描述就是下面这个样子:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309011130349.png" /></p>
<p><a
href="https://www.sciencedirect.com/science/article/pii/S0890540117300950">Exact
algorithms for maximum independent set - ScienceDirect</a></p>
]]></content>
      <categories>
        <category>Exact Exponential Algorithm</category>
      </categories>
  </entry>
  <entry>
    <title>精确算法 DYNAMIC PROGRAMMING</title>
    <url>/2023/07/29/exact-exponetial-algorithm/exact-algorithm-dynamic-programming/</url>
    <content><![CDATA[<h1 id="染色">染色</h1>
<p>染色问题的暴力复杂度为 <span
class="math inline">\(O(n^n)\)</span>.</p>
<p>由于染色问题要求相邻两点颜色不同, 可以考虑借助独立集的性质,
在给定的图上加上一些互不相邻的点后色数恰好加一(或者说染色后每一种颜色的顶点集合都是一个独立集),
对于 <span class="math inline">\(X\subset V\)</span>, 记 <span
class="math inline">\(f(X)=\chi(G[X])\)</span>, <span
class="math inline">\(G[X]\)</span> 的最大独立集集合为 <span
class="math inline">\(\mathcal{I}_X\)</span>, 那么就有下面的递推 <span
class="math display">\[
f(X)
=
\begin{cases}
0,&amp;X=\emptyset\\
\displaystyle 1+\min_{I\in \mathcal{I}_X} f(X\backslash
I),&amp;\text{otherwise}.
\end{cases}
\]</span> 可以断言 <span
class="math inline">\(\chi(G)=f(V)\)</span>.</p>
<p>这个 DP 算法的复杂度为 <span
class="math inline">\(O^*((1+\sqrt[3]{3})^n)\)</span>,
证明需要用到最大独立集的 branching 算法的时间复杂度.</p>
<p>先把证明贴到下面:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/1690711871888.png" /></p>
<h1 id="集合覆盖">集合覆盖</h1>
<h1 id="最小支配集">最小支配集</h1>
<p>首先叙述最小支配集问题与集合覆盖问题 <span
class="math inline">\((\cal U,S)\)</span> 的关系: 令 <span
class="math inline">\(\mathcal{U}=V, \mathcal{S}=\{N[v]:v\in V
\}\)</span>, 可以将求解最小支配集的问题转化为集合覆盖问题. 称 <span
class="math inline">\(u\)</span> 被 <span
class="math inline">\(v\)</span> 支配当且仅当 <span
class="math inline">\(u\in N(v)\)</span>, 那么 <span
class="math inline">\(N[v]\)</span> 是所有被 <span
class="math inline">\(v\)</span> 支配的点的集合, 因此对于 <span
class="math inline">\(D\subset V\)</span>, <span
class="math inline">\(D\)</span> 是最小支配集当且仅当 <span
class="math inline">\(\{N[v]:v\in D\}\)</span> 能够覆盖 <span
class="math inline">\(\{N[v]:v\in V\}\)</span>.</p>
<p>对于一般的图 <span class="math inline">\(G\)</span> 而言,
存在一个求解其最小支配集的动态规划算法, 时间复杂度为 <span
class="math inline">\(O(n^{O(1)}2^{n-|I|})\)</span>, 其中 <span
class="math inline">\(I\)</span> 为最大独立集, 特别地, 对于二分图而言
<span class="math inline">\(|I|=n/2\)</span>, 时间复杂度为 <span
class="math inline">\(O^*(2^{n/2})\)</span>. 下面叙述这个算法.</p>
<p>设 <span class="math inline">\(J=V\backslash I\)</span>, 首先 <span
class="math inline">\(J\)</span> 一定是支配集, 考虑反证法, 假设存在
<span class="math inline">\(v\in I\)</span> 且 <span
class="math inline">\(v\)</span> 没有被 <span
class="math inline">\(J\)</span> 支配, 那么 <span
class="math inline">\(v\)</span> 不与 <span
class="math inline">\(J\)</span> 中的点相邻, 而 <span
class="math inline">\(v\)</span> 又不与 <span
class="math inline">\(I\)</span> 中的相邻, 那么 <span
class="math inline">\(v\)</span> 就是一个孤立的点,
而我们只考虑连通图.</p>
<p>考虑枚举 <span class="math inline">\(V\)</span> 的子集 <span
class="math inline">\(D\)</span> 在 <span
class="math inline">\(J\)</span> 上的投影来寻找最小支配集, 令 <span
class="math inline">\(J_D=J\cap D\)</span>, 逐步向 <span
class="math inline">\(J_D\)</span> 中添加 <span
class="math inline">\(I\)</span> 中的顶点, 可以得到支配集. ?</p>
<p>对于每个 <span class="math inline">\(J_D\subset J\)</span>, 令 <span
class="math inline">\(|D|=\min\{|D&#39;|:D&#39;\text{ is a dominating
set}\land J\cap D&#39;=J_D\}\)</span>, 那么就有<span
class="math inline">\(\gamma(G)=\min_{J_D\subset J}|D|\)</span>.</p>
<p>令 <span class="math inline">\(I_D=I\backslash N(J_D)\)</span>,
表示最大独立集 <span class="math inline">\(I\)</span> 中没有被 <span
class="math inline">\(J_D\)</span> 支配的部分, 再令 <span
class="math inline">\(J_X=J\backslash(N(J_D)\cup N(I_D))\)</span> 表示
<span class="math inline">\(J\)</span> 中没有被 <span
class="math inline">\(J_D\cup I_D\)</span> 支配的部分, 那么通过置 <span
class="math inline">\(\mathcal{U}=J_X,\mathcal{S}=\{N[v]:v\in
I\backslash I_D \}\)</span>,
便可将原问题转化成一个新的规模稍小一些的集合覆盖问题,
这个集合覆盖问题可以在 <span
class="math inline">\(O(n^{O(1)}2^{|J_X|})\)</span> 内解决,
那么总的时间复杂度为 <span
class="math inline">\(O(3^{n-|I|})\)</span>.</p>
<blockquote>
<p>看不懂. 先放弃了. 以后有时间再看吧. /kk</p>
</blockquote>
<p>剩下是设计一个新的动态规划算法将时间复杂度从 <span
class="math inline">\(O^*(3^{n-|I|})\)</span> 降到 <span
class="math inline">\(O^*(2^{n-|I|})\)</span> 的过程.</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308031143234.png" /></p>
]]></content>
      <categories>
        <category>Exact Exponential Algorithm</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day1</title>
    <url>/2022/09/01/calculus/Calculus-review-Day1/</url>
    <content><![CDATA[<p>1：计算 <span class="math display">\[
\int_0^{+\infty}\frac{x}{\mathrm{e}^x+1}\mathrm{d}x.
\]</span> <span id="more"></span></p>
<p><strong><em>SOL1</em></strong> <span class="math display">\[
\begin{aligned}\int_0^{+\infty}\frac{x}{\mathrm{e}^x+1}\mathrm{d}x&amp;=\int_0^{+\infty}\frac{-x\mathrm{d}(\mathrm{e}^{-x})}{1+\mathrm{e}^{-x}}\\&amp;\xlongequal{\mathrm{e}^{-x}\mapsto
x}\int_1^0\frac{\ln
x}{1+x}\mathrm{d}x\\&amp;=\int_0^1\frac{\ln(1+x)}{x}\mathrm{d}x \quad
\text{Integration by
parts}\\&amp;=\int_0^1\sum_{n=1}^{\infty}\frac{(-1)^{n-1}x^{n-1}}{n}\mathrm{d}x\\&amp;=\sum_{n=1}^{\infty}\frac{(-1)^{n-1}}{n}\int_0^1x^{n-1}\mathrm{d}x\\&amp;=\sum_{n=1}^{\infty}\frac{(-1)^{n-1}}{n^2}\\&amp;=\sum_{n=1}^{\infty}\frac{1}{n^2}-2\sum_{n=1}^{\infty}\frac{1}{(2n)^2}\\&amp;=\frac{\pi^2}{12}.\end{aligned}
\]</span> 2：设 <span class="math display">\[
f(a)=\int_1^{+\infty}\frac{\arctan ax}{x^2\sqrt{x^2-1}}\mathrm{d}x,a\ge
0.
\]</span> 求 <span class="math inline">\(f(a).\)</span></p>
<p><strong><em>SOL</em></strong> <span class="math display">\[
\begin{aligned}f&#39;(a)&amp;=\int_1^{+\infty}\frac{1}{x(a^2x^2+1)\sqrt{x^2-1}}\mathrm{d}x\\&amp;\xlongequal{x\mapsto\sec
x}\int_0^{\frac{\pi}{2}}\frac{1}{(a^2\sec^2 x+1)\sec x\tan
x}\mathrm{d}(\sec x)\\&amp;=\int_0^{\frac{\pi}{2}}\frac{1}{a^2\sec^2
x+1}\mathrm{d}x\\&amp;\xlongequal{x\mapsto \tan
x}\int_0^{+\infty}\frac{1}{(a^2x^2+a^2+1)(x^2+1)}\mathrm{d}x\\&amp;=\int_0^{+\infty}\left(\frac{1}{x^2+1}-\frac{1}{x^2+\frac{a^2+1}{a^2}}\right)\mathrm{d}x\\&amp;=\frac{\pi}{2}\left(1-\frac{a}{\sqrt{a^2+1}}\right)\end{aligned}
\]</span> 于是 <span class="math display">\[
f(a)=\frac{\pi}{2}a-\pi\sqrt{1+a^2}+C.
\]</span> 而 <span class="math inline">\(f(0)=0,\)</span> 因此 <span
class="math display">\[
f(a)=f(a)=\frac{\pi}{2}a-\pi\sqrt{1+a^2}+\pi.
\]</span> <span class="math inline">\(\square\)</span></p>
<p>3：设 <span class="math inline">\(f(x)\)</span> 在 <span
class="math inline">\([-1,2]\)</span> 上三阶可导，且 <span
class="math inline">\(f(-1)=1,f(0)=4,\)</span> <span
class="math inline">\(f&#39;(-1)=8,f&#39;(1)=24.\)</span> 求证：存在
<span class="math inline">\(\xi\in[-1,2]\)</span> 使得 <span
class="math inline">\(f&#39;&#39;&#39;(\xi)=24\xi+30.\)</span></p>
<p><strong><em>PROOF</em></strong> 考虑用多项式拟合 <span
class="math inline">\(f(x).\)</span> 利用待定系数法可得满足 <span
class="math inline">\(p(-1)=1,p(0)=4,\)</span> <span
class="math inline">\(p&#39;(-1)=8,p&#39;(1)=24\)</span>
的次数最小的多项式为 <span
class="math inline">\(p(x)=x^4+5x^3+2x^2+x+4,\)</span> 且 <span
class="math inline">\(p&#39;&#39;&#39;(x)=24x+30.\)</span>
那么我们只需证明 <span class="math inline">\(g(x)=f(x)-p(x)\)</span>
的三阶导数存在零点即可。且 <span
class="math inline">\(g(-1)=g(0)=g&#39;(-1)=g&#39;(1)=0,\)</span>
则由Rolle定理得存在 <span class="math inline">\(\xi_1\in(-1,0)\)</span>
使得 <span class="math inline">\(g&#39;(\xi_1)=0;\)</span> 存在 <span
class="math inline">\(\xi_2\in(-1,\xi_1)\)</span> 使得 <span
class="math inline">\(g&#39;&#39;(\xi_2)=0;\)</span> 存在 <span
class="math inline">\(\xi_3\in(\xi_1,1)\)</span> 使得 <span
class="math inline">\(g&#39;&#39;(\xi_3)=0;\)</span> 于是存在 <span
class="math inline">\(\xi\in(\xi_2,\xi_3)\subset[-1,2]\)</span> 使得
<span
class="math inline">\(g&#39;&#39;&#39;(\xi)=f&#39;&#39;&#39;(\xi)-24\xi-30=0,\)</span>
这就是要证的。<span class="math inline">\(\square\)</span></p>
<p>4：证明级数 <span class="math display">\[
\sum_{n=1}^\infty
\ln\left(1+\frac{1}{n}\right)\ln\left(1+\frac{1}{2n}\right)\ln\left(1+\frac{1}{2n+1}\right),
\]</span> 收敛并求其值。</p>
<p><strong><em>SOL</em></strong> 显然 <span class="math inline">\(n\to
\infty\)</span> 时 <span class="math display">\[
\ln\left(1+\frac{1}{n}\right)\ln\left(1+\frac{1}{2n}\right)\ln\left(1+\frac{1}{2n+1}\right)\sim
\frac{1}{n^3},
\]</span> 这表明其收敛。</p>
<p>记 <span
class="math inline">\(a_n=\ln\left(1+\frac{1}{n}\right),\)</span>
且注意到 <span class="math inline">\(a_{2n+1}+a_{2n}=a_n,\)</span> 于是
<span class="math display">\[
\begin{aligned}\sum_{n=1}^{\infty}a_na_{2n}a_{2n+1}&amp;=\sum_{n=1}^{\infty}(a_{2n}+a_{2n+1})a_{2n}a_{2n+1}\\&amp;=\sum_{n=1}^{\infty}(a_{2n}^2a_{2n+1}+a_{2n}a^2_{2n+1})\\&amp;=\sum_{n=1}^{\infty}\frac{1}{3}(a^3_{2n}+3a_{2n}^2a_{2n+1}+3a_{2n}a^2_{2n+1}+a_{2n+1}^3)-\frac{1}{3}(a_{2n}^3+a_{2n+1}^3)\\&amp;=\frac{1}{3}\sum_{n=1}^{\infty}(a_n^3-a_{2n}^3-a_{2n+1}^3)\end{aligned}
\]</span> 而 <span class="math display">\[
\sum_{n=1}^N(a_n^3-a_{2n}^3-a_{2n+1}^3)=a_1^3-\sum_{n=N+1}^{2N+1}a^3_n
\]</span> 且 <span class="math inline">\(N\to \infty\)</span> 时， <span
class="math display">\[
0&lt;\sum_{n=N+1}^{2N+1}a^3_n&lt;
(N+1)\ln^3\left(1+\frac{1}{N+1}\right)&lt;\frac{1}{(N+1)^2}\to 0
\]</span> 于是 <span class="math display">\[
\frac{1}{3}\sum_{n=1}^{\infty}(a_n^3-a_{2n}^3-a_{2n+1}^3)=\frac{1}{3}a_1^3=\frac{\ln^32}{3}.
\]</span> <span class="math inline">\(\square\)</span></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
  </entry>
  <entry>
    <title>精确算法 MEASURE AND CONQUER</title>
    <url>/2023/09/04/exact-exponetial-algorithm/exact-algorithm-measure-and-conquer/</url>
    <content><![CDATA[<p>在 <a
href="https://baoduoxu.github.io/2023/08/17/exact-exponetial-algorithm/exact-algorithm-branching">BRANCHING</a>
中, 给出的分析时间复杂度的方法只能得到较为粗略的上界, 而 MEASURE AND
CONQUER (简称为 M&amp;C) 能够求出更紧的界.</p>
<p>设问题 <span class="math inline">\(P\)</span> 的 instance 为 <span
class="math inline">\(I_P\)</span>, <span
class="math inline">\(I_P\)</span> 的 measure 为 <span
class="math inline">\(M(I_P)\)</span>.</p>
<p>M&amp;C 更注重于 <strong>measure</strong> 的选择, 而不是创造
branching 和 reduction rules. 一个 measure 需要满足下面的条件:</p>
<ul>
<li>设 <span class="math inline">\(P&#39;\)</span> 是 <span
class="math inline">\(P\)</span> 通过 reduction 得到的子问题, 则 <span
class="math inline">\(M(I_{P&#39;})&lt;M(I_P)\)</span>.</li>
<li>对任意instance <span class="math inline">\(I\)</span>, <span
class="math inline">\(M(I)\ge 0\)</span>.</li>
<li>input 的 measure 以 <span
class="math inline">\(f(\text{natural}~\text{parameter  of  input})\)</span>
为上界.</li>
</ul>
<p>更复杂的 measure 可以给时间复杂度提供更好的上界.</p>
<h1 id="maximum-independent-set">Maximum Independent Set</h1>
<p>将以下面的算法为例来分析其复杂度. 基于 <a
href="https://baoduoxu.github.io/2023/08/17/exact-exponetial-algorithm/exact-algorithm-branching">BRANCHING</a>
中的各个引理, 下面的算法正确性显然, 其中 <span
class="math inline">\(\Delta(G)\le 2\)</span> 甚至 <span
class="math inline">\(G\)</span> 为树时多项式地求 <span
class="math inline">\(G\)</span> 的最大独立集是已知的事实.</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309041941626.png" /></p>
<p>上述算法中唯一的分支在 (3), 此时 branching vector 为 <span
class="math inline">\((d(v)+1,1)\)</span> 至少为 <span
class="math inline">\((4,1)\)</span>, 则 <span
class="math inline">\(\tau(4,1)&lt;1.3803\)</span>, 得到了 <span
class="math inline">\(O(1.3803^n)\)</span> 的时间复杂度,
但这只是一个最坏情况的上界.</p>
<blockquote>
<p>求解树的最大独立集的多项式时间算法: 由于树的叶子结点度数总为 <span
class="math inline">\(1\)</span>, 因此设 <span
class="math inline">\(T\)</span> 的叶子集合为 <span
class="math inline">\(L(T)\)</span>, 那么 <span
class="math inline">\(\alpha(T)=|L(T)|+\alpha(G\backslash
N[L(T)])\)</span>, 可以 <span class="math inline">\(O(n)\)</span>
地求出树的最大独立集 (最坏情况是 <span class="math inline">\(T\)</span>
为链的情形).</p>
</blockquote>
<h2
id="重新设计问题实例并使用mc分析">重新设计问题实例并使用M&amp;C分析</h2>
<p>首先已经知道 branching 的运行时间以<strong>多项式<span
class="math inline">\(\times\)</span>搜索树的叶子结点数</strong>为界,
而叶子节点完全由分支规则 (3) 产生, 因此 branch 是(在运行时间上) “costly”
的, reduction 是“cheap” 的也就是说度数大于等于3的点是 “costly” 的,
度数不超过2的的点是 “cheap” 的, 为其分别定义权重 <span
class="math inline">\(1\)</span> 和 <span
class="math inline">\(0\)</span>.</p>
<p>因此定义图 <span class="math inline">\(G&#39;\)</span> (的 instance)
的 measure 为 <span class="math inline">\(k_1(G&#39;)=n_{\ge 3}\)</span>
表示 <span class="math inline">\(G&#39;\)</span> 中度数至少为 3
的点的个数.</p>
<blockquote>
<p>事实上是所有结点的权重和. 前述 instance 为 <span
class="math inline">\(n\)</span> 的情况相当于每个点的权重都为 <span
class="math inline">\(1\)</span>.</p>
</blockquote>
<p>分析和 <span class="math inline">\(k_1\)</span> 有关的 branching
vectors, 在下面也会把 <span class="math inline">\(k_1\)</span> 称为
weight of instance.</p>
<blockquote>
<p>"和 <span class="math inline">\(k_1\)</span> 有关"的含义: 在前面以
<span class="math inline">\(G\)</span> 的结点数 <span
class="math inline">\(n\)</span> 为问题的 instance, 分支后得到的子问题的
instance 为 <span class="math inline">\(n-t_1,\cdots,n-t_r\)</span>,
在这里将 <span class="math inline">\(k_1\)</span> 作为问题的 instance,
那么得到的子问题的 instance 为 <span
class="math inline">\(k_1-t_1,\cdots,k_1-t_r\)</span>, branching vector
的写法并不改变.</p>
</blockquote>
<p>首先需要分析的是, branching rule (3) 是如何具体改变 <span
class="math inline">\(k_1\)</span> 的:</p>
<ul>
<li><p>当丢弃 <span class="math inline">\(v\)</span> 时, 对于 <span
class="math inline">\(w\in N(v)\land d_{G&#39;}(w)=3\)</span>, <span
class="math inline">\(w\)</span> 的权也会从 <span
class="math inline">\(1\)</span> 变为 <span
class="math inline">\(0\)</span>, 因此 instance 的 measure 减少 <span
class="math inline">\(1+\#\{w:\{v,w\}\in E,d_{G&#39;}(w)=3\}\)</span>,
至少为 <span class="math inline">\(1\)</span>.</p></li>
<li><p>当选择 <span class="math inline">\(v\)</span> 时, <span
class="math inline">\(N^2_{G&#39;}(v)\)</span> 中的点的权重可能会改变.
很不幸的是如果 <span class="math inline">\(v\)</span> 的存在度数为 2
的邻接点或者全部的邻接点度数都为 2, 那么选择 <span
class="math inline">\(v\)</span> 造成的删点有可能不会影响 <span
class="math inline">\(k_1\)</span> 的大小(只删去了度数为 <span
class="math inline">\(0\)</span> 的点), 这就意味着 branching vector 为
<span class="math inline">\((1,1)\)</span>, <span
class="math inline">\(\tau(1,1)=2\)</span>, 并没有达到目的.</p></li>
</ul>
<p>显然 <span class="math inline">\(k_1\)</span> 并不是一个好的 measure,
需要重新设计.</p>
<p>问题在于度数为 2 的结点. 度数为 0 或 1 的结点可以被立刻由 reduction
移除掉, 度数至少为 3 的结点会进行 branch, 只有度数为 2 的结点留在图中,
因此应该有三种权重. 这很好修改, 令 <span
class="math inline">\(w_2\in[0,1]\)</span> 表示结点度数为 2 的权重,
那么设计 measure <span class="math inline">\(k_2(G&#39;)\)</span> <span
class="math display">\[
k_2(G&#39;)=w_2n_{2}+n_{\ge 3}
\]</span> 我们不关心 <span class="math inline">\(w_2\)</span>
取何值时可以得到最好的结果 (通过更细致的分析和算力可以做到),
只需要知道改变 measure 可以得到一个更好的界即可, 这就是 M&amp;C
的基本思想.</p>
<p><strong>定理 1</strong> 当 <span
class="math inline">\(w_2=0.5\)</span> 时, 以 <span
class="math inline">\(k_2\)</span> 为 measure 进行 M&amp;C 可以得到算法
mis3 的运行时间为 <span
class="math inline">\(\mathcal{O}(1.3248^n)\)</span>. <span
class="math inline">\(\square\)</span></p>
<hr />
<h1 id="feedback-vertex-set">Feedback Vertex Set</h1>
<p>Feedback Vertex Set 简称为 FVS.</p>
<p>给定图 <span class="math inline">\(G=(V,E)\)</span>, 若 <span
class="math inline">\(W\subset V\)</span> 满足 <span
class="math inline">\(G\backslash W\)</span> 不含有 cycle ( <span
class="math inline">\(G\backslash W\)</span> 为森林), 则称 <span
class="math inline">\(W\)</span> 为 FVS. FVS 问题目的是找到最小的 FVS,
即<strong>删去最少数目的点使原图成为树/森林.</strong></p>
<h2 id="fvs-的一个算法">FVS 的一个算法</h2>
<h3 id="前置定义与引理">前置定义与引理</h3>
<p>称点集 <span class="math inline">\(F\subset V\)</span> 是无环的如果
<span class="math inline">\(G[F]\)</span> 是森林, 那么最大无环集 <span
class="math inline">\(F\)</span> 与最小 FVS <span
class="math inline">\(W\)</span> 是 <span
class="math inline">\(V\)</span> 的一个划分, 所以<strong>求最小 FVS
等价于求最大无环集</strong>.</p>
<p>现在定义对 <span class="math inline">\(G[F]\)</span> 的非平凡连通分量
<span class="math inline">\(T\)</span>
的<strong>收缩(contract)</strong>操作 (<strong>非平凡</strong>的含义是树
<span class="math inline">\(T\)</span> 的结点数至少为 2):</p>
<ul>
<li><span class="math inline">\(\mathrm{compress}(T\to t)\)</span>
表示将 <span class="math inline">\(T\)</span> 收缩为结点 <span
class="math inline">\(t\)</span>, 保留与 <span
class="math inline">\(t\)</span> 相连的所有的边, 并删去缩点后与 <span
class="math inline">\(t\)</span> <strong>有重边</strong>相连的结点.</li>
</ul>
<p>对于无环集 <span class="math inline">\(F\)</span> 定义 <span
class="math inline">\(\mathcal{M}_G(F)\)</span> 是 <span
class="math inline">\(G\)</span> 的所有以 <span
class="math inline">\(F\)</span> 为子集的最大无环集 (对于 <span
class="math inline">\(F&#39;\in \mathcal{M}_G(F)\)</span>, <span
class="math inline">\(F\subset F&#39;\)</span> 且 <span
class="math inline">\(F&#39;\)</span> 是最大无环集). 置 <span
class="math inline">\(\mathcal{M}:=\mathcal{M}(\emptyset)\)</span>, 那么
FVS 问题转化为求 <span class="math inline">\(\mathcal{M}\)</span>
的一个元素, 一个更一般的问题是对任意 <span
class="math inline">\(F\)</span> 找到 <span
class="math inline">\(\mathcal{M}(F)\)</span> 的一个元素.</p>
<p>收缩操作的目的是对图进行简化而不影响最大无环集, 且收缩操作必然可以将
<span class="math inline">\(F\)</span> 变为独立集,
那么收缩之后问题就转化为<strong>给定独立集 <span
class="math inline">\(F\)</span> 求 <span
class="math inline">\(G\)</span> 包含 <span
class="math inline">\(F\)</span> 的最大无环集</strong>,
这会降低问题的求解难度.</p>
<p>现在需要论证最大无环集 <span class="math inline">\(X\)</span>
收缩得到的独立集 <span class="math inline">\(X&#39;\)</span>
是收缩后的图的最大无环集(如果给收缩定义一个逆操作“展开”, 也要论述 <span
class="math inline">\(X&#39;\)</span> 展开后得到的 <span
class="math inline">\(X\)</span> 是原图的最大无环集, 当然,
不关注展开之后的图是什么样子的, 毕竟收缩是丢失信息的),
表述为下面的引理:</p>
<p><strong>Lemma 1</strong> 设 <span class="math inline">\(F\)</span>
是无环集且 <span class="math inline">\(T\)</span> 是 <span
class="math inline">\(G[F]\)</span> 的非平凡连通分量, 令 <span
class="math inline">\(G&#39;\)</span> 是 <span
class="math inline">\(G\)</span> 做 <span
class="math inline">\(\mathrm{compress}(T\to t)\)</span> 操作后得到的图,
那么 <span class="math display">\[
X\in \mathcal{M}_G(F)\iff (X-T)\cup \{t\}\in
\mathcal{M}_{G&#39;}((F-T)\cup\{t\})
\]</span> <strong><em>PROOF</em></strong> 这个证明全部依托于反证法,
且证了一个方向之后另一个方向就是相似的方法.</p>
<p>当 <span class="math inline">\(X\in \mathcal{M}_G(F)\)</span> 时,
需要证明的是: <span class="math inline">\((X-T)\cup \{t\}\)</span> 是
<span class="math inline">\(G&#39;\)</span> 的最大无环集, 且 <span
class="math inline">\((F-T)\cup\{t\}\subset (X-T)\cup\{t\}\)</span>,
后面是显然的, 因为 <span class="math inline">\(F\subset X\)</span>.</p>
<p>首先若收缩后 <span class="math inline">\(t\)</span> 与 <span
class="math inline">\(v\)</span> 有重边相连, 则 <span
class="math inline">\(T\cup\{v\}\)</span> 就含有环, 这意味着 <span
class="math inline">\(v\not\in X\)</span>, 于是收缩删除的点不会包括
<span class="math inline">\(X-T\)</span> 中的点, 于是 <span
class="math inline">\((X-T)\cup \{t\}\)</span> 是 <span
class="math inline">\(G&#39;\)</span> 的顶点集的子集.</p>
<p><span class="math inline">\(\it {(1)}\)</span> 证明 <span
class="math inline">\((X-T)\cup \{t\}\)</span> 是无环的. 令 <span
class="math inline">\(X&#39;=(X-T)\cup\{t\}\)</span>, 假设 <span
class="math inline">\(X&#39;\)</span> 有环 <span
class="math inline">\(C&#39;\)</span>, 由于 <span
class="math inline">\(X-T\)</span> 是无环的, 那么 <span
class="math inline">\(t\)</span> 在环 <span
class="math inline">\(C&#39;\)</span> 中, 可以将 <span
class="math inline">\(C&#39;\)</span> 写成 <span
class="math inline">\([u_1,\cdots,u_2]\cup\{t\}\)</span> 的形式, 其中
<span class="math inline">\(t\)</span> 与 <span
class="math inline">\(u_1,u_2\)</span> 相邻且 <span
class="math inline">\([u_1,\cdots,u_2]\)</span> 是 <span
class="math inline">\(X-T\)</span> 中的一条路径. 现在再展开 <span
class="math inline">\(t\)</span>, 那么 <span
class="math inline">\(T\)</span> 中有 <span
class="math inline">\(v_1,v_2\)</span> 使得 <span
class="math inline">\(v_1\)</span> 与 <span
class="math inline">\(u_1\)</span> 相邻, <span
class="math inline">\(v_2\)</span> 与 <span
class="math inline">\(u_2\)</span> 相邻, 且 <span
class="math inline">\(v_1,v_2\)</span> 之间有路径 <span
class="math inline">\([v_1,\cdots,v_2]\)</span>, 这意味着在 <span
class="math inline">\(G\)</span> 中 <span
class="math inline">\([u_1,\cdots,u_2]\cup [v_2,\cdots,v_1]\)</span>
是一个环, 这个环是 <span class="math inline">\(G[X]\)</span> 的子图,
显然与 <span class="math inline">\(X\)</span> 的无环性相悖.</p>
<blockquote>
<p>通过假设有环, 构造出一个环为 <span
class="math inline">\(G[X]\)</span> 的子图以得到矛盾.</p>
</blockquote>
<p><span class="math inline">\(\it (2)\)</span> 证明 <span
class="math inline">\((X-T)\cup \{t\}\)</span> 是最大的. 假设 <span
class="math inline">\(G&#39;\)</span> 存在 <span
class="math inline">\(Y&#39;\)</span> 使得 <span
class="math inline">\(|Y&#39;|&gt;|X&#39;|\)</span>, 那么在 <span
class="math inline">\(G\)</span> 中 <span
class="math inline">\((Y&#39;-\{t\})\cup T\)</span> 就是一个比 <span
class="math inline">\(X\)</span> 更大的无环集, 这与 <span
class="math inline">\(X\)</span> 的最大性质相悖. <span
class="math inline">\(\square\)</span></p>
<p>因此当我们在求 <span class="math inline">\(G\)</span> 的包含 <span
class="math inline">\(F\)</span> 的最大无环集时, 总可以假定 <span
class="math inline">\(F\)</span> 是独立集, 如若不然, 收缩即可.</p>
<p>下面的引理是后续分支算法的 branching rules 的主要依据.</p>
<p><strong>Lemma 2</strong> 设 <span class="math inline">\(F\)</span> 是
<span class="math inline">\(G\)</span> 的一个独立集, 且 <span
class="math inline">\(v\not\in F\)</span> 恰与 <span
class="math inline">\(F\)</span> 中的一个顶点 <span
class="math inline">\(t\)</span> 相邻, 则存在 <span
class="math inline">\(X\in\mathcal{M}(F)\)</span> 使得 <span
class="math inline">\(v\)</span> 或者 <span
class="math inline">\(N(v)-\{t\}\)</span> 中的两个顶点在 <span
class="math inline">\(X\)</span> 中.</p>
<p><strong><em>PROOF</em></strong> 分类讨论一下即可, 首先假设 <span
class="math inline">\(N(v)-\{t\}\)</span> 中没有点在 <span
class="math inline">\(X\)</span> 中(它们也不在 <span
class="math inline">\(F\)</span> 中), 则 <span
class="math inline">\(M_{G\backslash (N(v)-\{t\})}(F)=M_G(F)\)</span>,
且 <span class="math inline">\(G\backslash (N(v)-\{t\})\)</span> 中
<span class="math inline">\(d(v)=1\)</span>, 那么 <span
class="math inline">\(X\cup \{v\}\)</span> 也是无环的同时是 <span
class="math inline">\(G\)</span> 的最大无环集, 这与 <span
class="math inline">\(X\)</span> 的最大性矛盾, 因此 <span
class="math inline">\(N(v)-\{t\}\)</span> 中至少有一个点在 <span
class="math inline">\(X\)</span> 中, 有两种情况:</p>
<ul>
<li>当 <span class="math inline">\(N(v)-\{t\}\)</span> 中有两个点在
<span class="math inline">\(X\)</span> 中时, 引理成立;</li>
<li>当仅有一个 <span class="math inline">\(z\in N(v)-\{t\}\)</span> 满足
<span class="math inline">\(z\in X\)</span> 时, 首先 <span
class="math inline">\(X\cup \{v\}\not\in M_G(F)\)</span>, 那么 <span
class="math inline">\(G[X\cup \{v\}]\)</span> 有环, 且 <span
class="math inline">\(G[X\cup \{v\}]\)</span> 中 <span
class="math inline">\(d(v)\le 2\)</span>, 则 <span
class="math inline">\(G[X\cup \{v\}]\)</span> 中所有的环都包括 <span
class="math inline">\(z\)</span>, 这就意味着 <span
class="math inline">\((X-\{z\})\cup \{v\}\)</span> 是无环的,
它的大小等于 <span class="math inline">\(X\)</span> , 命题得证.</li>
</ul>
<p><span class="math inline">\(\square\)</span></p>
<p>下面再给三个新定义.</p>
<ul>
<li><strong>active vertex</strong>: 算法执行过程中的一个顶点 <span
class="math inline">\(t\in F\)</span>.</li>
</ul>
<p>令 <span class="math inline">\(K=F-\{t\}\)</span>, <span
class="math inline">\(t\in F\)</span> 为 active vertex, 再令 <span
class="math inline">\(v\in N(t)\)</span>, 由于 <span
class="math inline">\(F\)</span> 是独立集, 则 <span
class="math inline">\(v\not\in F\)</span>, 那么 <span
class="math inline">\(K\cup \{v\}\)</span>
中<strong>可能</strong>存在非平凡连通分量, 令 <span
class="math inline">\(G&#39;\)</span> 为 <span
class="math inline">\(G\)</span> 执行 <span
class="math inline">\(\mathrm{compress}(K\cup\{v\}\to u)\)</span>
之后得到的图.</p>
<ul>
<li><strong>generalized neighbor</strong>: 如果在 <span
class="math inline">\(G&#39;\)</span> 中 <span
class="math inline">\(w\in N(u)\)</span> 则称 <span
class="math inline">\(G\)</span> 中的 <span class="math inline">\(w\in
V-\{t\}\)</span> 为 <span class="math inline">\(v\)</span> 的
generalized neighbor, <span class="math inline">\(u,v,G,G&#39;\)</span>
的含义如上.</li>
<li><strong>generalized degree</strong>: 在 <span
class="math inline">\(G\)</span> 中, <span
class="math inline">\(v\)</span> 的 generalized neighbor 的个数称作
generalized degree, 记作 <span
class="math inline">\(\mathrm{gd}(v)\)</span>.</li>
</ul>
<p>对于 generalized neighbor, 只有两种情况:</p>
<p>1: 若 <span class="math inline">\(v\)</span> 不与 <span
class="math inline">\(F\)</span> 中除 <span
class="math inline">\(t\)</span> 外的任何点相邻, 则 <span
class="math inline">\(K\cup\{v\}\)</span> 仍然是独立集,
那么无需执行收缩操作, <span class="math inline">\(v\)</span> 的
generalized neighbor 就是它的 neighbor,</p>
<p>2: 若 <span class="math inline">\(v\)</span> 与 <span
class="math inline">\(t&#39;\in F(t&#39;\ne t)\)</span> 相邻, 则 <span
class="math inline">\(K\cup\{v\}\)</span> 中存在非平凡连通分量 <span
class="math inline">\(\{v,t&#39;\}\)</span>, 将 <span
class="math inline">\(\{v,t&#39;\}\)</span> 收缩为 <span
class="math inline">\(u\)</span> 之后, <span
class="math inline">\(N(u)=N(v)\cup N(t&#39;)-\{v,t&#39;\}\)</span>,
也就是说 <span class="math inline">\(N(v)\cup
N(t&#39;)-\{v,t&#39;,t\}\)</span> 为 <span
class="math inline">\(v\)</span> 的 generalized neighbor 的集合.</p>
<blockquote>
<p>这里 <span class="math inline">\(t&#39;\)</span> 也可以是多个点,
也就是 <span class="math inline">\(K\cup\{v\}\)</span>
中的非平凡连通分量是形如 <span class="math inline">\(K_{1,n}\)</span>
的图.</p>
</blockquote>
<h3 id="详细算法流程">详细算法流程</h3>
<p>设 <span class="math inline">\(\mathrm{mif}(G,F)=|X|,X\in
\mathcal{M}_{G}(F)\)</span>, 给出下面的 branch 算法, 分为 preprocessing
和 main procedure.</p>
<h4 id="preprocessing">Preprocessing</h4>
<p><span class="math inline">\(\it 1.\)</span> 若 <span
class="math inline">\(G\)</span> 不连通, 设其连通分量分别为 <span
class="math inline">\(G_1,\cdots,G_k,\)</span> 则 <span
class="math display">\[
\mathrm{mif}(G,F)=\sum_{1\le i\le k}\mathrm{mif}(G_i,F_i),F_i=V(G_i)\cap
F
\]</span> <span class="math inline">\(\it 2.\)</span> 若 <span
class="math inline">\(F\)</span> 不是独立集, 则对其非平凡连通分量 <span
class="math inline">\(T\)</span> 做 <span
class="math inline">\(\mathrm{compress}(T\to v_T)\)</span> 操作得到
<span class="math inline">\(G&#39;,F&#39;\)</span>, 满足 <span
class="math display">\[
\mathrm{mif}(G,F)=\mathrm{mif}(G&#39;,F&#39;)+|T|-1
\]</span> 如果 <span class="math inline">\(T\)</span> 中存在 active
vertex 则 <span class="math inline">\(v_T\)</span> 将为 active
vertex.</p>
<h4 id="main-procedure">Main Procedure</h4>
<p>预处理部分保证了下面的 <span class="math inline">\(G\)</span>
是连通的且 <span class="math inline">\(F\)</span> 是 <span
class="math inline">\(G\)</span> 的独立集.</p>
<p><span class="math inline">\(\it 1.\)</span> 若 <span
class="math inline">\(F=V\)</span>, 显然 <span
class="math inline">\(\mathcal{M}_G(F)=\{V\}\)</span>, <span
class="math inline">\(\mathrm{mif}(G,F)=|V|\)</span>.</p>
<p><span class="math inline">\(\it 2.\)</span> 若 <span
class="math inline">\(F=\emptyset\)</span>:</p>
<ul>
<li><p><span class="math inline">\(\Delta(G)\le 1\)</span>. 则 <span
class="math inline">\(G\)</span> 中不存在环, 于是 <span
class="math inline">\(\mathrm{mif}(G,F)=|V|\)</span>.</p></li>
<li><p><span class="math inline">\(\Delta(G)\ge 2\)</span>, 选择 <span
class="math inline">\(t\)</span> 满足 <span
class="math inline">\(d(t)\ge 2\)</span>, 在 <span
class="math inline">\(t\)</span> 上做分支, 要么选 <span
class="math inline">\(t\)</span>, 要么不选 <span
class="math inline">\(t\)</span>, 则 <span class="math display">\[
\mathrm{mif}(G,F)=\max\{\mathrm{mif}(G,F\cup\{t\}),\mathrm{mif}(G-\{t\},F)
\}
\]</span></p></li>
</ul>
<p><span class="math inline">\(\it 3.\)</span> 如果 <span
class="math inline">\(F\)</span> 中没有 active vertex, 则任意选定 active
vertex <span class="math inline">\(t\)</span>, 后文中的 <span
class="math inline">\(t\)</span> 都指本步骤选择的 active vertex.</p>
<p><span class="math inline">\(\it 4.\)</span> 对于 <span
class="math inline">\(v\in N(t)\)</span>, 若</p>
<ul>
<li><p><span class="math inline">\(\mathrm{gd}(v)\le 1\)</span>,
则直接把 <span class="math inline">\(v\)</span> 加到 <span
class="math inline">\(F\)</span> 中即 <span
class="math inline">\(\mathrm{mif}(G,F)=\mathrm{mif}(G,F\cup\{v\})\)</span>;</p></li>
<li><p><span class="math inline">\(\mathrm{gd}(v)\ge 3\)</span>, 要么选
<span class="math inline">\(v\)</span> 要么丢掉 <span
class="math inline">\(v\)</span>, <span class="math display">\[
\mathrm{mif}(G,F)=\max\{\mathrm{mif}(G,F\cup\{v\}),\mathrm{mif}(G-\{v\},F)\}
\]</span></p></li>
<li><p><span class="math inline">\(\mathrm{gd}(v)=2\)</span>, 设 <span
class="math inline">\(v\)</span> 的 generalized neighbor 为 <span
class="math inline">\(w_1,w_2\)</span>, 由 Lemma 2 可得 <span
class="math display">\[
\mathrm{mif}(G,F)=\max\{\mathrm{mif}(G,F\cup\{v\}),\mathrm{mif}(G-\{v\},F\cup\{w_1,w_2\})\}
\]</span> 如果选择 <span class="math inline">\(w_1,w_2\)</span>
导致了环的存在, 直接忽略掉该分支即可.</p></li>
</ul>
<blockquote>
<p>最 trivial 的分支规则 <span class="math display">\[
\mathrm{mif}(G,F)=\max\{\mathrm{mif}(G,F\cup\{t\}),\mathrm{mif}(G-\{t\},F)
\}
\]</span> 的正确性显然,
上面算法中的4的第一三条的正确性需要再详细说明一下:</p>
</blockquote>
<p><strong>Theorem 1</strong> FVS 问题可以在 <span
class="math inline">\(O(1.8899^n)\)</span> 的时间内解决.</p>
<p><strong><em>PROOF</em></strong> <span
class="math inline">\(\square\)</span></p>
<p>In undirected graphs of maximum <a
href="https://en.wikipedia.org/wiki/Degree_(graph_theory)">degree</a>
three, the feedback vertex set problem can be solved in <a
href="https://en.wikipedia.org/wiki/Polynomial_time">polynomial
time</a>, by transforming it into an instance of the <a
href="https://en.wikipedia.org/wiki/Matroid_parity_problem">matroid
parity problem</a> for <a
href="https://en.wikipedia.org/wiki/Linear_matroid">linear
matroids</a>.</p>
<h1 id="dominating-set">Dominating Set</h1>
<h1 id="lower-bound-analysis">Lower Bound Analysis</h1>
]]></content>
      <categories>
        <category>Exact Exponential Algorithm</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day10</title>
    <url>/2022/09/13/calculus/Calculus-review-Day10/</url>
    <content><![CDATA[<blockquote>
<p>T2为2019年的真题.</p>
</blockquote>
<p>1：设 <span class="math inline">\(f(x)\)</span> 在 <span
class="math inline">\(\mathbb{R}\)</span> 上任意阶可导, 且 <span
class="math inline">\(\forall n\in\mathbb{N},f^{(n)}(0)=0,\)</span>
同时存在非负实数 <span class="math inline">\(C\)</span> 使得 <span
class="math inline">\(\forall x\in\mathbb{R},|f^{(n)}(x)|\le
C^nn!,\)</span> 求证: <span class="math inline">\(f(x)\equiv
0.\)</span></p>
<span id="more"></span>
<p><strong><em>PROOF</em></strong> 一眼Taylor.</p>
<p><span class="math inline">\(C=0\)</span> 时显然成立.</p>
<p><span class="math inline">\(C&gt;0\)</span> 时, 在 <span
class="math inline">\(0\)</span> 处展开 <span
class="math inline">\(f(x),\)</span> 有 <span class="math display">\[
f(x)=\frac{f^{(n)}{(\xi)}}{n!}x^n,
\]</span> <span class="math inline">\(\xi\)</span> 在 <span
class="math inline">\(0,x\)</span> 之间,
于是取绝对值利用题干条件的不等式有 <span class="math display">\[
|f(x) |\le C^n|x^n|,
\]</span> 要使 <span class="math inline">\(f(x)=0\)</span> 不难想到夹逼,
于是我们要保证 <span class="math inline">\(n\to\infty\)</span> 时 <span
class="math inline">\(|(Cx)^n|\to0,\)</span> 这是很容易做到的, 只需要令
<span class="math inline">\(x\in(-1/C,1/C),\)</span> 即 <span
class="math inline">\(f(x)\equiv 0\)</span> 在 <span
class="math inline">\((-1/C,1/C)\)</span> 上成立. 现在我们可以取 <span
class="math inline">\(x_0\in(0,1/C),\)</span> 在 <span
class="math inline">\(x_0\)</span> 处进行上述过程, 并重复进行下去, <span
class="math inline">\(f(x)\equiv0\)</span> 的区间便可以覆盖整个坐标轴,
便能证得我们要证的结论.</p>
<p>2: 设 <span class="math inline">\(f(x)\in D[0,+\infty),\)</span>
<span class="math inline">\(f(0)=0,\)</span> 且存在常数 <span
class="math inline">\(A&gt;0\)</span> 使得 <span
class="math inline">\(|f&#39;(x)|\le A|f(x)|\)</span> 在 <span
class="math inline">\([0,+\infty)\)</span> 上恒成立, 证明在 <span
class="math inline">\((0,+\infty)\)</span> 上有 <span
class="math inline">\(f(x)\equiv 0.\)</span></p>
<p><strong><em>PROOF1</em></strong> 取 <span
class="math inline">\(x&gt;0,\)</span> 在 <span
class="math inline">\((0,x)\)</span> 上由Lagrange中值定理有 <span
class="math inline">\(f&#39;(\xi_{1})(x-0)=f(x)-f(0)\)</span> 即 <span
class="math inline">\(f&#39;(\xi_{1})x=f(x),\)</span> 其中 <span
class="math inline">\(\xi_{1}\in(0,x).\)</span> 于是 <span
class="math inline">\(|f(x)|=|f&#39;(\xi_{1})|x\le
Ax|f(\xi_1)|.\)</span> 令 <span class="math inline">\(x=1/2A,\)</span>
于是 <span class="math display">\[
|f(x)|\le\frac{1}{2}|f(\xi_1)|\le\frac{1}{2^2}|f(\xi_2)|\le
\cdots\le\frac{1}{2^n}|f(\xi_n)|,
\]</span> 其中 <span
class="math inline">\(0&lt;\xi_n&lt;\xi_{n-1}&lt;\cdots&lt;\xi_1&lt;x,\)</span>
于是 <span class="math inline">\(|f(\xi_n)|\)</span> 有界, 因此 <span
class="math inline">\(n\to\infty\)</span> 时, 有 <span
class="math inline">\(|f(x)|\le 0,\)</span> 即 <span
class="math inline">\(f(x)=0\)</span> 在 <span
class="math inline">\([0,1/2A]\)</span> 上成立. 现在我们可以在区间 <span
class="math inline">\((1/2A,2/2A],(2/2A,3/2A],\cdots\)</span>
上采用相同的证法, 证得 <span class="math inline">\(f(x)=0\)</span> 在
<span class="math inline">\([0,+\infty)\)</span> 上成立. <span
class="math inline">\(\square\)</span></p>
<blockquote>
<p>函数一阶可导时常用Lagrange中值定理和Rolle定理.</p>
</blockquote>
<p><strong><em>PROOF2</em></strong></p>
<p>在求出 <span class="math inline">\(|f(x)|\le 1/2|f(\xi_1)|\)</span>
后也可采用下面的做法.</p>
<p>设 <span class="math inline">\(|f(x)|\)</span> 在 <span
class="math inline">\([0,1/2A]\)</span> 上的最大值为 <span
class="math inline">\(M,\)</span> 对应的取值为 <span
class="math inline">\(x_0,\)</span> <span class="math display">\[
M=|f(x_0)|\le 1/2|f(\xi) |\le M/2,
\]</span> 即 <span class="math inline">\(M\le 0,\)</span> 于是 <span
class="math inline">\(M=0,\)</span> <span
class="math inline">\(|f(x)|\)</span> 在 <span
class="math inline">\([0,1/2A]\)</span> 上的最大值为 <span
class="math inline">\(0,\)</span> 即 <span
class="math inline">\(f(x)\equiv 0,\)</span> 在区间 <span
class="math inline">\((1/2A,2/2A],(2/2A,3/2A],\cdots\)</span>
上采用相同的证法可以证得最终结论. <span
class="math inline">\(\square\)</span></p>
<blockquote>
<p>T1, T2的相似之处是限制不等式上界中的其中一个变量的范围(T1是令 <span
class="math inline">\(|x|&lt;1/C,\)</span> T2是令 <span
class="math inline">\(x=1/2A\)</span> 或 <span
class="math inline">\(x\le 1/2A\)</span> ),
让我们可以用极限求出精确的上界.</p>
<p>这提供了一种证明 <span class="math inline">\(X\equiv 0\)</span>
的方法: 构造出 <span class="math inline">\(|X|&lt;a_n\)</span> 或 <span
class="math inline">\(|X|\le a_n\)</span> 且 <span
class="math inline">\(\{a_n\}\)</span> 收敛于 <span
class="math inline">\(0.\)</span></p>
</blockquote>
<p>3: 证明: <span class="math inline">\(\displaystyle
f(x,y)=1+\int_0^x\int_0^y f(u,u)\mathrm{d} u\mathrm{d} v\)</span> 在
<span class="math inline">\([0,1]\times [0,1]\)</span>
上至多有一个连续解.</p>
<p><strong><em>PROOF</em></strong> 看到<strong><em>至多, 至少,
唯一</em></strong> 等字眼的时候, 经常要用反证法. 不妨该方程有两个解,
我们只需要证明这两个解相等即可. 设这两个解的差为 <span
class="math inline">\(g(x),\)</span> 便转化为证明 <span
class="math inline">\(g(x)\equiv 0,\)</span> 于是有 <span
class="math display">\[
g(x,y)=\int_0^x\int_0^y g(u,u)\mathrm{d} u\mathrm{d} v
\]</span></p>
<blockquote>
<p>证明某个函数 <span class="math inline">\(\phi(x)\equiv0\)</span>
常用的手段之一就是利用 <span
class="math inline">\(\phi(x)=f(\phi(x))\)</span> 的关系式进行迭代,
往往能得到 <span class="math inline">\(|\phi(x)|\le g(n,x),\)</span> 且
<span class="math inline">\(\lim_{n\to\infty}g(n,x)=0.\)</span></p>
<p>上面这个问题的一元函数的版本是: 连续函数 <span
class="math inline">\(\phi(x)\)</span> 满足 <span
class="math display">\[
\phi(x)=\int_0^x\phi(u)\mathrm{d} u,x\in[0,1],
\]</span> 证明在 <span class="math inline">\([0,1]\)</span> 上有 <span
class="math inline">\(\phi(u)\equiv 0.\)</span></p>
<p><strong><em>PROOF</em></strong> 显然 <span
class="math inline">\(\phi(x)\)</span> 在 <span
class="math inline">\([0,1]\)</span> 上有界, 设 <span
class="math inline">\(|\phi(x)|\)</span> 的最大值为 <span
class="math inline">\(M,\)</span> 于是对任意 <span
class="math inline">\(x_1\in[0,1]\)</span> 有 <span
class="math display">\[
\begin{aligned}
|\phi(x_1)|
&amp;\le \int_0^{x_1}|\phi(x_2)|\mathrm{d} x_2\\
&amp;\le\int_0^{x_1}\int_{0}^{x_2}|\phi(x_3) |\mathrm{d} x_3\mathrm{d}
x_2\\
&amp;\le \cdots\\
&amp;\le\int_0^{x_1}\cdots\int_0^{x_{n}}|\phi(x_{n+1})|\mathrm{d}
x_{n+1}\mathrm{d} x_{n}\cdots \mathrm{d} x_2\\
&amp;\le M\int_0^{x_1}\cdots\int_0^{x_{n-1}}\mathrm{d} x_{n}\mathrm{d}
x_{n-1}\cdots \mathrm{d} x_2\\
&amp;=\frac{M x_1^n}{n!}
\end{aligned}
\]</span> 不论 <span class="math inline">\(x_1\)</span> 取何值总有 <span
class="math inline">\(\lim_{n\to\infty}Mx_1^n/n!=0,\)</span> 这就表明了
<span class="math inline">\(\phi(x)\equiv 0.\)</span></p>
</blockquote>
<p>对于本题而言, 我们只需要像下面这样: <span class="math display">\[
|g(x,y)|\le\iint_{D_1}\cdots \iint_{D_n} |g(u,v)|\mathrm{d}
\sigma_n\cdots \mathrm{d} \sigma_1\le\iint_{D_1}\cdots \iint_{D_n}
M\mathrm{d} \sigma_n\cdots \mathrm{d} \sigma_1
\]</span> 即可得到 <span class="math display">\[
g(x,y)\le M\frac{x^n}{n!}\frac{y^n}{n!},
\]</span> 这就证得了结论. <span
class="math inline">\(\square\)</span></p>
<blockquote>
<p>好多还是不会, 还是先看教程复习复习基础吧😭</p>
</blockquote>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day2</title>
    <url>/2022/09/02/calculus/Calculus-review-Day2/</url>
    <content><![CDATA[<p>1: 设 <span class="math inline">\(f(x)\in C(\mathbb{R})\land f(x)\ge
0,\)</span> 求证: <span class="math display">\[
\left|\int_0^1[f(x)]^3\mathrm{d}x-[f(0)]^2\int_0^1f(x)\mathrm{d}x\right|\le
M\left(\int_0^1f(x)\mathrm{d}x\right)^2,
\]</span> 其中 <span class="math inline">\(M=\max_{0\le x\le
1}|f&#39;(x)|.\)</span></p>
<p><strong><em>PROOF</em></strong> 考虑将不等式左边的三次方变成二次方:
置 <span class="math inline">\(F(x)=-\int_x^1 f(t)\mathrm{d}t,\)</span>
有 <span class="math inline">\(F&#39;(x)=f(x),F(1)=0,\)</span> <span
class="math inline">\(F(0)=-\int_0^1f(t)\mathrm{d}t,\)</span> 于是</p>
<span id="more"></span>
<p><span class="math display">\[
\begin{aligned}
\int_0^1[f(x)]^3\mathrm{d}x
&amp;=\int_0^1[f(x)]^2\mathrm{d}F(x)\\
&amp;=F(x)[f(x)]^2|_0^1-2\int_0^1F(x)f(x)f&#39;(x)\mathrm{d}x\\
&amp;=[f(0)]^2\int_0^1f(x)\mathrm{d}x-2\int_0^1F(x)f(x)f&#39;(x)\mathrm{d}x
\end{aligned}
\]</span> 于是 <span class="math display">\[
\begin{aligned}
\left|\int_0^1[f(x)]^3\mathrm{d}x-[f(0)]^2\int_0^1f(x)\mathrm{d}x\right|
&amp;=2\left|\int_0^1F(x)f(x)f&#39;(x)\mathrm{d}x\right|\\
&amp;\le-2M\int_0^1F(x)\mathrm{d}F(x)\\
&amp;=-M[F(x)]^2|_0^1\\
&amp;=M\left(\int_0^1f(x)\mathrm{d}x\right)^2.
\end{aligned}
\]</span> <span class="math inline">\(\square\)</span></p>
<blockquote>
刚开始想错了(还以为搞出来另一个不等式): $$
<span class="math display">\[\begin{aligned}
M\left(\int_0^1f(x)\mathrm{d}x\right)^2
&amp;\ge \int_0^1M[f(x)]^2\mathrm{d}x \quad\text{Cauchy}\\
&amp;\ge\int_0^1|f&#39;(x)|[f(x)]^2\mathrm{d}x\\
&amp;\ge\left|\int_0^1f&#39;(x)[f(x)]^2\mathrm{d}x\right|\\

\end{aligned}\]</span>
<p>$$</p>
<p>令 <span
class="math inline">\(I=\int_0^1f&#39;(x)[f(x)]^2\mathrm{d}x,\)</span>
<span class="math display">\[
\begin{aligned}
I&amp;=\int_0^1f&#39;(x)[f(x)]^2\mathrm{d}x\\
&amp;=\int_0^1[f(x)]^2\mathrm{d}f(x)\\
&amp;=[f(1)]^3-[f(0)]^3-2\int_0^1f&#39;(x)[f(x)]^2\mathrm{d}x\\
\end{aligned}
\]</span> 得 <span
class="math inline">\(I=\frac{1}{3}([f(1)]^3-[f(0)]^3),\)</span> 于是
<span class="math display">\[
M\left(\int_0^1f(x)\mathrm{d}x\right)^2\ge\frac{1}{3}\left|[f(1)]^3-[f(0)]^3\right|.
\]</span> emm, 可惜这个证明是错的, Cauchy不等式方向反了, 应该是 <span
class="math display">\[
\int_0^1[f(x)]^2\mathrm{d}x=\int_0^1[f(x)]^2\mathrm{d}x\int_0^11\mathrm{d}x\ge\left(\int_0^1f(x)\mathrm{d}x\right)^2.
\]</span> 记录下来作为警醒.</p>
</blockquote>
<p>2: 计算 <span class="math display">\[
\int x\ln(1+x^2)\arctan x\mathrm{d}x.
\]</span> <strong><em>SOL</em></strong> 思路不难, 算起来有一点麻烦,
只写一下做法: <span class="math display">\[
\begin{aligned}\int x\ln(1+x^2)\arctan x\mathrm{d}x&amp;=\frac{1}{2}\int
\ln(1+x^2)\arctan x\mathrm{d}x^2\\&amp;=\frac{1}{2}x^2\ln(1+x^2)\arctan
x-\int \frac{x^2[x\arctan
x]}{1+x^2}-\int\frac{x^2\ln(1+x^2)}{1+x^2}\end{aligned}
\]</span> 注意把 <span class="math inline">\(\frac{x^2}{1+x^2}\)</span>
写成 <span class="math inline">\(1-\frac{1}{1+x^2},\)</span> 然后计算
<span class="math display">\[
\int\frac{x\arctan x}{1+x^2}\mathrm{d}x,\int x\arctan
x\mathrm{d}x,\int\ln(1+x^2)\mathrm{d}x,\;\int\frac{\ln(1+x^2)}{1+x^2}\mathrm{d}x,
\]</span> 换元加分部积分都可以解决. <span
class="math inline">\(\square\)</span></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day3,5,6,...</title>
    <url>/2022/09/03/calculus/Calculus-review-Day3/</url>
    <content><![CDATA[<p>参考书目：<em>菲赫金哥尔茨《微积分学教程》第二卷</em></p>
<p>这一部分主要是含有根式的不定积分的处理方法。</p>
<span id="more"></span>
<h2 id="case1-形如-rleftxsqrtmaxbcxdright-的积分">Case1: 形如 <span
class="math inline">\(R\left(x,\sqrt[m]{(ax+b)/(cx+d)}\right)\)</span>
的积分</h2>
<p>这里函数 <span class="math inline">\(R\)</span> 是一个多元有理函数.
对于这种表达式一般是作变量替换 <span class="math display">\[
t=\sqrt[m]{\frac{ax+b}{cx+d}}\Rightarrow x=\frac{b-dt^m}{ct^m-a},
\]</span> 这样原积分就转化为了有理函数的积分。</p>
<p><strong>例1</strong> <span class="math inline">\(\displaystyle \int
\frac{\mathrm{d}x}{\sqrt[3]{(x-1)(x+1)^2}}.\)</span></p>
<p><strong><em>SOL</em></strong> <span class="math display">\[
\begin{aligned}\int
\frac{\mathrm{d}x}{\sqrt[3]{(x-1)(x+1)^2}}&amp;=\int\sqrt[3]{\frac{x+1}{x-1}}\cdot\frac{1}{x+1}\mathrm{d}x\end{aligned}
\]</span> <span
class="math inline">\(t=\sqrt[3]{\frac{x+1}{x-1}}\Rightarrow
x=\frac{t^3+1}{t^3-1},\)</span> 于是 <span class="math display">\[
\begin{aligned}I&amp;=\int
\frac{t(t^3-1)}{2t^3}\cdot\frac{-6t^2}{(t^3-1)^2}\mathrm{d}t\\&amp;=-3\int\frac{1}{t^3-1}\mathrm{d}t=\int\left(-\frac{1}{t-1}+\frac{t+2}{t^2+t+1}\right)\mathrm{d}t\end{aligned}
\]</span> 求解代入即可。<span class="math inline">\(\square\)</span></p>
<h2 id="case2-形如-xmaxnbp-的积分">Case2: 形如 <span
class="math inline">\(x^m(ax^n+b)^p\)</span> 的积分</h2>
<p>其中 <span class="math inline">\(m,n,p\in\mathbb{Q}.\)</span></p>
<p><strong>Case2.1</strong>: 当 <span
class="math inline">\(p\in\mathbb{Z}\)</span> 时, 若设 <span
class="math inline">\(m=u_1/v_1,n=u_2/v_2,\)</span> 其中 <span
class="math inline">\(u_1,u_2,v_1,v_2\in\mathbb{Z},\)</span> 并设 <span
class="math inline">\(\operatorname{lcm}(v_1,v_2)=v,\)</span> 原式可化为
<span
class="math inline">\(x^{u_1+(v/v_1)}\sqrt[v]{x}(ax^{u_2+(v/v_2)}\cdot\sqrt[v]{x}+b)^p,\)</span>
作换元 <span class="math inline">\(z=x^{1/v}\)</span>
即可将其转化为有理函数, 因为它是形如 <span
class="math inline">\(R(x,\sqrt[v]{x})\)</span> 的表达式.</p>
<p><strong>Case2.2</strong>: 对于一般的情况, 作换元 <span
class="math inline">\(x^n=z,z=x^{1/n},\)</span> <span
class="math inline">\(\d z=(1/n)x^{(1/n)-1},\)</span> 于是 <span
class="math display">\[
\begin{aligned}
x^m(ax^n+b)\d x
&amp;=z^{m/n}(az+b)^p\cdot\frac{1}{n}z^{(1/n)-1}\d z\\
&amp;=\frac{1}{n}z^q(az+b)^p\d z,\quad q=\frac{m+1}{n}-1
\end{aligned}
\]</span> 这时再设 <span class="math inline">\(p=u/v,\)</span>
原表达式变为 <span class="math inline">\(R(z,\sqrt[v]{az+b})\)</span>
的形式, 这就转化为了Case1, 作换元 <span
class="math inline">\(t=\sqrt[v]{az+b}\)</span> 即可,
与前面的换元合并可令 <span
class="math inline">\(t=\sqrt[v]{ax^n+b},\)</span> 当然, 这里要满足
<span class="math inline">\(q\in \mathbb{Z}.\)</span></p>
<p><strong>Case2.3</strong> 在Case2.2中, 若 <span
class="math display">\[
z^q(az+b)^p\d z=\left(\frac{az+b}{z}\right)^{p}z^{p+q}\d z,
\]</span> 这样得到的表达式是 <span
class="math inline">\(R(z,\sqrt[v]{(az+b)/z}),\)</span> 同样可以换元
<span class="math inline">\(t=\sqrt[v]{a+bx^{-n}},\)</span> 这里仍然要求
<span class="math inline">\(p+q\in\mathbb{Z}.\)</span></p>
<p><strong>综合上述三种情况, <span class="math inline">\(p,q(\text{or }
q+1),p+q\)</span>
三者有一者为整数原函数即可积(可按优有限形状表示出来),</strong> 否则不可,
这是Chebeshev得到的事实.</p>
<p><strong>例2</strong> <span class="math inline">\(\displaystyle
\int\frac{\mathrm{d}x}{\sqrt[4]{1+x^4}}.\)</span></p>
<p><strong><em>SOL</em></strong> <span
class="math inline">\(1/\sqrt[4]{1+x^4}=x^{0}(1+x^4)^{-1/4},\)</span>
发现 <span class="math inline">\(q+1=1/4\notin\mathbb{Z},\)</span> 而
<span class="math inline">\(p+q=-1\in\mathbb{Z},\)</span> 这是Case2.3,
于是置 <span class="math inline">\(t=\sqrt[4]{1+x^{-4}},\)</span> 于是
<span class="math inline">\(x=(t^4-1)^{-1/4},\)</span> <span
class="math inline">\(\mathrm{d}x=-t^3(t^4-1)^{-5/4}\mathrm{d}t,\)</span>
<span class="math display">\[
\begin{aligned}I&amp;=\int
\frac{1}{tx}\cdot(-t^3)(t^4-1)^{-5/4}\mathrm{d}t\\&amp;=\int-t^2(t^4-1)^{-1}\mathrm{d}t\\&amp;=-\int\frac{t^2}{t^4-1}\mathrm{d}t\end{aligned}
\]</span> 剩下的部分就是有理函数的积分。<span
class="math inline">\(\square\)</span></p>
<p><strong>例3</strong> <span class="math inline">\(\displaystyle
\int\frac{\mathrm{d}x}{x\sqrt[3]{1+x^5}}.\)</span></p>
<p><strong><em>SOL</em></strong> <span
class="math inline">\(q+1=(-1+1)/5=0\in\mathbb{Z},\)</span> 这是Case2.2,
于是置 <span class="math inline">\(t=(1+x^5)^{1/3},\)</span> 有 <span
class="math inline">\(x=(t^3-1)^{1/5,}\)</span> <span
class="math inline">\(\d x=(3/5)(t^3-1)^{-4/5}t^2,\)</span> 因此 <span
class="math display">\[
\begin{aligned}
\int\frac{\mathrm{d}x}{x\sqrt[3]{1+x^5}}
&amp;=\int(t^3-1)^{-1/5}t^{-1}\cdot\frac{3}{5}(t^3-1)^{-4/5}t^2\d t\\
&amp;=\int\frac{t\d t}{t^3-1}
\end{aligned}
\]</span> 转化为有理函数的积分. <span
class="math inline">\(\square\)</span></p>
<h2 id="case3-euler替换">Case3: Euler替换</h2>
<p>Euler替换有三种情形, 用来解决形如被积函数形如 <span
class="math inline">\(R(x,\sqrt{ax^2+bx+c})\)</span> 的积分,
它做到了在换元后能将 <span class="math inline">\(x\)</span> 和 <span
class="math inline">\(\sqrt{ax^2+bx+c}\)</span>
同时用另一个元<strong>有理地表示出来</strong>.</p>
<p>1: 当 <span class="math inline">\(a&gt;0\)</span> 时, 设 <span
class="math display">\[
\sqrt{ax^2+bx+c}=t-\sqrt{a}x,
\]</span> 两边平方有 <span class="math display">\[
bx+c=t^2-2\sqrt{a}x
\]</span></p>
<p>2: 当 <span class="math inline">\(c&gt;0\)</span> 时, 设 <span
class="math display">\[
\sqrt{ax^2+bx+c}=xt+\sqrt{c},
\]</span> 两边平方并整理得 <span class="math display">\[
x=\frac{2\sqrt{c}t-b}{a-t^2}.
\]</span> 3: 若 <span class="math inline">\(ax^2+bx+c=0\)</span>
有两相异的实根 <span class="math inline">\(x_1,x_2,\)</span> 则设 <span
class="math display">\[
\sqrt{ax^2+bx+c}=\sqrt{a(x-x_1)(x-x_2)}=t(x-x_1),
\]</span> 两边平方并整理得 <span class="math display">\[
x=\frac{x_1t^2-ax_2}{t^2-a}.
\]</span> <strong>例4</strong> <span
class="math inline">\(\displaystyle\int\frac{\d
x}{\sqrt{ax^2+b}};\)</span></p>
<p><strong>例5</strong> <span class="math inline">\(\displaystyle
\int\sqrt{ax^2+b}\d x.\)</span></p>
<p><strong>例6</strong> <span class="math inline">\(\displaystyle
\int\frac{\d x}{(ax^2+b)^{3/2}}.\)</span></p>
<p>诸如此类的还有 <span class="math display">\[
\int\frac{\d x}{x^2\sqrt{ax^2+b}},\int\frac{\d
x}{x\sqrt{ax^2+b}},\int\frac{x^2\d
x}{\sqrt{ax^2+b}},\int\frac{\sqrt{ax^2+b}}{x}\d x,\int\frac{x^2\d
x}{(ax^2+b)^{3/2}}.
\]</span> 等等.</p>
<p>特别地, 若碰到 <span class="math inline">\(\sqrt{ax^2+bx+c},\)</span>
可以利用恒等变换: <span class="math display">\[
ax^2+bx+c=\frac{1}{4a}[(2ax+b)^2+4ac-b^2],
\]</span> 这样可以利用前面的例子中的结论.</p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day4</title>
    <url>/2022/09/04/calculus/Calculus-review-Day4/</url>
    <content><![CDATA[<blockquote>
<p>T1, T2为2018年预赛的T三和T六; T4为2017年预赛的最后一题;
T3找不到来源了……</p>
</blockquote>
<p>1：设 <span class="math inline">\(f(x)\in C[0,1],1\le f(x)\le
3,\)</span> 求证： <span class="math display">\[
1\le \int_0^1 f(x)\mathrm{d} x\int_0^1\frac{1}{f(x)}\mathrm{d} x\le
\frac{4}{3}.
\]</span> <span id="more"></span></p>
<p><strong><em>PROOF</em></strong> 由Cauchy-Schwartz不等式得 <span
class="math display">\[
\int_0^1 f(x)\mathrm{d} x\int_0^1\frac{1}{f(x)}\mathrm{d}
x\ge\left(\int_0^1\sqrt{f(x)\cdot\frac{1}{f(x)}}\mathrm{d} x\right)^2=1,
\]</span> 由AM-GM不等式得 <span class="math display">\[
\int_0^1 f(x)\mathrm{d} x\int_0^1\frac{1}{f(x)}\mathrm{d}
x\le\frac{1}{4}\left(\int_0^1\left(f(x)+\frac{1}{f(x)}\right)\mathrm{d}
x\right)^2
\]</span> 且 <span class="math inline">\(f(x)+1/f(x)\le 10/3,\)</span>
这样得到的上界为 <span class="math inline">\(25/9&gt;4/3,\)</span>
考虑调整系数，即 <span class="math display">\[
\frac{1}{k}\int_0^1 f(x)\mathrm{d} x\int_0^1\frac{k}{f(x)}\mathrm{d}
x\le\frac{1}{4k}\left(\int_0^1\left(f(x)+\frac{k}{f(x)}\right)\mathrm{d}
x\right)^2\le\frac{(3+k/3)^2}{4k},
\]</span> 欲得到上界 <span class="math inline">\(4/3,\)</span> 应令
<span class="math display">\[
\frac{(3+k/3)^2}{4k}=\frac{4}{3},
\]</span> 解得 <span class="math inline">\(k=3.\)</span> 于是 <span
class="math display">\[
\begin{aligned}\int_0^1 f(x)\mathrm{d} x\int_0^1\frac{1}{f(x)}\mathrm{d}
x&amp;=\frac{1}{3}\int_0^1 f(x)\mathrm{d}
x\int_0^1\frac{3}{f(x)}\mathrm{d}
x\\&amp;\le\frac{1}{12}\left(\int_0^1\left(f(x)+\frac{3}{f(x)}\right)\mathrm{d}
x\right)^2\\&amp;\le\frac{3}{4}.\end{aligned}
\]</span> 事实上上述过程不够严谨，因为 <span
class="math inline">\(f(x)+k/f(x)\)</span> 的最大值不一定在 <span
class="math inline">\(x=3\)</span> 处取得，还可能在 <span
class="math inline">\(x=1\)</span> 处取得，这时可以得到 <span
class="math inline">\(k=1/3,\)</span> 仍然可以得到正确答案。 <span
class="math inline">\(\square\)</span></p>
<p>2：设 <span class="math inline">\(f(x)\in C[0,1]\)</span> 且 <span
class="math inline">\(f(x)&gt;0,\)</span> 证明 <span
class="math display">\[
\ln \int_0^1f(x)\mathrm{d} x\ge \int_0^1\ln f(x)\mathrm{d} x.
\]</span> <strong><em>PROOF</em></strong> 这实际上是不等式： <span
class="math display">\[
\ln\frac{1}{n}\sum x_i\ge \ln\sqrt[n]{\prod_i x_i}=\frac{1}{n}\sum_i \ln
x_i
\]</span> 的连续版本。只需要对区间 <span
class="math inline">\([0,1]\)</span> 进行 <span
class="math inline">\(n\)</span> 等分即可，上述的 <span
class="math inline">\(x_i=f(i/n),0\le i\le n-1,\)</span>
取极限即得证，当且仅当 <span class="math inline">\(f(x)\)</span>
为常函数取等。 <span class="math inline">\(\square\)</span></p>
<p>3：设 <span class="math inline">\(f(x)\in C(\mathbb{R})\land
f(x)&gt;0,\)</span> 若 <span class="math inline">\(\forall
t\in\mathbb{R}\)</span> 都有 <span class="math display">\[
\int_{-\infty}^{+\infty}\mathrm{e}^{-|t-x|}f(x)\mathrm{d} x\le 1,
\]</span> 求证：<span class="math inline">\(\forall a,b\in
\mathbb{R}\land a&lt;b,\)</span> 有 <span class="math display">\[
\int_a^b f(x)\mathrm{d} x\le \frac{b-a+2}{2}.
\]</span> <strong><em>PROOF</em></strong> 注意到 <span
class="math display">\[
\int_a^b\mathrm{e}^{-|t-x|}f(x)\mathrm{d} x\le
\int_{-\infty}^{+\infty}\mathrm{e}^{-|t-x|}f(x)\mathrm{d} x\le 1,
\]</span> 于是 <span class="math display">\[
\begin{aligned}\int_a^b\mathrm{d}
t\int_a^b\mathrm{e}^{-|t-x|}f(x)\mathrm{d} x&amp;=\int_a^b
f(x)\left(\int_a^b\mathrm{e}^{-|t-x|}\mathrm{d} t\right)\mathrm{d}
x\\&amp;=\int_a^bf(x)(2-\mathrm{e}^{a-x}-\mathrm{e}^{x-b})\mathrm{d}
x\\&amp;\le b-a\end{aligned}
\]</span></p>
<p>整理得 <span class="math display">\[
\int_a^b f(x)\mathrm{d}
x\le\frac{b-a}{2}+\frac{1}{2}\int_a^bf(x)(\mathrm{e}^{a-x}+\mathrm{e}^{x-b})\mathrm{d}x
\]</span> 并且 <span class="math display">\[
\begin{aligned}
\int_a^bf(x)(\mathrm{e}^{a-x}+\mathrm{e}^{x-b})\mathrm{d}x
&amp;=\int_a^b f(x)\mathrm{e}^{-|a-x|}\mathrm{d}x+\int_a^b
f(x)\mathrm{e}^{-|b-x|}\mathrm{d}x\\
&amp;\le\int_{-\infty}^{+\infty}
f(x)\mathrm{e}^{-|a-x|}\mathrm{d}x+\int_{-\infty}^{+\infty}
f(x)\mathrm{e}^{-|b-x|}\mathrm{d}x\\
&amp;=1+1=2
\end{aligned}
\]</span> 这就证得了 <span class="math display">\[
\int_a^b f(x)\mathrm{d} x\le \frac{b-a+2}{2}.
\]</span> <span class="math inline">\(\square\)</span></p>
<blockquote>
<p>还以为和Laplace变换有关……</p>
</blockquote>
<p>4: 已知数列 <span
class="math inline">\(\{a_n\}_{n=1}^{\infty}\)</span> 满足 <span
class="math inline">\(\lim_{n\to\infty}(a_{n+p}-a_n)=\lambda,p\in\mathbb{N}_+,\)</span>
求证: <span class="math inline">\(\lim_{n\to\infty
}a_n/n=\lambda/p.\)</span></p>
<p><strong><em>PROOF</em></strong> 置 <span
class="math inline">\(b_{n}=a_n-a_{n-1},\)</span> 有 <span
class="math display">\[
\lim_{n\to\infty}(a_{n+p}-a_n)=\lim_{n\to\infty}(b_{n+1}+\cdots+b_{n+p})=\lambda,
\]</span> 于是 <span class="math inline">\(\forall
\varepsilon&gt;0,\)</span> 存在 <span
class="math inline">\(N&gt;0,\)</span> 当 <span
class="math inline">\(n&gt;N\)</span> 时, <span class="math display">\[
\left|\sum_{k=1}^{p}b_{n+k}-\lambda\right|&lt;\varepsilon
\]</span> 成立, 且 <span class="math display">\[
\left|\sum_{k=1}^{p}b_{n+k}-\lambda\right|=\left|\sum_{k=1}^{p}(b_{n+k}-\lambda/p)\right|&lt;\varepsilon,
\]</span> 这表明级数 <span
class="math inline">\(\sum_{n=1}^{\infty}(a_n-\lambda/p)\)</span> 收敛,
于是 <span class="math display">\[
\lim_{n\to\infty} (b_n-\lambda/p)=0\Rightarrow
\lim_{n\to\infty}b_n=\lim_{n\to\infty}(a_{n}-a_{n-1})=\lambda/p,
\]</span> 于是由Stolz定理得 <span class="math display">\[
\lim_{n\to\infty}\frac{a_n}{n}=\lim_{n\to\infty}\frac{a_n-a_{n-1}}{n-(n-1)}=\lambda/p.
\]</span> <span class="math inline">\(\square\)</span></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day7</title>
    <url>/2022/09/09/calculus/Calculus-review-Day7/</url>
    <content><![CDATA[<p>1: 判断级数 <span class="math inline">\(\displaystyle
\sum_{n=1}^{\infty}\frac{(-1)^n}{\sqrt{kn}+(-1)^n},k&gt;0\)</span>
的敛散性.</p>
<span id="more"></span>
<p><strong><em>SOL</em></strong> 考虑有理化: <span
class="math display">\[
\frac{(-1)^n}{\sqrt{kn}+(-1)^n}=\frac{(-1)^n\sqrt{kn}-1}{kn-1}=\frac{(-1)^n\sqrt{kn}}{kn-1}-\frac{1}{kn-1}
\]</span> 第二项与调和级数敛散性相同, 发散, 故原级数发散.<span
class="math inline">\(\square\)</span></p>
<p>2: 设 <span class="math inline">\(f(x)\in C[a,b]\land f(x)\ge
0,\)</span> <span class="math inline">\(f(x)\)</span> 严格递增, 且存在
<span class="math inline">\(x_n\in[a,b]\)</span> 使得 <span
class="math display">\[
[f(x_n)]^n=\frac{1}{b-a}\int_a^b[f(x)]^n\mathrm{d} x,
\]</span> 求 <span class="math inline">\(\displaystyle
\lim_{n\to\infty}x_n.\)</span></p>
<p><strong><em>SOL</em></strong> 我们只需要证明 <span
class="math display">\[
\lim_{n\to\infty}\sqrt[n]{\int_a^b [f(x)]^n\mathrm{d}
x}=\max_{x\in[a,b]} f(x)
\]</span> 即可, 并且很容易发现这是 <span class="math display">\[
\lim_{n\to\infty}\sqrt[n]{\sum_{i}x_i^n}=\max_{i}|x_i|
\]</span> 的连续版本, 不过我们证明时并不采用定积分定义. 设 <span
class="math inline">\(M=\max_{x\in[a,b]}f(x).\)</span></p>
<p>首先, <span class="math display">\[
\sqrt[n]{\int_a^b [f(x)]^n\mathrm{d} x}\le \sqrt[n]{M^n(b-a)}=
M\sqrt[n]{b-a}.
\]</span> 不难想到应该用夹逼定理, 记 <span
class="math inline">\(\sqrt[n]{\int_a^b [f(x)]^n\mathrm{d}
x}=I_n,\)</span> 设 <span
class="math inline">\(f(x_0)=M(x_0\in[a,b])\)</span>
(这由介值定理显然成立), <span class="math inline">\(\forall
\varepsilon&gt;0,\)</span> 存在 <span
class="math inline">\(\delta&gt;0,\)</span> 当 <span
class="math inline">\(x\in[x_0-\delta,x_0+\delta]\subset[a,b]\)</span>
时有 <span class="math inline">\(|f(x)-M|&lt;\varepsilon\)</span> 即
<span class="math inline">\(f(x)&gt;M-\varepsilon.\)</span> 于是 <span
class="math display">\[
I_n&gt;\sqrt[n]{\int_{x_0-\delta}^{x_0+\delta} [f(x)]^n\mathrm{d}
x}&gt;(M-\varepsilon)\sqrt[n]{2\delta},
\]</span> 显然 <span
class="math inline">\(\lim_{n\to\infty}\sqrt[n]{b-a}=\lim_{n\to\infty}\sqrt[n]{2\delta}=1,\)</span>
于是 <span class="math inline">\(\forall
\varepsilon_1,\varepsilon_2&gt;0,\)</span>当 <span
class="math inline">\(n\)</span> 充分大时有 <span
class="math display">\[
M-\varepsilon(1-\varepsilon_1)=(M-\varepsilon)(1-\varepsilon_1)&lt;I_n&lt;(M+\varepsilon)(1+\varepsilon_2)=M+\varepsilon(1+\varepsilon_2)
\]</span> 记 <span
class="math inline">\(\varepsilon_0=\max\{\varepsilon(1-\varepsilon_1),\varepsilon(1+\varepsilon_2)\},\)</span>
于是 <span class="math display">\[
|I_n-M|&lt;\varepsilon_0,
\]</span> 这就表明了 <span class="math display">\[
\lim_{n\to\infty}\sqrt[n]{\int_a^b [f(x)]^n\mathrm{d}
x}=\max_{x\in[a,b]} f(x).
\]</span> 于是 <span class="math display">\[
\lim_{n\to\infty}f(x_n)=f\left(\lim_{n\to\infty}x_n \right)
=\max_{x\in[a,b]}f(x),
\]</span> <span class="math inline">\(f(x)\)</span>
的非负性保证了开方后值的唯一性, 单调性保证了 <span
class="math inline">\(\max_{x\in[a,b]}f(x)=f(b),\)</span> 以及 <span
class="math inline">\(\lim_{n\to\infty}x_n=b.\)</span> <span
class="math inline">\(\square\)</span></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
  </entry>
  <entry>
    <title>Calculus review Day8</title>
    <url>/2022/09/10/calculus/Calculus-review-Day8/</url>
    <content><![CDATA[<p>1: 数列 <span class="math inline">\(\{a_n\}\)</span> 满足 <span
class="math inline">\(a_1=1,\)</span> <span
class="math inline">\(a_{n+1}=\frac{a_n}{(n+1)(a_n+1)},\)</span> 求
<span
class="math inline">\(\displaystyle\lim_{n\to\infty}n!a_n.\)</span></p>
<span id="more"></span>
<p><strong><em>SOL</em></strong> 递推关系式两边同时取倒数, 并令 <span
class="math inline">\(b_n=1/a_n,\)</span> 右边 <span
class="math display">\[
b_{n+1}=(n+1)(b_n+1)\Rightarrow
\frac{b_{n+1}}{(n+1)!}=\frac{b_n}{n!}+\frac{1}{n!}
\]</span> 于是 <span class="math display">\[
\frac{b_n}{n!}=\sum_{k=0}^{n-1}\frac{1}{k!}.
\]</span> 因此 <span class="math display">\[
\displaystyle\lim_{n\to\infty}n!a_n=\displaystyle\lim_{n\to\infty}n!/b_n=\lim_{n\to\infty}\frac{1}{\sum_{k=0}^n1/k!}=\frac{1}{\mathrm{e}}.
\]</span> <span class="math inline">\(\square\)</span></p>
<blockquote>
<p><a
href="https://baoduoxu.github.io/2022/08/26/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/">这里</a>有两道类似的含有阶乘的求数列通项公式的题目,
在错位排列部分.</p>
</blockquote>
<p>2: 设 <span class="math inline">\(A_n=\displaystyle
\sum_{k=1}^{n}\frac{n}{n^2+k^2},\)</span> 求 <span
class="math inline">\(\displaystyle\lim_{n\to\infty}n(\pi/4-A_n).\)</span></p>
<p><strong><em>SOL</em></strong> 首先 <span class="math display">\[
\lim_{n\to\infty}A_n=\lim_{n\to\infty}\frac{1}{n}\sum_{k=1}^n\frac{1}{1+(k/n)^2}=\int_0^1\frac{\mathrm{d}
x}{1+x^2}=\pi/4,
\]</span> 于是所求极限为 <span
class="math inline">\(\infty\cdot0\)</span> 的形式. 由于 <span
class="math inline">\(\pi/4\)</span> 不好直接处理,
我们将其转化为积分并放入和式中: <span class="math display">\[
\begin{aligned}
\lim_{n\to\infty}n(\pi/4-A_n)
&amp;=\lim_{n\to\infty}n\left(\int_0^1\frac{\mathrm{d}
x}{1+x^2}-\sum_{k=1}^{n}\frac{n}{n^2+k^2}\right)\\
&amp;=\lim_{n\to\infty}n\sum_{k=1}^n\left(\int_{(k-1)/n}^{k/n}\frac{\mathrm{d}
x}{1+x^2}-\frac{n}{n^2+k^2}\right)\\
&amp;=\lim_{n\to\infty}n\sum_{k=1}^n\left(\arctan\frac{k}{n}-\arctan\frac{k-1}{n}-\frac{n}{n^2+k^2}\right)\\
&amp;=\lim_{n\to\infty}n\sum_{k=1}^n\left(\arctan\frac{\frac{k}{n}-\frac{k-1}{n}}{1+\frac{k(k-1)}{n^2}}-\frac{n}{n^2+k^2}\right)\\
&amp;=\lim_{n\to\infty}n\sum_{k=1}^n\left(\arctan\frac{n}{n^2+k^2-k}-\frac{n}{n^2+k^2}\right)\\
&amp;=\lim_{n\to\infty}n\sum_{k=1}^n\left(\frac{n}{n^2+k^2-k}-\frac{n}{n^2+k^2}+o(1/n^2)\right)\\
&amp;=\lim_{n\to\infty}n\sum_{k=1}^n\left(\frac{n}{n^2+k^2-k}-\frac{n}{n^2+k^2}\right)\\
&amp;=\lim_{n\to\infty}\sum_{k=1}^n\frac{n^2k}{(n^2+k^2-k)(n^2+k^2)}\\
&amp;=\lim_{n\to\infty}\sum_{k=1}^n\frac{n^2k}{(n^2+k^2)^2}\\
&amp;=\int_0^1\frac{x}{(1+x^2)^2}\mathrm{d} x\\
&amp;=\frac{1}{4}.
\end{aligned}
\]</span></p>
<blockquote>
<p>嗯, 主要是第一个等号不好想.</p>
</blockquote>
<p><span class="math inline">\(\square\)</span></p>
<p>3: 数列 <span class="math inline">\(\{x_n\}_{n\ge 0}\)</span> 满足
<span class="math inline">\(x_0=1,x_{n+1}=\ln(1+x_n),\)</span> 证明
<span class="math inline">\(\{x_n\}_{n\ge 0}\)</span> 收敛并求 <span
class="math inline">\(\displaystyle \lim_{n\to\infty}n x_n.\)</span></p>
<p><strong><em>SOL</em></strong></p>
<blockquote>
<p>趁机复习一下Stolz定理.</p>
<p>已知序列 <span class="math inline">\(\{x_n\},\{y_n\},\)</span> 若
<span class="math inline">\(\{y_n\}\)</span> 严格递增且 <span
class="math inline">\(\lim_{n\to\infty}y_n=\infty,\)</span> 且有极限
<span class="math display">\[
\lim_{n\to\infty}\frac{\Delta x_n}{\Delta y_n}=A,
\]</span> 其中 <span class="math inline">\(|A|\le \infty,\)</span> 则
<span class="math display">\[
\lim_{n\to\infty}\frac{x_n}{y_n}=\lim_{n\to\infty}\frac{\Delta
x_n}{\Delta y_n}=A.
\]</span> 即离散版本的洛必达法则.</p>
</blockquote>
<p>首先用归纳法可以证得 <span class="math inline">\(x_n&gt;0,\)</span>
因此 <span
class="math inline">\(x_{n+1}-x_n=\ln(1+x_n)-x_n&lt;0,\)</span> <span
class="math inline">\(\{x_n\}\)</span> 递减有下界, 收敛, 且 <span
class="math display">\[
\lim_{n\to\infty}x_{n+1}=a=\ln(1+a),
\]</span> 有唯一解 <span class="math inline">\(a=0.\)</span> 于是序列
<span class="math inline">\(\{1/x_n\}\)</span> 严格增加且 <span
class="math inline">\(\lim_{n\to\infty}1/x_n=+\infty,\)</span>
于是由Stolz定理得 <span class="math display">\[
\begin{aligned}
\lim_{n\to\infty}nx_n
&amp;=\lim_{n\to\infty}\frac{n}{1/x_n}\\
&amp;=\lim_{n\to\infty}\frac{n-(n-1)}{1/x_n-1/x_{n-1}}\\
&amp;=\lim_{n\to\infty}\frac{x_nx_{n-1}}{x_{n-1}-x_{n}}\\
&amp;=\lim_{x\to 0^+}\frac{\ln(1+x)x}{x-\ln(1+x)}\\
&amp;=\lim_{x\to0^+}\frac{x^2}{(1/2)x^2}\\
&amp;=2
\end{aligned}
\]</span> <span class="math inline">\(\square\)</span></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
      <tags>
        <tag>Stolz</tag>
      </tags>
  </entry>
  <entry>
    <title>Calculus review Day9</title>
    <url>/2022/09/12/calculus/Calculus-review-Day9/</url>
    <content><![CDATA[<p>1: 计算积分 <span class="math display">\[
\int_0^{2\pi}\mathrm{d}\phi\int_0^{\pi}\sin\theta
\mathrm{e}^{\sin\theta(\cos\phi-\sin\phi)}\mathrm{d}\theta.
\]</span> <span id="more"></span></p>
<p><strong><em>SOL1</em></strong> 不难发现该积分(记作 <span
class="math inline">\(I\)</span> ) 可以写成曲面积分的形式: <span
class="math display">\[
I=\iint_{\Sigma}\mathrm{e}^{x-y}\mathrm{d}S.
\]</span> 其中 <span class="math inline">\(\Sigma\)</span>
为单位球面.</p>
<p>于是 <span class="math display">\[
I=2\iint_{x^2+y^2\le
1}\frac{\mathrm{e}^{x-y}}{\sqrt{1-x^2-y^2}}\mathrm{d}x\mathrm{d}y
\]</span></p>
<blockquote>
<p>好菜, 自己做的时候写到这一步就不会了, 还在想着用极坐标.</p>
</blockquote>
<p>考虑将积分区域绕原点逆时针旋转 <span
class="math inline">\(\pi/4,\)</span> 将指数部分变为单项式(更好处理),
此时积分区域和分母不发生变化, 即令 <span class="math display">\[
[u,v]^T=\begin{bmatrix}
\cos\pi/4&amp;-\sin\pi/4\\
\sin\pi/4&amp;\cos\pi/4
\end{bmatrix}[x,y]^{T}
\]</span> 得到 <span
class="math inline">\(x-y=\sqrt{2}u,x+y=\sqrt{2}v,\left\vert
\frac{\partial(x,y)}{\partial(u,v)}\right\vert =1.\)</span> 于是积分变为
<span class="math display">\[
\begin{aligned}
I
&amp;=2\iint_{u^2+v^2\le
1}\frac{\mathrm{e}^{\sqrt{2}u}}{\sqrt{1-u^2-v^2}}\mathrm{d}u\mathrm{d}v\\
&amp;=2\int_{-1}^1\mathrm{e}^{\sqrt{2}u}\mathrm{d}u\int_{-\sqrt{1-u^2}}^{\sqrt{1-u^2}}\frac{1}{\sqrt{1-u^2-v^2}}\mathrm{d}v\\
&amp;=\sqrt{2}\pi(\mathrm{e}^{\sqrt{2}}-\mathrm{e}^{-\sqrt{2}})  \\
&amp;=2\sqrt{2}\pi\sinh\sqrt{2}
\end{aligned}
\]</span> <span class="math inline">\(\square\)</span></p>
<blockquote>
<p><strong><em>REMARK</em></strong>: 总结就是, 不要用球坐标和极坐标.
原式本来就是曲面积分利用球坐标化简出来的, 所以就老老实实在 <span
class="math inline">\(xOy\)</span> 上做就好了.
不过结果可以写成双曲正弦的形式, 应该也可以用双曲代换.</p>
<p>复习一下重积分的换元.</p>
<p>对于二重积分 <span class="math inline">\(\displaystyle
\iint_{D}f(x,y)\mathrm{d}x\mathrm{d}y,\)</span> 若做换元 <span
class="math inline">\(x=f(u,v),y=g(u,v),\)</span> 则 <span
class="math display">\[
\mathrm{d}x=f_u \mathrm{d}u+f_v\mathrm{d}v\\
\mathrm{d}y=g_u \mathrm{d}u+g_v\mathrm{d}v
\]</span> 即 <span class="math display">\[
\begin{bmatrix}
\mathrm{d}x\\
\mathrm{d}y
\end{bmatrix}
=\begin{bmatrix}
f_u &amp; f_v\\
g_u &amp; g_v
\end{bmatrix}\begin{bmatrix}
\mathrm{d}u\\
\mathrm{d}v
\end{bmatrix}
\]</span> <span class="math inline">\(\mathrm{d}u,\mathrm{d}v\)</span>
可近似看作直线, 于是面积微元从 <span
class="math inline">\(\mathrm{d}x,\mathrm{d}y\)</span>
张成的平行四边形变成了 <span
class="math inline">\(\mathrm{d}u,\mathrm{d}v\)</span> 张成的平行四边形,
它们的面积比为线性变换对应矩阵的行列式, 即Jacobi行列式: <span
class="math display">\[
\vert J\vert =\left\vert \frac{\partial(x,y)}{\partial(u,v)}\right\vert
=\begin{vmatrix}
f_u &amp; f_v\\
g_u &amp; g_v
\end{vmatrix},
\]</span> 即 <span class="math inline">\(\mathrm{d}x\mathrm{d}y=\vert
J\vert \mathrm{d}u\mathrm{d}v.\)</span></p>
<p>或者更本质些, <span
class="math inline">\(\mathrm{d}x,\mathrm{d}y\)</span> 均为向量, <span
class="math inline">\(\mathrm{d}x\mathrm{d}y\)</span>
是一种特殊的叉乘即楔积(wedge product): <span
class="math inline">\(\mathrm{d}x\wedge \mathrm{d}y,\)</span> 于是 <span
class="math inline">\(\mathrm{d}u\land \mathrm{d}u=\mathrm{d}v\land
\mathrm{d}v=0,\)</span> <span class="math inline">\(\mathrm{d}u\land
\mathrm{d}v=-\mathrm{d}v\land \mathrm{d}u,\)</span> 于是 <span
class="math display">\[
\begin{aligned}
\mathrm{d}x\land \mathrm{d}y
&amp;=(f_u\mathrm{d}u+f_v \mathrm{d}v)\land (g_u\mathrm{d}u+g_v
\mathrm{d}v)\\
&amp;=f_ug_u\mathrm{d}u\land
\mathrm{d}v-f_vg_v\mathrm{d}u\land\mathrm{d}v\\
&amp;=(f_ug_u-f_vg_v)\mathrm{d}u\land \mathrm{d}v\\
&amp;=\begin{vmatrix}
f_u &amp; f_v\\
g_u &amp; g_v
\end{vmatrix}\mathrm{d}u\land \mathrm{d}v
\end{aligned}
\]</span> 不过为什么在积分的时候可以认为 <span
class="math inline">\(\mathrm{d}u\mathrm{d}v=\mathrm{d}v\mathrm{d}u\)</span>
呢?</p>
<p>一个比较清晰的理解Jacobi行列式的回答: <a
href="https://www.zhihu.com/question/318504273/answer/639295875">雅可比行列式该如何理解?
- 知乎 (zhihu.com)</a></p>
<p><a
href="https://www.zhihu.com/question/368888687">直角坐标与极坐标的互化中，为什么
dxdy=rdrdθ？ - 知乎 (zhihu.com)</a></p>
<p>本题来源: <a
href="https://blog.csdn.net/weixin_44949135/article/details/109584486">2019年
第11届 全国大学生数学竞赛 初赛(非数学类)试题详细解答</a></p>
<p>有时间把Jacobi矩阵和Jacobi行列式总结一下.</p>
</blockquote>
<p><strong><em>SOL2</em></strong></p>
<blockquote>
<p>看到 <span class="math inline">\(\sin\phi-\cos\phi\)</span>
这种东西怎么会想不到辅助角公式换元呢(</p>
</blockquote>
<p><span class="math display">\[
\begin{aligned}
I
&amp;\xlongequal{\phi\mapsto\phi+\pi/4}\int_{\pi/4}^{9\pi/4}\mathrm{d}\phi\int_0^{\pi}\sin\theta
\mathrm{e}^{\sqrt{2}\sin\theta\cos\phi}\mathrm{d}\theta\\
&amp;=2\int_{0}^{2\pi}\mathrm{d}\phi\int_0^{\pi/2}\sin\theta
\mathrm{e}^{\sqrt{2}\sin\theta\cos\phi}\mathrm{d}\theta
\end{aligned}
\]</span></p>
<p>这个式子还是能联想到极坐标, 作换元 <span class="math inline">\(\sin
\theta=r,\)</span> 就有 <span class="math display">\[
I=2\int_{0}^{2\pi}\mathrm{d}\phi\int_0^{1}
\frac{\mathrm{e}^{\sqrt{2}r\cos\phi}}{\sqrt{1-r^2}}r\mathrm{d}r,
\]</span> 更明显了, 化成二重积分后用直角坐标计算即可, 剩下的和
<strong><em>SOL1</em></strong> 一样. <span
class="math inline">\(\square\)</span></p>
<blockquote>
<p><strong><em>REMARK</em></strong>: 1) 看到 <span
class="math inline">\([0,\pi]\)</span>
上的三角函数的积分会很自然地将其化到 <span
class="math inline">\([0,\pi/2]\)</span> 上, 即 <span
class="math display">\[
\int_0^\pi f(\sin\theta)\mathrm{d}\theta=2\int_0^{\pi/2}
f(\sin\theta)\mathrm{d}\theta.
\]</span> 对称性易得.</p>
<ol start="2" type="1">
<li>对于周期为 <span class="math inline">\(T\)</span> 的周期函数 <span
class="math inline">\(g(x)\)</span> 而言,
它在任意一个周期上的积分都是一样的, 即 <span class="math display">\[
\begin{aligned}\int_a^{a+T}g(x)\mathrm{d}x&amp;=\int_0^T
g(x)\mathrm{d}x+\int_T^{a+T}g(x+T)\mathrm{d}{(x+T)}-\int_0^ag(x)\mathrm{d}x\\&amp;=\int_0^T
g(x)\mathrm{d}x.\end{aligned}
\]</span></li>
</ol>
</blockquote>
<p>2: 设 <span class="math display">\[
u_n=\int_0^1\frac{\mathrm{d}t}{(1+t^4)^n},n\ge 1.
\]</span> 1) 证明 <span class="math inline">\(\{u_n\}\)</span> 收敛,
并求其极限.</p>
<p><strong><em>PROOF</em></strong> 由于 <span
class="math inline">\(1/(1+t^4)&lt;1,\)</span> 故 <span
class="math inline">\(1/(1+t^4)^n&gt;1/(1+t^4)^{n+1},\)</span> 因此
<span class="math inline">\(\{u_n\}\)</span> 递减, 且 <span
class="math display">\[
\int_0^1\frac{\mathrm{d}t}{(1+t^4)^n}&gt;0,
\]</span> 故 <span class="math inline">\(\{u_n\}\)</span>
单调递减有下界, 收敛. 取任意 <span
class="math inline">\(\varepsilon\in(0,1),\)</span> 有 <span
class="math display">\[
\int_0^1\frac{\mathrm{d}t}{(1+t^4)^n}=\int_0^{\varepsilon}\frac{\mathrm{d}t}{(1+t^4)^n}+\int_\varepsilon^1\frac{\mathrm{d}t}{(1+t^4)^n}
\]</span> 对于第二项, 由积分中值定理得 <span class="math display">\[
\lim_{n\to\infty}\int_\varepsilon^{1}\frac{\mathrm{d}t}{(1+t^4)^n}=\lim_{n\to\infty}\frac{1}{(1+\xi_n^4)^n}=0,\xi_n\in(\varepsilon,1).
\]</span></p>
<blockquote>
<p>不能直接用积分中值定理是因为若 <span
class="math inline">\(\{\xi_n\}\)</span> 收敛至 <span
class="math inline">\(0,\)</span> 那么上式就变为了 <span
class="math inline">\(1^{\infty}\)</span> 的不定式.</p>
</blockquote>
<p>对于第一项, 当 <span class="math inline">\(n\)</span> 充分大时, 有
<span class="math display">\[
\left\vert \int_0^{\varepsilon}\frac{\mathrm{d}t}{(1+t^4)^n}\right\vert
&lt;\varepsilon,
\]</span> 于是 <span class="math display">\[
\lim_{n\to\infty}\int_0^{\varepsilon}\frac{\mathrm{d}t}{(1+t^4)^n}=0,
\]</span> 这就证得了 <span class="math inline">\(\lim_{n\to\infty
}u_n=0.\)</span> <span class="math inline">\(\square\)</span></p>
<ol start="2" type="1">
<li>证明级数 <span class="math inline">\(\displaystyle
\sum_{n=1}^{\infty}(-1)^nu_n\)</span> 条件收敛.</li>
</ol>
<p><strong><em>PROOF</em></strong> <span
class="math inline">\(\{u_n\}\)</span> 为正项数列且递减且极限为 <span
class="math inline">\(0,\)</span> 于是由Leibniz判别法知其收敛. <span
class="math inline">\(\square\)</span></p>
<p>3)证明级数 <span class="math inline">\(\displaystyle
\sum_{n=1}^{\infty}\frac{u_n}{n^p}\)</span> 在 <span
class="math inline">\(p\ge 1\)</span> 时收敛, 并求 <span
class="math inline">\(\displaystyle
\sum_{n=1}^{\infty}\frac{u_n}{n}\)</span> 的值.</p>
<p><strong><em>PROOF</em></strong> 由于 <span
class="math inline">\(0&lt;u_n&lt; 1(n\ge 1),\)</span> 于是 <span
class="math display">\[
\sum_{n=1}^{\infty}\frac{u_n}{n^p}&lt;\frac{1}{n^p},
\]</span> 后者为 <span class="math inline">\(p\)</span> 级数在 <span
class="math inline">\(p&gt;1\)</span> 时收敛. 下面证明 <span
class="math inline">\(p=1\)</span> 时的情况.</p>
<p>利用分部积分可以求出递推公式: <span class="math display">\[
u_{n+1}=\frac{4n-1}{4n}u_n+\frac{1}{2^n}
\]</span> 得到 <span class="math display">\[
\frac{u_n}{n}=4(u_n-u_{n+1})+\frac{1}{2^{n-2}}
\]</span> 于是 <span class="math display">\[
\sum_{n=1}^{\infty}\frac{u_n}{n}=4\sum_{n=1}^{\infty}(u_n-u_{n+1})+\sum_{n=1}^{\infty}\frac{1}{2^{n-2}}=4u_1+4.
\]</span> <span class="math inline">\(u_1\)</span>
是一个老生常谈的积分了, 令 <span
class="math inline">\(\omega_k=\exp\mathrm{i}
(2k-5)\pi/4,k=1,2,3,4,\)</span> 这是方程 <span
class="math inline">\(x^4+1=0\)</span> 的四个根, 于是 <span
class="math display">\[
\begin{aligned}
\int_0^1\frac{\mathrm{d}t}{1+t^4}
&amp;=\int_0^1\frac{\mathrm{d}t}{(t-\omega_1)(t-\omega_2)(t-\omega_3)(t-\omega_4)}\\
&amp;=\int_0^1\frac{\mathrm{d}t}{(t^2-\sqrt{2}t+1)(t^2+\sqrt{2}t+1)}\\
&amp;=\frac{1}{2\sqrt{2}}\int_0^1\left(\frac{t+\sqrt{2}}{t^2+\sqrt{2}t+1}-\frac{t-\sqrt{2}}{t^2-\sqrt{2}t+1}\right)\mathrm{d}t\\
&amp;=\left.\frac{1}{4\sqrt{2}}\ln\left\vert
\frac{t^2+\sqrt{2}t+1}{t^2-\sqrt{2}t+1}\right\vert
+\frac{1}{2\sqrt{2}}\arctan\frac{\sqrt{2}t}{1-t^2}\right\vert _0^1\\
&amp;=\frac{1}{4\sqrt{2}}\ln\frac{2+\sqrt{2}}{2-\sqrt{2}}+\frac{\pi}{4\sqrt{2}}
\end{aligned}
\]</span> 代入即得 <span class="math inline">\(\displaystyle
\sum_{n=1}^{\infty}\frac{u_n}{n}.\)</span></p>
<blockquote>
<p>计算能力有待加强.</p>
</blockquote>
]]></content>
      <categories>
        <category>Math</category>
        <category>Calculus</category>
      </categories>
      <tags>
        <tag>Jacobi Determinant</tag>
      </tags>
  </entry>
  <entry>
    <title>数学建模记录</title>
    <url>/2023/08/17/math-modelling/shanshu-cup/</url>
    <content><![CDATA[<h1 id="第一轮评价">第一轮评价</h1>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308280842699.png" /></p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308280843070.png" /></p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308280843201.png" /></p>
<!-- 每个任务是一个五元组 $v=(s,t,p,q,d)$, 表示每个任务的起止时间和起止地点以及流向 $d$, 其中 $s,t$ 的单位为秒, $p,q\in \{1,2,3\}$, $d\in\{1,2\}$, $d=1$ 表示正向($p_s<p_e$), $d=2$ 表示反向 $(p_s>p_e)$.

设任务数为 $n$, 那么构造一个有 $|V|=n$ 个结点的有向无环图 $G=(V,E)$, $(v_i,v_j)\in E$ 当且仅当:

- $q_i=p_j$; (空间约束)
- 当 $d_i=d_j$ 时满足 $t_i<s_j$, 当 $d_i\ne d_j$ 时满足 $t_j+600<s_j$; (时间约束)

## 问题1

算法1(拓扑排序): 输入图 $G=(V,E)$, $V$ 中每个顶点的度数 $\deg(v_1),\cdots,\deg(v_n)$, 输出顶点的有序序列 $Q$;

$Q:=\emptyset$

while($V\ne \empty$)

1. 选择度数最小的点 $u=\arg \min_{v\in V}\deg(v)$
2. $v$ 进入 $Q$ 即 $Q:Q\cup\{v\}$
3. 删点 $V:=V\backslash \{v\}$, 更新 $\deg(v),v\in V$

算法2(深度优先搜索)

输入: 当前点 $v$, 当前链的总时间 $t$,  最初的起点 $s$, 拓扑排序得到的顶点序列 $Q$, $G=(V,E)$ 

输出: 以 $s$ 为起点的最小不可行子链数目 $\mathtt{ans}$ 以及最小不可行子链方案

if $t+T(v)>7200$

if $t-T(s)<7200$, 

$\mathtt{ans}:=\mathtt{ans}+1$

return

else

return

end if

end if

$t:=T(v)$

for $u\in N(v)$:

if $u$ 没有被访问过且 $u,v$ 的时间差小于 $1200$ 秒:

dfs($u,t,s,\mathtt{ans}$)

 

## 问题2

相当于是在给定约束条件下, 找到 DGA $G$ 的最小路径覆盖数及其方案.

最小路径覆盖简称为 MPC(minimum path cover).

为了方便, 我们先找到没有任何约束情况下 $G$ 的最小路径覆盖数及其方案, 这是一个初步方案. 初步方案中会有违反总时间约束的路径, 那么我们遍历每个路径, 选择最优的方式断开路径即可.

算法思路:

以 $G=(V,E)$ 构造二分图 $G'=(V_1\cup V_2,E')$, 其中 $V_1=V$, 为了区分二分图的两部分点, 令 $V_2=\{v_{n+1},\cdots,v_{2n}\}$, 相当于把 $v_i$ 拆成了二分图中的 $v_i,v_{i+n}$ 两个点, 且对于 $v_i\in V_1,v_j\in V_2(1\le i\le n,n+1\le j\le 2n)$, $(v_i,v_j)\in E'$ 当且仅当 $(v_{i},v_{j-n})\in E$. 

使用匈牙利算法找到 $G'$ 的最大匹配 $M=\{(v_{l_1},v_{r_1}),\cdots,(v_{l_m},v_{r_m})\}$, 那么 $n-|M|$ 是最小路径覆盖数. 

获取方案的方法: 根据区间的关系维护每个点的后代.

初始化每个区间 $k$ 的儿子为 $\mathrm{son}(k)=k$, 若 $l_i-n=r_j$ 则令 $\mathrm{son}(i)=j$;

输出路径时, 维护入度的数组, 入度为零的点一定是起点, 找到路径后将路径删去, 修改度数, 直到所有的点都被输出. -->
]]></content>
  </entry>
  <entry>
    <title>人工智能相关实验记录</title>
    <url>/2023/09/16/junior_first_semester/exp-of-ai/</url>
    <content><![CDATA[<h1 id="机器学习前沿实验要点">机器学习前沿实验要点</h1>
<p>1: 数据标准化写法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">X=(X-np.mean(X,axis=<span class="number">0</span>))/X.std()</span><br></pre></td></tr></table></figure>
<p>其中 <code>X.std()</code> 表示标准差, <code>axis=0</code>
表示按列计算均值.</p>
<p>2: 用 Tensorflow 写神经网络的一般流程.</p>
<h1 id="人工智能综合实验要点">人工智能综合实验要点</h1>
<h2 id="实验一">实验一</h2>
<h3 id="batch-batch_size-epoch-train_iter">batch, batch_size, epoch,
train_iter</h3>
<p>为了加速训练神经网络往往使用 batch 的方法来处理数据.
具体而言是将训练数据集以 batch_size 的大小划分为若干个批次, 得到
train_iter, train_iter 是形如 <span
class="math inline">\(\{(X_k,y_k)\}_{k=1}^{\mathrm{batch}}\)</span>
的张量, 可以使用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> X,y <span class="keyword">in</span> train_iter:</span><br></pre></td></tr></table></figure>
<p>的形式来获取每个批次的输入 <span class="math inline">\(X\)</span> 和
label <span class="math inline">\(y\)</span>, 其中 <span
class="math inline">\(X\in\mathbb{R}^{\mathrm{batch\_size}\times
n}\)</span> 是数量为 batch_size 维度为 <span
class="math inline">\(n\)</span> 的数据形成的张量, <span
class="math inline">\(y\)</span> 是长度为 batch_size 的向量.</p>
<p>每个 epoch 都要按照 train_iter
迭代遍历<strong>所有的数据</strong>.</p>
<h4 id="每个-batch-的数据具体是如何处理的">每个 batch
的数据具体是如何处理的？</h4>
<h3 id="softmax回归">Softmax回归</h3>
<p>1: 将图片展开成向量.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p>2: 一个神经网络类都包括哪些内容? 每部分内容的含义是什么?</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p>3: 一个一般的训练神经网络的结构是什么?</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">num_epochs = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">losses = [] <span class="comment"># 存放loss的变化</span></span><br><span class="line">accuracies = [] <span class="comment"># 存放测试集准确率的变化</span></span><br><span class="line">train_accs=[] </span><br><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(num_epochs):</span><br><span class="line">    train_l_sum, train_acc, n = <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0</span></span><br><span class="line">    n=<span class="built_in">len</span>(mnist_train) </span><br><span class="line">    correct=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> X, y <span class="keyword">in</span> train_iter: <span class="comment"># 对于 train_iter 这种结构的数据, for X,y 这种写法得到的 X 是训练数据的输入, y是训练数据的标签</span></span><br><span class="line">        output=net(X) </span><br><span class="line">        optimizer.zero_grad() <span class="comment"># 清空梯度</span></span><br><span class="line">        l=loss(output,y)</span><br><span class="line">        l.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        train_l_sum+=l.item() <span class="comment"># 计算总的loss</span></span><br><span class="line">        <span class="comment"># 计算训练准确率和测试准确率</span></span><br><span class="line">        _,predicted=torch.<span class="built_in">max</span>(output.data,<span class="number">1</span>) <span class="comment"># 找到最大值并返回最大值的索引</span></span><br><span class="line">        <span class="built_in">print</span>(predicted,y)</span><br><span class="line">        correct+=((predicted==y).<span class="built_in">sum</span>().item())</span><br><span class="line">    train_acc=correct/<span class="built_in">len</span>(mnist_train)</span><br><span class="line">    train_accs.append(train_acc)</span><br><span class="line">    <span class="comment"># print(train_acc,n)</span></span><br><span class="line">    correct=<span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> test_iter: <span class="comment"># 测试集数据</span></span><br><span class="line">            _<span class="keyword">in</span>,labels=data[<span class="number">0</span>],data[<span class="number">1</span>]</span><br><span class="line">            <span class="comment"># print(labels)</span></span><br><span class="line">            output=net(_<span class="keyword">in</span>)</span><br><span class="line">            <span class="comment"># print(np.shape(output))</span></span><br><span class="line">            l=loss(output,labels)</span><br><span class="line">            _,predicted=torch.<span class="built_in">max</span>(output.data,<span class="number">1</span>)</span><br><span class="line">            correct+=((predicted==labels).<span class="built_in">sum</span>().item()) <span class="comment"># 正确的个数</span></span><br><span class="line">        test_acc=correct/<span class="built_in">len</span>(mnist_test)</span><br><span class="line">        accuracies.append(test_acc)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;epoch %d, loss %.4f, train acc %.3f, test acc %.3f&#x27;</span></span><br><span class="line">          % (epoch + <span class="number">1</span>, train_l_sum / n, train_acc, test_acc))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>nn.ReLU(inplace=True) 创建了一个 ReLU 激活函数的实例，并将其赋值给了
self.relu。inplace=True
的意思是将计算结果直接覆盖原有的内存空间，以节省内存。这样做可以在反向传播时节省一些内存开销。</p>
<h2 id="实验二">实验二</h2>
<p>LeNet 和 ResNet 实现 CIFAR-10 数据分类.</p>
<h2 id="实验三">实验三</h2>
<p>RNN 实现文本翻译.</p>
<ul>
<li><code>nn.Embedding()</code> 的两个参数为词汇大小和嵌入维度,
词汇大小指的是<strong>文本数据中不同单词的数量</strong>,
嵌入维度指的是将词汇映射到的密集向量的维度.</li>
<li><code>nn.RNN()</code> 的参数为</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">EncoderRNN</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, input_size, hidden_size</span>):</span><br><span class="line">        <span class="built_in">super</span>(EncoderRNN, self).__init__()</span><br><span class="line">        self.hidden_size = hidden_size</span><br><span class="line"></span><br><span class="line">        self.embedding = nn.Embedding(input_size, hidden_size)</span><br><span class="line">        self.rnn = nn.RNN(input_size,hidden_size)      <span class="comment"># 调用nn.RNN()函数初始化网络  <span class="doctag">TODO:</span> 对比nn.RNN 和nn.GRU对最终模型效果的影响</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, <span class="built_in">input</span>, hidden</span>):</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 合理调用__init__()函数中声明的函数，来完成Encoder RNN的一个time step计算过程</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#######Your Code#######</span></span><br><span class="line">        <span class="comment"># 使用self.embedding将输入转化为向量表达 </span></span><br><span class="line">        <span class="comment"># tips:使用self.embedding对input进行编码后，你可能需要使用view函数将输出向量的维度进行重组(view(1,1,-1))</span></span><br><span class="line">        input_code=self.embedding(<span class="built_in">input</span>,hidden)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 调用self.rnn计算当前时间步的hidden state和output并返回</span></span><br><span class="line">        <span class="comment"># tips:使用第t-1步的output作为第t步的input</span></span><br><span class="line">        output,hidden_state=self.rnn(input_code,hidden)</span><br><span class="line">        <span class="keyword">return</span> hidden_state,output</span><br><span class="line">        <span class="comment">#######End#######</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">initHidden</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> torch.zeros(<span class="number">1</span>, <span class="number">1</span>, self.hidden_size, device=device)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>rho-ring-star.md</title>
    <url>/2023/07/03/thesis/rho-ring-star/</url>
    <content><![CDATA[<h1 id="robust-ring-star-problem">Robust Ring-Star Problem</h1>
<h2 id="definition-of-ring-star-problem">Definition of Ring-Star
Problem</h2>
<p>对于混合图<span class="math inline">\(G=(V,E\cup A)\)</span>, 设<span
class="math inline">\(V=[n]\)</span>, 顶点<span
class="math inline">\(1\)</span>表示depot, 无向边集<span
class="math inline">\(E=\{(i,j)\in V^2:i&lt;j\}\)</span>, 有向边集<span
class="math inline">\(A=V^2\)</span>.</p>
<p>Ring-Star problem分为ring part和star part,
即需要构造一个包括下面两部分的网络:</p>
<ul>
<li>ring part: 从 <span class="math inline">\(V\)</span> 中选出一个子集
<span class="math inline">\(H\)</span> 作为hub的集合,
用无向边连接选出的所有的hub构成一个cycle. 打开hub <span
class="math inline">\(i\)</span> 的代价为<span
class="math inline">\(o_i\in\mathbb{R}_{+}\)</span>; 连接hub <span
class="math inline">\(i\)</span> 和hub <span
class="math inline">\(j\)</span> 的代价为<span
class="math inline">\(r_{ij}\in\mathbb{R}_+\)</span>, 保证depot在<span
class="math inline">\(H\)</span>中.</li>
<li>star part: 除了hub以外的顶点作为terminal, 记作 <span
class="math inline">\(T=V\backslash H\)</span>, 保证terminal必须恰好与
<span class="math inline">\(H\)</span>
中的<strong>一个</strong>hub使用有向边相连(由terminal指向hub), 对于
<span class="math inline">\(t\in T,h\in H\)</span>, 连接 <span
class="math inline">\(t,h\)</span> 的代价为<span
class="math inline">\(s_{th}\in\mathbb{R}_+\)</span>.
即构造星型拓扑.</li>
</ul>
<p>RSP的目的就是最小化构造Ring-Star网络的代价.</p>
<p>上述定义中的“一个terminal必须恰好与一个hub连接”可以推广为 <span
class="math inline">\(k\)</span> 个, 表示 <span
class="math inline">\(k\)</span> edge-connected,
即每两个terminal之间恰有 <span class="math inline">\(k\)</span>
条path.</p>
<p>RSP是NP-hard的, 如果assignment cost <span
class="math inline">\(\gg\)</span> ring cost,
那么TSP将是RSP的一个特例.</p>
<h2 id="robust-rsp">Robust RSP</h2>
<p>Robust RSP记作<span class="math inline">\(\rho\)</span>-RSP,
相比RSP增加一个输入<span class="math inline">\(\widetilde{V}\subseteq
V\)</span>表示如果<span class="math inline">\(v\in\widetilde{V}\)</span>
被选中作为hub, 那么它是不稳定的, 即可能会fail, 于是为了保证网络的健壮性,
需要将不稳定的hub的neighbors相连.</p>
<h2 id="ilp表述">ILP表述</h2>
<h3 id="notation">Notation</h3>
<ul>
<li><span class="math inline">\(r_{ij}\)</span> 表示连接hub <span
class="math inline">\(i,j\)</span> 的花费</li>
<li><span class="math inline">\(x_{ij}\)</span>
用来描述不考虑hub的不稳定性时hub之间是否有边相连,
由于hub之间相连构成的子图是一个无向图, 因此约定 <span
class="math inline">\(i&lt;j\)</span>.</li>
<li><span class="math inline">\(y_{ij}\)</span> 表示是否将terminal <span
class="math inline">\(i\)</span> 连到hub <span
class="math inline">\(j\)</span> 上, 保证 <span
class="math inline">\(i\ne j\)</span>.</li>
<li><span class="math inline">\(y_{ii}\)</span> 为 <span
class="math inline">\(0\)</span> 是表示结点 <span
class="math inline">\(i\)</span> 为termianl, 为 <span
class="math inline">\(1\)</span> 表示结点 <span
class="math inline">\(i\)</span> 是 hub.</li>
<li><span class="math inline">\(x_{ik}&#39;\)</span>
表示考虑hub的不稳定时, 若 <span
class="math inline">\(\exists\tilde{v}\in\widetilde{V},\text{s.t.
}\tilde{v}\in N(i)\cap N(k)\)</span>, 则 <span
class="math inline">\(x_{ik}=1\)</span>, 否则为 <span
class="math inline">\(0\)</span>.</li>
</ul>
<p>下面是问题的ILP描述: <span class="math display">\[
\begin{aligned}
&amp;\min \sum_{i\in V}\sum_{j\in V\land i&lt;j}
r_{ij}(x_{ij}+x_{ij}&#39;)+\sum_{i\in V}o_iy_{ii}+\sum_{i\in
V}\sum_{j\in V\backslash\{i\}}s_{ij}y_{ij}
\end{aligned}
\]</span> 下面一一叙述优化问题的约束条件:</p>
<ul>
<li>首先需要保证所有的hub恰好形成一个环, 于是每个hub的度数应恰好为 <span
class="math inline">\(2\)</span>, 于是对任意 <span
class="math inline">\(i\)</span>, 都有 <span
class="math inline">\(\sum_{j\in V\land i&lt;j}x_{ij}+\sum_{j\in V\land
i&gt;j}x_{ji}=2y_{ii}\)</span></li>
<li>保证最终的RS网络只有一个hub形成的环, 而不会出现孤立的环, 考虑subtour
elimination, 对任意 <span class="math inline">\(V\)</span> 的子集 <span
class="math inline">\(S\)</span>, 有 <span
class="math inline">\(\sum_{i\in S}\sum_{j\in S\land i&lt;j}x_{ij}\le
|S|-1\)</span>, 但是如果所有的hub都在 <span
class="math inline">\(S\)</span> 里. 那么上述约束的和式可以取到 <span
class="math inline">\(|S|\)</span>, 考虑将不等式右边的 <span
class="math inline">\(1\)</span> 改为 <span
class="math inline">\(\frac{1}{|V\backslash S|}\sum_{i\in V\backslash
S}y_{ii}\in [0,1]\)</span>, 于是得到最终的subtour elimination: <span
class="math inline">\(\sum_{i\in S}\sum_{j\in S\land i&lt;j}x_{ij}\le
|S|-\frac{1}{|V\backslash S|}\sum_{i\in V\backslash S}y_{ii}\)</span>.
在实际问题中hub和terminal的数量应合理, 这里设置成 <span
class="math inline">\(|S|\le| V|/2\)</span>.</li>
<li>保证每个terminal要么与一个稳定的hub连接, 要么与两个不稳定的hub连接,
于是对任意结点 <span class="math inline">\(i\)</span> 都有 <span
class="math inline">\(\sum_{j\in V\backslash{\widetilde{V}}\land i\ne
j}y_{ij}+\frac{1}{2}\sum_{j\in\widetilde{V}\land i\ne
j}y_{ij}=1-y_{ii}\)</span>. 上个式子保证了如果结点 <span
class="math inline">\(i\)</span> 是hub则 <span
class="math inline">\(y_{ii}=1\)</span> 则对任意 <span
class="math inline">\(j\)</span> 都有 <span
class="math inline">\(y_{ij}=0\)</span>.</li>
<li>由于最小的环需要有三个边, 且若存在不稳定的hub,
则最终的RS网络的hub形成的子图应至少有4条边, 于是设置一个 <span
class="math inline">\(\sigma\)</span>, 那么有 <span
class="math inline">\(\sum_{i\in V}\sum_{j\in V\land i&lt;j}x_{ij}\ge
\sigma+3,\)</span> 其中 <span class="math inline">\(\sigma \ge
y_{ii},\forall i\in \widetilde{V}\)</span>.</li>
<li>与同一个不稳定的hub相连的两个hub需要增加一条边来确保稳定性, 对 <span
class="math inline">\(j\in\widetilde{V}\)</span>, <span
class="math inline">\(i\in V, k\in V, i&lt;j\)</span>, 若 <span
class="math inline">\(i,k\)</span>都与 <span
class="math inline">\(j\)</span> 相连, 则应有 <span
class="math inline">\(x_{ik}&#39;=1\)</span>, 于是 <span
class="math inline">\(x_{ik}&#39;\ge x_{ij}+x_{jk}-1\)</span>.</li>
<li>不需要将任何terminal或者hub连接terminal上, 于是 <span
class="math inline">\(y_{ij}\le y_{jj},\forall i\ne j\)</span>.
这保证了若 <span class="math inline">\(y_{jj}=0\)</span> 即结点 <span
class="math inline">\(j\)</span> 为terminal, 则 <span
class="math inline">\(y_{ij}=0\)</span>.</li>
<li>还有其他简单的约束, 包括将第一个点作为depot: <span
class="math inline">\(y_{11}=1\)</span>,
以及各个变量为01变量的约束.</li>
</ul>
<h2 id="使用benders-decomposition">使用Benders Decomposition</h2>
<h2 id="子问题的对偶问题">子问题的对偶问题</h2>
<h2 id="一个算法">一个算法</h2>
]]></content>
  </entry>
  <entry>
    <title>Python入门(2):类和对象</title>
    <url>/2022/08/26/python/Python2/</url>
    <content><![CDATA[<h2 id="什么是面向对象">什么是面向对象</h2>
<p>面向对象编程（Object-oriented
Programming，简称OOP），指一种<strong>封装代码</strong>的方法。代码封装即隐藏实现功能的具体代码，仅留给用户使用的接口。面向对象编程实在面向过程编程的基础上发展来的，它比面向过程编程具有更强的灵活性和扩展性。</p>
<span id="more"></span>
<h3 id="相关术语">相关术语</h3>
<ul>
<li><strong>类</strong>：类是一个模板，是一个宽泛的概念，通过它可以创造出无数具体的实例。比如物种可以看作是类。</li>
<li><strong>对象</strong>：对象是类的具体化。类不能直接使用，它是一个“蓝图”。</li>
<li><strong>属性</strong>：类中所有的变量称为属性。我们可以认为它是某些性质。</li>
<li><strong>方法</strong>：类中的所有函数通称为方法。和函数不同的是，类中的函数需要至少一个参数
<code>self</code> 。函数无法单独使用，只能和类的对象一起使用。</li>
</ul>
<p>实际上，Python的所有变量都是对象，都具有对应的属性以及方法。</p>
<h2 id="类和对象">类和对象</h2>
<h3 id="类的定义">类的定义</h3>
<p>通过 <code>class</code> 关键字来实，格式如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Name</span>:<span class="comment">#不要忘记冒号,这一行称作类头,下面的两行称作类体</span></span><br><span class="line">    <span class="comment">#定义多个属性#</span></span><br><span class="line">    <span class="comment">#定义多个方法#</span></span><br><span class="line">    <span class="comment">#或者在方法中定义属性#</span></span><br></pre></td></tr></table></figure>
<p>类的实例化：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Class ClassName:</span><br><span class="line">    <span class="keyword">def</span> ...</span><br><span class="line">    <span class="comment">#Code#</span></span><br><span class="line">    </span><br><span class="line">object1=ClassName(Parameters)<span class="comment">#类的实例化，可赋值给一个变量</span></span><br></pre></td></tr></table></figure>
<p>比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">myclass</span>:</span><br><span class="line">	x=<span class="number">5</span></span><br><span class="line">p1=myclass()</span><br><span class="line"><span class="built_in">print</span>(p1.x)<span class="comment">#输出5</span></span><br></pre></td></tr></table></figure>
<p>Python允许空类的存在，和分支、循环和函数一样，空类中要使用关键字
<code>pass</code> 来防止报错。</p>
<h3 id="init__-方法"><code>__init__()</code> 方法</h3>
<p>在类中可以手动添加一个 <code>__init__()</code>
方法，它是一个特殊的类实例方法，称为构造方法或构造函数。构造方法用于创建对象时使用，每当创建一个类的实例对象时，Python解释器都会自动调用它。<code>__init__()</code>
方法必须包含一个名为 <code>self</code> 的参数作为它的第一个参数。注意
<code>__init__</code> 有四个下划线。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,number</span>):<span class="comment">#将值付给对象的属性</span></span><br><span class="line">        self.name=name</span><br><span class="line">        self.age=age</span><br><span class="line">        self.number=number</span><br><span class="line">        </span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;My name is &quot;</span>+self.name)</span><br><span class="line">p1=student(<span class="string">&quot;A&quot;</span>,<span class="number">19</span>,<span class="number">12345678</span>)<span class="comment">#传递参数，无需给self传参</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p1.name)</span><br><span class="line">p1.myfunc()</span><br></pre></td></tr></table></figure>
<p>如果上面的 <code>_init_()</code> 方法没有任何参数，像下面这样：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;involking construction method&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">myfunc</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;My name is &quot;</span>)</span><br><span class="line"></span><br><span class="line">p1=student()<span class="comment">#只定义一个对象p1</span></span><br></pre></td></tr></table></figure>
<p>运行后会报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TypeError: student.__init__() takes 0 positional arguments but 1 was given</span><br></pre></td></tr></table></figure>
<p>而只要加上 <code>self</code> 参数就可以正常输出
<code>involking construction method</code> ，这表明在创建对象
<code>p1</code> 时Python解释器会自动调用 <code>_init_()</code>
方法并且给其传入一个参数。（传入的是什么？）</p>
<p>当使用其他方法时，比如上面例子中的 <code>myfunc()</code> ，如果
<code>myfunc()</code> 的定义没有参数，那么运行后会报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TypeError: student.myfunc() takes 0 positional arguments but 1 was given</span><br></pre></td></tr></table></figure>
<p>这表明对于类中的除了构造方法的其他的每一个方法，使用它们的时候Python解释器都会自动给它们传入一个参数。</p>
<h3 id="self-参数基本介绍"><code>self</code> 参数基本介绍</h3>
<p>上面的 <code>self</code>
参数是对类的当前实例的引用，用于访问该类的变量。它不一定要命名为
<code>self</code>，但是它<strong>必须是类中任意函数的首个参数</strong>。不同的函数这一个参数可以不一样，比如上面的例子中，我们可以把
<code>_init_()</code> 函数的第一个参数改为 <code>abc</code> ，而把
<code>myfunc</code> 函数中的第一个参数改为 <code>xyz</code>.</p>
<h3 id="self-用法详解"><code>self</code> 用法详解</h3>
<p>上面提到 <code>self</code> 参数不一定要命名为
<code>self</code>，可以随便命名，其实常命名为 <code>self</code>
时约定俗成的一种习惯，并且它的名称self已经指明了这个参数的意义，赋予了程序更好的可读性。</p>
<p>同一个类可以产生多个对象，当某个对象调用类方法时，该对象会把自身的引用作为第一个参数自动传给该方法，换句话说，<strong>Python会自动绑定类方法的第一个参数指向该调用方法的对象</strong>。<code>self</code>
参数保证了每个对象<strong>只能调用自己的</strong>类变量和类方法。</p>
<p><code>self</code>
表示实际调用该方法的对象，无论是构造方法还是普通的类方法，实际是谁调用的它们，第一个参数
<code>self</code> 就代表了谁。</p>
<blockquote>
<p><code>self</code> 参数其实相当于C++中的 <code>this</code> 指针。</p>
</blockquote>
<p>如果用 <code>print</code> 函数输出
<code>self</code>，会输出该对象在计算机中存储的位置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;__main__.student object at 0x0000021C8EA0B670&gt;</span><br></pre></td></tr></table></figure>
<h3 id="类变量与实例变量">类变量与实例变量</h3>
<p>采用的例子：</p>
<ul>
<li><p>类体中、所有函数之外的范围内定义的变量叫做<strong>类属性或类变量</strong></p>
<p>类变量被所有类的实例化对象所共有。可以直接用类名或者类化对象调用类变量，同时也可以使用类名调用类变量来修改它的值，<strong>不能通过类对象修改类变量的值</strong>，因为通过类对象“修改类变量”并不是在修改它，而是定义新的<strong>实例变量</strong>。比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stu1=student()</span><br><span class="line">stu1.age=<span class="number">3</span><span class="comment">#这里本质上是给stu1对象添加了新的实例变量age</span></span><br><span class="line">stu2=student()</span><br><span class="line"><span class="built_in">print</span>(stu2.age)<span class="comment">#上面将stu1的age修改为3， 但是其他的类对象的age仍然是1</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line">stu1.gender=<span class="string">&quot;male&quot;</span><span class="comment">#添加实例变量，这个实例变量独属于stu1对象，其他对象无法调用</span></span><br></pre></td></tr></table></figure>
<p>通过类名修改类变量的值，会影响到所有的类对象。</p>
<p><strong>不推荐使用类对象来调用类变量</strong>，因为实例变量与类变量可以重名，此时无法使用类对象调用类变量而只能调用实例变量。</p></li>
<li><p>类体中，所有函数内部，以 <code>self.变量名1=变量名2/值</code>
的方式定义的变量就做<strong>实例属性或实例变量</strong>。</p>
<p>与类变量不同的是，实例变量<strong>不能通过类名调用</strong>，只能通过实例化对象调用。类对象只有调用了某方法，才能拥有该方法的实例变量，比如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stu=student()</span><br><span class="line"><span class="built_in">print</span>(stu.para)<span class="comment">#会报错，输出下面的语句</span></span><br><span class="line"><span class="comment">#AttributeError: &#x27;student&#x27; object has no attribute &#x27;para&#x27;</span></span><br><span class="line">stu.myfunc()</span><br><span class="line"><span class="built_in">print</span>(stu.para)<span class="comment">#上面的语句调用过myfunc()方法后可以输出0</span></span><br></pre></td></tr></table></figure>
<p>修改某个类对象的实例变量之后，不会影响其他的类对象，也不会影响与之重名的类变量。</p></li>
<li><p>类体中、所有函数内部以 <code>para_name=value</code>
的方式定义的变量称为<strong>局部变量</strong>。和C/C++一样，局部变量只能在函数内部使用。</p></li>
</ul>
<p>删除用 <code>del</code> 关键字。</p>
<h3 id="类方法静态方法和实例方法">类方法、静态方法和实例方法</h3>
<p>最简单的区分方式：<strong><em>使用</em> <code>@classmethod</code>
<em>修饰的方法为类方法，采用</em> <code>@staticmethod</code>
<em>修饰的方法为静态方法，其余方法为实例方法。</em></strong></p>
<p>实际编程中几乎用不到类方法和静态方法。</p>
<ul>
<li><p><strong>实例方法</strong>：通常情况下，在类中定义的方法默认为实例方法，类的构造方法也是实例方法，但是它稍微特殊一些。</p>
<p>实例方法必须要包含 <code>self</code>
参数来绑定调用此方法的类对象。</p>
<p><strong><em>两种调用方法</em></strong>，类名调用实例方法和类对象调用：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#方法一</span></span><br><span class="line">student.myfunc(stu1)<span class="comment">#需要手动传值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方法二</span></span><br><span class="line">stu1.myfunc()</span><br></pre></td></tr></table></figure>
<p>注意：用类名调用实例方法使Python并不会自动给self参数传值，需要手动传值（除非没有self参数），且传值的内容没有限制，比如下面传入了字符串：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">student.myfunc(<span class="string">&quot;zhangsan&quot;</span>)<span class="comment">#传入张三</span></span><br></pre></td></tr></table></figure></li>
<li><p><strong>类方法</strong>：前面用 <code>@classmethod</code>
修饰，必须包含 <code>cls</code> 参数（当然也可以不命名为
<code>cls</code>），用类名直接调用即可。</p></li>
<li><p><strong>静态方法</strong>：前面用 <code>@staticmethod</code>
修饰，类名与类对象都可调用。</p></li>
</ul>
<h4 id="动态增加实例方法">动态增加实例方法</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">method</span>():<span class="comment">#定义一个函数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Add new method!&quot;</span>)</span><br><span class="line">p1.method1=method<span class="comment">#格式:对象名.新方法名=前面定义的函数名</span></span><br><span class="line">p1.method1()<span class="comment">#调用后成功输出Add new method!</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>对于动态增加的方法，Python不会自动将方法调用者绑定到它们的第一个参数，因此程序必须手动为第一个参数传入参数值。</p>
</blockquote>
<p>如果我们定义的新方法有参数 <code>self</code> ，比如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">method</span>(<span class="params">self,content</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Add new method and output &quot;</span>+content)</span><br><span class="line">p1.method1=method<span class="comment">#格式:对象名.新方法名=前面定义的函数名</span></span><br><span class="line">p1.method1(p1,<span class="string">&quot;abcdefg&quot;</span>)<span class="comment">#这里要把p1作为参数手动传给self</span></span><br><span class="line"><span class="comment">#或者用lambda匿名函数</span></span><br><span class="line">p1.method2=<span class="keyword">lambda</span> self:<span class="built_in">print</span>(<span class="string">&quot;Add another method!&quot;</span>)</span><br><span class="line">p1.method2(p1)</span><br></pre></td></tr></table></figure>
<p>借助 <code>types</code> 模块下的
<code>MethodType</code>，我们可以直接将 <code>self</code>
参数与对象绑定，再使用方法时便无需给手动给 <code>self</code> 传参：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">method</span>(<span class="params">self,content</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Add new method and output &quot;</span>+content)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">from</span> types <span class="keyword">import</span> MethodType</span><br><span class="line">p1.method1=MethodType(method,p1)</span><br><span class="line"></span><br><span class="line">p1.method1(<span class="string">&quot;abcdefg&quot;</span>)<span class="comment">#这里无需写参数p1</span></span><br></pre></td></tr></table></figure>
<h2 id="继承">继承</h2>
<p>继承机制经常用于创建和现有类功能类似的新类。通过继承机制，可以轻松实现类的重复使用，避免了代码的复制粘贴。</p>
<h3 id="父类">父类</h3>
<p>任何类都可以作为父类，创建规则与创建其他类相同。下面是一个父类：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,fname,lname</span>):</span><br><span class="line">		self.firstname=fname</span><br><span class="line">        self.lastname=lname</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">printname</span>(<span class="params">self</span>):</span><br><span class="line">    	<span class="built_in">print</span>(self.self.firstname,self.lastname)</span><br></pre></td></tr></table></figure>
<h3 id="子类">子类</h3>
<p>根据上面的父类，创建子类：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="comment">#添加属性#</span></span><br><span class="line">    <span class="comment">#添加方法#</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>如果相比父类不做任何更改，在上面添加 <code>pass</code>
即可，此时子类继承了父类的所有属性与方法。</p></li>
<li><p>如果父类的某个方法的功能不能满足需求，可以在子类重写方法（方法名要与父类的该方法相同，类属性也有类似的操作），用新方法覆盖父类的方后，子类将不再继承父类的方法（或属性）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,fname,lname</span>):</span><br><span class="line">    	<span class="comment">#添加属性#</span></span><br><span class="line">    <span class="comment">#添加方法#</span></span><br><span class="line">    <span class="comment">#添加属性与添加方法的方式与前面介绍的相同#</span></span><br></pre></td></tr></table></figure>
<p>当子类中的某个方法覆盖了父类中同名的方法时，可以通过
<code>父类名.方法名(参数)</code> 来调用父类的这个方法。</p>
<p>如果还想继承，可以采用下面的方式：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,fname,lname</span>):</span><br><span class="line">    	Person.__init__(self,fname,lname)<span class="comment">#父类名.方法名(属性名)</span></span><br></pre></td></tr></table></figure>
<p>用 <code>super()</code> 函数可以让子类继承父类的所有属性与方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,fname,lname</span>):</span><br><span class="line">    	<span class="built_in">super</span>().__init__(fname,lname)<span class="comment">#和上面不同，这里无需加参数self，这样做可以不用使用父类名</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="多继承">多继承</h3>
<p>单继承：子类有且只能由一个父类。Python和C++都支持多继承。</p>
<p>当一个子类的多个父类含有相同名字的属性与方法时，排在前面的父类会覆盖排在后面的父类的同名的属性与方法。</p>
<p><strong>不建议使用多继承。</strong></p>
<h2 id="迭代器">迭代器</h2>
<p>迭代器是一种可迭代的对象。</p>
<p>字符串、列表、元组、字典和集合都是<strong>可迭代的对象</strong>，我们可以从中获取<strong>迭代器</strong>。</p>
<p><code>iter()</code> 方法返回一个迭代器：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&quot;1234567&quot;</span></span><br><span class="line">it=<span class="built_in">iter</span>(<span class="built_in">str</span>)</span><br><span class="line"><span class="built_in">print</span>(it)<span class="comment">#输出迭代器对象的地址:</span></span><br><span class="line"><span class="comment">#&lt;str_iterator object at 0x0000028B1455BFA0&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(it))<span class="comment">#输出it的数据类型:</span></span><br><span class="line"><span class="comment">#&lt;class &#x27;str_iterator&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>next()</code>
方法返回容器内的下一个元素，两个参数，第一个参数为迭代器，第二个参数可以不设置，其作用是在没有此参数且没有下一个元素的时候抛出
<code>StopIteration</code> 异常;
设置第二个参数时会返回该参数（称为默认值default）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#接上</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it))<span class="comment">#输出1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">next</span>(it))<span class="comment">#输出2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    x=<span class="built_in">next</span>(it,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(x)</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="string">&#x27;a&#x27;</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment">#输出 1 2 3 4 5 6 7 a (字符之间实际为换行)</span></span><br></pre></td></tr></table></figure>
<h4 id="创建迭代器">创建迭代器</h4>
<p>可迭代的对象必须要含有 <code>__iter__()</code> 方法和
<code>__next__</code> 方法：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Numbers</span>:</span><br><span class="line">    def __iter__(self):</span><br><span class="line">        self.a=<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line">    def __next__(self):</span><br><span class="line">        <span class="keyword">if</span> self.a&lt;<span class="number">20</span>:</span><br><span class="line">            self.a+=<span class="number">1</span></span><br><span class="line">            x=self.a</span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            raise StopIteration</span><br><span class="line"></span><br><span class="line">num=<span class="built_in">Numbers</span>()</span><br><span class="line">it=<span class="built_in">iter</span>(num)</span><br><span class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">next</span>(it,<span class="string">&quot;a&quot;</span>))</span><br></pre></td></tr></table></figure>
<h2 id="正则表达式">正则表达式</h2>
<h2 id="一些报错">一些报错</h2>
<p>不想再单独写一篇文章记录了，随手记下来吧。</p>
<p>1：频繁报错下面内容，常常在复制粘贴别处代码后出现：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Inconsistent use of tabs and spaces in indentationPylance</span><br></pre></td></tr></table></figure>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/1662885014516.png" /></p>
<p>混用了Tab键和Space键的缩进（表面看上去毫无问题啊，就算删掉全部换成Tab也还是会报错……不知道具体原因是什么）</p>
<p>两种解决方法：</p>
<p>1）前面缩进正常的部分的前面的空格复制粘贴到报错的部分。</p>
<p>2）全选Shift+Tab，再把需要Tab的地方进行缩进。（有点麻烦</p>
<p>2:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;int&#x27; object is not callable</span><br></pre></td></tr></table></figure>
<p>上面的报错内容一般是函数名和变量名重复了。需要注意的是，若函数名为
<code>f</code> 而变量名为 <code>F</code>
(即相同字母的大小写)，也有可能报上述错误。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>Python入门(1):基础用法</title>
    <url>/2022/08/25/python/Python1/</url>
    <content><![CDATA[<h2 id="编译型语言和解释型语言">编译型语言和解释型语言</h2>
<ul>
<li>有的编程语言要求必须将所有源代码一次性转换成二进制指令，也就是可执行程序，比如
C、C++、Golang、汇编语言等都属于编译型语言，使用的转换器叫做<strong>编译器</strong>。</li>
<li>有的编程语言可以一边执行一边转换，需要那些源代码就转换哪些源代码，不会生成可执行程序，比如Python、JavaScript、PHP和Shell等，这类编程语言称为解释型语言，使用的转换器称为<strong>解释器</strong>。</li>
</ul>
<p>编译器和解释器简单来说都是翻译工具。</p>
<span id="more"></span>
<p><strong>编译型语言特点</strong>：</p>
<ul>
<li><p>拥有可执行程序后可以随时运行，不需要重新编译，即“一次编译，无限次运行”，因此编译型语言可以脱离开发环境运行（什么是开发环境？）；</p></li>
<li><p>编译型语言通常是不能跨平台的，也就是不能再不同的操作系统之间随意切换。不能跨平台表现在两方面：</p>
<p>1：<strong>可执行程序不能跨平台</strong>。不同的操作系统对可执行程序的内部结构有着截然不同的要求，彼此之间不能兼容；</p>
<blockquote>
<p>相同的也可能不行，比如x64程序不能在x86平台上运行。</p>
</blockquote>
<p>2：<strong>源代码不能跨平台</strong>。不同平台支持的函数、类型、变量等可能都不同，基于某个平台编写的源代码一般不能拿到另一平台上直接运行。比如在C中，Windows中的
<code>Sleep()</code> 函数在 Linux下是 <code>sleep()</code>
，且前者单位为毫秒，后者单位为秒。Windows 64位和Linux中C的
<code>long</code> 类型占用的字节分别为 4 和 8 。</p>
<blockquote>
<p>所以编译型语言的主要缺点就是可移植性差。</p>
</blockquote></li>
</ul>
<p><strong>解释型语言特点：</strong></p>
<ul>
<li>效率较编译型语言低。因此底层功能常用C/C++，而应用层面才会用解释型语言。</li>
<li>运行解释性语言时，我们始终都需要源代码和解释器，因此它无法脱离开发环境。</li>
<li>“一次编写，到处运行”。在不同的平台下，解释器会将相同的源代码转化为不同的机器码，解释器帮助我们屏蔽了不同平台之间的差异性。</li>
</ul>
<h2 id="模块和包">模块和包</h2>
<p>可以类比为C/C++中的头文件，但与头文件不同的是，任何python程序都可以作为其他python程序的模块。用
<code>import</code> 关键字可以引入一个模块。比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>()</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line"><span class="comment">#上述文件命名为hello.py,与下面的名为say.py的文件放置在同一目录下</span></span><br><span class="line"><span class="keyword">import</span> hello</span><br><span class="line">hello.say()</span><br><span class="line"><span class="comment">#会输出hello</span></span><br></pre></td></tr></table></figure>
<p>这里面 <code>hello.py</code>
实际上就是一个自定义的模块，调用模块中的函数时，语法为
<code>模块名.函数名</code> 。</p>
<h2 id="基础语法">基础语法</h2>
<p>1：无需加分号。</p>
<p>2：注意缩进：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">5</span>&gt;<span class="number">2</span></span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line"><span class="comment">#注意下面的语句会报错</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">5</span>&gt;<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>3：没有声明变量的命令。</p>
<p>4：字符串用 <code>''</code> 和 <code>""</code> 都可以。</p>
<p>5：变量命名规则同 MATLAB。</p>
<p>6：一行中多个变量赋值：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a,b,c=<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>7：两个字符串拼接用
<code>+</code>（文本与变量、变量与变量之间都可），数字之间用
<code>+</code> 是正常运算：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=world</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello &quot;</span>+a)<span class="comment">#会输出hello world</span></span><br><span class="line"><span class="built_in">print</span>(a+a)<span class="comment">#会输出worldworld</span></span><br></pre></td></tr></table></figure>
<p>8：函数，用关键字 <code>def</code> 即可，注意缩进：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>()</span><br><span class="line">	......</span><br></pre></td></tr></table></figure>
<p>9：全局变量与局部变量同C/C++。在函数内部创建全局变量用
<code>global</code> 关键字，在函数内部修改全局变量需要加上
<code>global</code> 关键字：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="string">&#x27;a&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>()</span><br><span class="line">	<span class="keyword">global</span> x</span><br><span class="line"> 	x=<span class="string">&#x27;b&#x27;</span></span><br><span class="line"> 	<span class="built_in">print</span>(x)</span><br><span class="line">myfunc()<span class="comment">#输出b</span></span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#输出b</span></span><br></pre></td></tr></table></figure>
<p>10: 输入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">input</span>(<span class="string">&quot;一些描述&quot;</span>)</span><br></pre></td></tr></table></figure>
<p><code>input()</code>
函数默认返回字符串，如果使用输入的数字，需要用对应的类型进行转换：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">x=<span class="built_in">float</span>(<span class="built_in">input</span>())</span><br></pre></td></tr></table></figure>
<h2 id="数据类型">数据类型</h2>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">类型</th>
<th style="text-align: center;">类型</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">文本类型</td>
<td style="text-align: center;"><code>str</code></td>
</tr>
<tr class="even">
<td style="text-align: center;">数值类型</td>
<td style="text-align: center;"><code>int</code>, <code>float</code>,
<code>complex</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;">序列类型</td>
<td style="text-align: center;"><code>list</code>, <code>tuple</code>,
<code>range</code></td>
</tr>
<tr class="even">
<td style="text-align: center;">映射类型</td>
<td style="text-align: center;"><code>dict</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;">集合类型</td>
<td style="text-align: center;"><code>set</code>,
<code>frozenset</code></td>
</tr>
<tr class="even">
<td style="text-align: center;">布尔类型</td>
<td style="text-align: center;"><code>bool</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;">二进制类型</td>
<td style="text-align: center;"><code>bytes</code>,
<code>bytearray</code>, <code>memoryview</code></td>
</tr>
</tbody>
</table>
<p>1：用 <code>type()</code> 获得数据类型。</p>
<p>2：指定数据类型时可以用 <code>x=name(content)</code>，如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=<span class="built_in">str</span>(”hello world“)</span><br></pre></td></tr></table></figure>
<p>3：复数 <code>complex</code> 用 <code>j</code> 作为虚部。</p>
<p>4：用 <code>int(data)</code>, <code>flaot(data)</code>,
<code>complex(data)</code>
进行数据类型转换，注意无法将复数转化为其他类型的数据。</p>
<p>5：<code>bool()</code> 也可以用来评判数据为 <code>True</code> 还是
<code>False</code>，除空字符 <code>"" ''</code> 、<code>0</code>
和空列表 <code>(),[],&#123;&#125;</code> 外，<code>bool()</code> 总是返回
<code>True</code> .</p>
<h3 id="字符串">字符串</h3>
<p>1：用三个引号可以将多行字符串赋值给变量，单引号与双引号均可：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">&quot;&quot;&quot;aa</span></span><br><span class="line"><span class="string">bb</span></span><br><span class="line"><span class="string">cc&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a)<span class="comment">#换行符会被保留</span></span><br></pre></td></tr></table></figure>
<p>2：Python中的字符串是表示unicode字符的字节数组，但是python不像 C/C++
那样有字符类型，单个字符就是长度为1的字符串。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">1</span>])<span class="comment">#输出b</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">2</span>:<span class="number">5</span>])<span class="comment">#输出cdef</span></span><br><span class="line"><span class="built_in">print</span>(a[-<span class="number">5</span>:-<span class="number">2</span>])<span class="comment">#输出cde,输出的字符的范围为左闭右开区间</span></span><br><span class="line"><span class="built_in">print</span>(a[-<span class="number">3</span>])<span class="comment">#输出倒数第三个字母</span></span><br></pre></td></tr></table></figure>
<p>3：字符串的内置方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=<span class="string">&quot; abcdefg &quot;</span></span><br><span class="line">a.strip()<span class="comment">#删除开头和结尾的空白字符</span></span><br><span class="line">a.lower<span class="comment">#返回小写的字符串</span></span><br><span class="line">a.upper<span class="comment">#返回大写的字符串</span></span><br><span class="line">a.replace(<span class="string">&quot;要替换的部分&quot;</span>,<span class="string">&quot;用来替换的部分&quot;</span>)<span class="comment">#replace()方法是用另一字符串来替换字符串，对长度无要求</span></span><br><span class="line">a.split(<span class="string">&quot;分隔符&quot;</span>)<span class="comment">#根据分隔符输出每一部分，分隔符是自己定义的</span></span><br></pre></td></tr></table></figure>
<p>不能直接用 <code>+</code> 组合字符串和数字，但是可以用
<code>format()</code> 方法。<code>format()</code>
方法接受传递的参数，格式化它们并且将它们放在占位符 <code>&#123;&#125;</code>
所在的字符串中：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&quot;I am &#123;&#125; years old&quot;</span></span><br><span class="line">age=<span class="number">19</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.<span class="built_in">format</span>(age))<span class="comment">#输出I am 19 years old</span></span><br></pre></td></tr></table></figure>
<p>4：一些关键词</p>
<p>可以用 <code>in</code> 或者是 <code>not in</code>
来判断字符串种是否存在特定短语或字符。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&quot;China is a great country&quot;</span></span><br><span class="line">x=<span class="string">&quot;ina&quot;</span> <span class="keyword">in</span> <span class="built_in">str</span></span><br><span class="line"><span class="built_in">print</span>(x)<span class="comment">#会输出布尔类型的值</span></span><br></pre></td></tr></table></figure>
<p>5：一些函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">len</span>(<span class="built_in">str</span>)<span class="comment">#获得str的长度</span></span><br></pre></td></tr></table></figure>
<h2 id="运算符">运算符</h2>
<p>很多运算符与C/C++几乎都一样，下面是一些特别的例子：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">运算符</th>
<th style="text-align: center;">名称</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>**</code></td>
<td style="text-align: center;">幂</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>//</code></td>
<td style="text-align: center;">整除</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>is, is not</code></td>
<td
style="text-align: center;">身份运算符，判断两个变量是否为同一个对象</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>and, or, not</code></td>
<td style="text-align: center;">逻辑运算符</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>in, not in</code></td>
<td
style="text-align: center;">成员运算符，用于测试序列是否在对象中出现</td>
</tr>
</tbody>
</table>
<h2 id="一些数据结构">一些数据结构</h2>
<h3 id="列表">列表</h3>
<p>列表很像STL中的
<code>vector</code>，是有序且可以更改的集合。可以代替C/C++中的数组。</p>
<p>1：创建列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">list2=[<span class="string">&quot;ab&quot;</span>,<span class="string">&quot;bc&quot;</span>,<span class="string">&quot;ac&quot;</span>]</span><br><span class="line">list3=<span class="built_in">list</span>((<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;bb&quot;</span>,<span class="string">&quot;cc&quot;</span>))<span class="comment">#注意有两对括号</span></span><br></pre></td></tr></table></figure>
<p>输出 <code>list1</code> 和 <code>list2</code>
会将元素连同方括号与引号都输出，同时只会输出单引号。</p>
<p>2：索引与字符串（数组）的索引规则相同。利用索引可以更改特定项目的值。</p>
<p>3：可以用 <code>in</code>
关键字。包括后面的元组、集合和字典都可以使用该关键字用来判断某个元素是否在其中。</p>
<p>4：可以用 <code>len()</code>
函数。包括后面的元组、集合和字典都可以用该函数求出它的长度/元素个数。</p>
<p>5：增：</p>
<ul>
<li>用 <code>insert(loc, element)</code> 将 <code>element</code>
插入作为第 <code>loc+1</code> 个位置；</li>
<li><code>append(element)</code> 方法在列表的末尾增添元素
<code>element</code>；同样也能添加另一个列表</li>
</ul>
<p>6：删：</p>
<ul>
<li><code>remove(element)</code> 方法删除指定的项目
<code>element</code>；</li>
<li><code>pop(num)</code>
方法删除指定的索引，若未指定索引，则删除最后一项；</li>
<li><code>del list1[num]</code> 删除指定的索引；</li>
<li><code>del list1</code>
删除整个列表（删除后使用该变量会报错：<code>NameError: name 'list1' is not defined.</code>）；</li>
<li><code>clear()</code> 方法清空列表得到空列表。</li>
</ul>
<p>7：复制列表</p>
<ul>
<li>直接赋值：<code>list2=list1</code></li>
<li>用 <code>copy()</code> 方法： <code>list2=list1.copy()</code></li>
<li>用 <code>list()</code> 构造函数：
<code>list2=list(list1)</code></li>
</ul>
<p>8：合并列表</p>
<ul>
<li>用运算符 <code>+</code></li>
<li>用 <code>extend()</code> 方法：
<code>list2.extend(list1)</code></li>
</ul>
<h3 id="元组">元组</h3>
<p>元组是有序且不可更改的集合，因此也就不能增删补以及拷贝赋值。</p>
<p>1：创建</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tuple1=(<span class="string">&quot;apple&quot;</span>,)<span class="comment">#必须要加逗号，否则不能被识别为元组，而会被识别为字符串</span></span><br><span class="line">tuple2=(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>)</span><br><span class="line">tuple3=(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<p>若</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tuple0=(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tuple2))</span><br><span class="line"><span class="comment">#会输出&lt;class &#x27;str&#x27;&gt;</span></span><br></pre></td></tr></table></figure>
<p>2：索引与字符串（数组）的索引规则相同。只能利用索引访问元的值。如果想要更改元组中的值，可以把元组转化成列表（用
<code>list()</code> ），再用 <code>tuple()</code> 转化为元组。</p>
<p>3：不能删除元组中的项目，但是可以用 <code>del</code>
关键字删除元组。效果同列表。</p>
<p>4：常用方法：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">方法</th>
<th style="text-align: center;">描述</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>count()</code></td>
<td style="text-align: center;">返回元组中指定值出现的次数</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>index()</code></td>
<td style="text-align: center;">在元组中搜索指定的值并返回它的下标</td>
</tr>
</tbody>
</table>
<p>5：合并只能用 <code>+</code>。</p>
<p>6：和列表一样可以用 <code>tuple()</code> 构建元组。</p>
<h3 id="集合">集合</h3>
<p>1：集合是无序的，不能像前面三种结构那样用下标进行索引，只能遍历或用关键字
<code>in</code>。</p>
<p>2：集合中的元素无法更改，但是可以增加新元素。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set1=&#123;<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>&#125;<span class="comment">#也可以用set()构造集合，类似于前面的数据类型</span></span><br><span class="line"><span class="comment">#set1=set((&quot;1&quot;,&quot;2&quot;,&quot;3&quot;))</span></span><br><span class="line">set1.add(<span class="string">&quot;4&quot;</span>)<span class="comment">#在集合中添加一项</span></span><br><span class="line">set1.upsate([<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>])<span class="comment">#在集合中添加多个元素，要用中括号</span></span><br></pre></td></tr></table></figure>
<p>3：也可以删除元素。用 <code>remove()</code> 方法或者
<code>discard()</code> 方法来删除指定元素，括号内填写要删除的元素；用
<code>pop()</code> 方法来删除随机元素并返回删除的元素；
<code>clear()</code>
方法删除集合中的所有元素得到空集合；<code>del</code>
关键字删除集合。</p>
<p>如果要删除的项目不存在， 用 <code>remove()</code> 会报错，而
<code>discard()</code> 不会（不会输出任何信息）。</p>
<p>4： <code>union()</code>
方法返回两个集合的并集，<code>update()</code>
方法可以将一个集合中的元素插入到另一个集合中（得到的也是并集，会直接赋值给使用该方法的集合）。</p>
<h3 id="字典">字典</h3>
<p>1：创建。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict1=&#123;</span><br><span class="line">key1: value1,</span><br><span class="line">key2: value2,</span><br><span class="line">key3: value3,</span><br><span class="line">...</span><br><span class="line">&#125;<span class="comment">#key只能为字符串,注意逗号</span></span><br><span class="line">dict1=<span class="built_in">dict</span>(key1=value1,key2=value2,...)<span class="comment">#注意用等号而不是冒号</span></span><br></pre></td></tr></table></figure>
<p>2：访问。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x=dict1[key1]</span><br><span class="line">x=dict1.get(key1)</span><br><span class="line">dict1[key1]=value4<span class="comment">#将key1对应的值更为value4</span></span><br></pre></td></tr></table></figure>
<p>3：循环遍历字典返回key，用 <code>values()</code> 方法返回value，用
<code>items()</code> 方法遍历 key 和 value（需要两个循环变量）。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> x,y <span class="keyword">in</span> dict1.items()</span><br><span class="line">	<span class="built_in">print</span>(x,y)</span><br></pre></td></tr></table></figure>
<p>4：删。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict1.pop(key1)<span class="comment">#pop()方法删除指定key的item</span></span><br><span class="line">dict1.popitem()<span class="comment">#popitem()方法删除最后一项</span></span><br><span class="line"><span class="keyword">del</span> dict1[key1]<span class="comment">#del关键字也可以删除指定key的item,同时也可以删除整个字典</span></span><br><span class="line">dict1.clear()<span class="comment">#清空字典</span></span><br></pre></td></tr></table></figure>
<p>5：复制字典。</p>
<p><code>dict2=dict1</code> 表示 <code>dict2</code> 是
<code>dict1</code> 的引用，更改 <code>dict1</code> 也会造成
<code>dict2</code> 的更改 ，复制的正确方法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dict2=dict1.copy()</span><br><span class="line">dict2=<span class="built_in">dict</span>(dict1)</span><br></pre></td></tr></table></figure>
<h2 id="分支与循环">分支与循环</h2>
<h3 id="分支">分支</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> b&gt;a: <span class="built_in">print</span>(<span class="string">&quot;b&gt;a&quot;</span>)</span><br><span class="line"><span class="comment">#   </span></span><br><span class="line"><span class="keyword">if</span> b&gt;a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b&gt;a&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:<span class="comment">#不要忘记冒号</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b&lt;=a&quot;</span>)</span><br><span class="line"><span class="comment">#    </span></span><br><span class="line"><span class="keyword">if</span> b&gt;a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b&gt;a&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> b==a:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b==a&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b&lt;a&quot;</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;b&gt;a&quot;</span>) <span class="keyword">if</span> b&gt;a <span class="keyword">else</span> <span class="built_in">print</span>(<span class="string">&quot;b&lt;=a&quot;</span>)<span class="comment">#语句放在前面单行执行</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">if</span> b&gt;a:</span><br><span class="line">	<span class="keyword">pass</span><span class="comment">#空的语句会报错,用pass来避免</span></span><br></pre></td></tr></table></figure>
<h3 id="循环">循环</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#while循环</span></span><br><span class="line"><span class="keyword">while</span> condition:</span><br><span class="line">	<span class="comment">#code</span></span><br><span class="line"><span class="comment">#for循环:用于遍历序列,包括list,tuple,set,dict和string</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> list1:</span><br><span class="line">	<span class="comment">#code</span></span><br><span class="line"><span class="comment">#range()函数返回一个数字序列,且默认从0开始</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):<span class="comment">#x范围为0到9</span></span><br><span class="line">	<span class="comment">#code</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="number">10</span>):<span class="comment">#x范围为左闭右开区间,即x属于与3~9</span></span><br><span class="line">	<span class="comment">#code</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="number">50</span>,<span class="number">6</span>):<span class="comment">#第三个参数指定增量</span></span><br><span class="line">	<span class="comment">#code</span></span><br><span class="line"><span class="comment">#最后加一句else可以在循环结束时执行一些语句</span></span><br><span class="line"><span class="comment">#和if一样同样可以用pass</span></span><br></pre></td></tr></table></figure>
<p>C/C++中的 <code>break</code> 和 <code>continue</code>
在Python中依然可以用。</p>
<h2 id="函数">函数</h2>
<p>1：默认参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">country=<span class="string">&quot;China&quot;</span></span>):<span class="comment">#默认参数用=</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;I am from &quot;</span>+country)</span><br><span class="line"></span><br><span class="line">myfunc()<span class="comment">#调用不带参数的函数时使用默认参数</span></span><br><span class="line">myfunc(<span class="string">&quot;England&quot;</span>)<span class="comment">#调用的函数有参数时使用该参数</span></span><br></pre></td></tr></table></figure>
<p>2：参数传入函数后数据类型不变。</p>
<p>3：关键字参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc3</span>(<span class="params">child3,child1,child2</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The youngest children is &quot;</span>+child3)</span><br><span class="line"></span><br><span class="line">myfunc3(child1=<span class="string">&quot;a&quot;</span>,child2=<span class="string">&quot;b&quot;</span>,child3=<span class="string">&quot;c&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>在调用时指定参数的值，无需考虑顺序。</p>
<p>4：任意参数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfunc</span>(<span class="params">*kids</span>)<span class="comment">#加上*表明参数数目未知</span></span><br><span class="line">	<span class="built_in">print</span>(kids[<span class="number">2</span>])<span class="comment">#此时可以把kids当作tuple</span></span><br><span class="line">myfunc(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)<span class="comment">#调用后输出3</span></span><br></pre></td></tr></table></figure>
<p>函数将接受一个类型为tuple的参数，并可以用它的索引方式访问元素。</p>
<h3 id="lambda匿名函数">lambda匿名函数</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">函数名=<span class="keyword">lambda</span> 参数:表达式</span><br></pre></td></tr></table></figure>
<p>比如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f=<span class="keyword">lambda</span> x,y:x+y<span class="comment">#多个参数时加逗号</span></span><br><span class="line"><span class="built_in">print</span>(f(<span class="number">2</span>,<span class="number">3</span>))<span class="comment">#输出5</span></span><br></pre></td></tr></table></figure>
<p>或者用在 <code>return</code> 语句中：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfun4</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> a:a*n<span class="comment">#类似于一个“嵌套函数”</span></span><br><span class="line">subfunc=myfun4(<span class="number">2</span>)用myfunc4定义一个新的函数</span><br><span class="line"><span class="built_in">print</span>(subfunc(<span class="number">2</span>))</span><br></pre></td></tr></table></figure>
<p>但是如果：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">myfun4</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> a:a*n</span><br><span class="line"><span class="built_in">print</span>(myfun4(<span class="number">2</span>))</span><br></pre></td></tr></table></figure>
<p>参数数量不够，会输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;function myfun4.&lt;locals&gt;.&lt;lambda&gt; at 0x000001E7B43AEEF0&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
  </entry>
  <entry>
    <title>有效不等式与强有效不等式</title>
    <url>/2023/07/24/OR/int-prop/valid-inequation/</url>
    <content><![CDATA[<p>设 <span class="math inline">\(X\)</span> 为单纯形与 <span
class="math inline">\(\mathbb{Z}\)</span>
的交集，定义其<strong>有效不等式</strong>为不等式 <span
class="math inline">\(\lambda^Tx\le \lambda_0\)</span> 满足 <span
class="math inline">\(\forall x\in X,\lambda^Tx\le
\lambda_0\)</span>。设 <span
class="math inline">\(\mathrm{conv}(X)\)</span> 表示 <span
class="math inline">\(X\)</span>
的凸包，显然凸包的某个方向的任意边界都是一个有效不等式。</p>
<h2 id="chvatal-gomory方法">Chvatal-Gomory方法</h2>
<p>Chvatal-Gomory方法（简称C-G方法）用于产生有效不等式。对于 <span
class="math inline">\(X=\{x:Ax\le b,x\in\mathbb{Z}^{n}_+\}\)</span>,
考虑 <span class="math inline">\(P=\{x\in\mathbb{R}^n_+:Ax\le
b\}\)</span>, 先构造 <span class="math inline">\(P\)</span>
的有效不等式，按照下面的步骤：</p>
<ol type="1">
<li>选择权值向量 <span
class="math inline">\(\mu\in\mathbb{R}^m_+\)</span>，则 <span
class="math inline">\(P\)</span>
中的不等式的线性组合即为其有效不等式，为</li>
</ol>
<p><span class="math display">\[
\sum_{j=1}^n\mu^Ta_jx_j\le\mu^Tb
\]</span></p>
<p>其中 <span class="math inline">\(A\in\mathbb{R}^{m\times
n}=(a_1,\cdots,a_n)\)</span>.</p>
<ol start="2" type="1">
<li>根据下取整的性质以及 <span class="math inline">\(x\)</span>
的正性，可以将上面有效不等式的系数做一个下取整，就有</li>
</ol>
<p><span class="math display">\[
\sum_{j=1}^n\lfloor\mu^Ta_j\rfloor x_j\le\mu^Tb
\]</span></p>
<ol start="3" type="1">
<li>由于不等式的左侧是整数，因此就有</li>
</ol>
<p><span class="math display">\[
\sum_{j=1}^n\lfloor\mu^Ta_j\rfloor x_j\le\lfloor\mu^Tb\rfloor
\]</span></p>
<p>这就是 <span class="math inline">\(X\)</span> 的一个有效不等式。</p>
<h2 id="gomory割平面法">Gomory割平面法</h2>
<p>在求出整数规划对应的线性松弛问题的解之后,
若线性松弛问题的最优解都是整数, 那么该最优解就是整数规划的最优解.
下面讨论最优解不全为整数的情况. Gomory 割平面法的思想是,
当得到的线性松弛问题的最优解不全是整数时,
想办法添加新的约束条件把该最优解排除,
而不把约束集中的原整数可行解排除(将最优解割掉).</p>
<p><strong>Gomory割平面实际上就是有效不等式.</strong></p>
<p>不妨设线性松弛问题的最优解的基在前 <span
class="math inline">\(m\)</span> 列, 即最优解可以写成 <span
class="math inline">\(\hat{x}=[b^T,0]^T\)</span> 形式. 假设 <span
class="math inline">\(b_i\)</span> 不是整数, 首先由约束条件得: <span
class="math display">\[
x_i+\sum_{j=m+1}^{n}a_{ij}x_{j}=b_i\tag{i}
\]</span> 由于 <span class="math inline">\(x\ge 0,\)</span> 故 <span
class="math display">\[
x_i+\sum_{j=m+1}^{n}\lfloor a_{ij}\rfloor x_{j}\le
x_i+\sum_{j=m+1}^{n}a_{ij}x_{j}=b_i
\]</span> 在要求解为整数的前提下, 上式左边向下取整之后不发生变化,
于是不等式两边同时向下取整就有 <span class="math display">\[
x_i+\sum_{j=m+1}^{n}\lfloor a_{ij}\rfloor x_{j}\le \lfloor b_i\rfloor
\tag{ii}
\]</span> <span class="math inline">\(\rm (i)-(ii),\)</span> 有 <span
class="math display">\[
\sum_{j=m+1}^n (a_{ij}-\lfloor a_{ij}\rfloor)x_j\ge b_i-\lfloor
b_{i}\rfloor\tag{iii}
\]</span> 由于 <span class="math inline">\(b_i\notin
\mathbb{Z},\)</span> 则 <span class="math inline">\(b_i-\lfloor
b_{i}\rfloor&gt;0,\)</span> 而显然 <span
class="math inline">\(\hat{x}\)</span> 不符合该 <span
class="math inline">\(\rm (iii)\)</span> , 因为代入 <span
class="math inline">\(\hat{x}\)</span> 之后左边为 <span
class="math inline">\(0\)</span> 而右边是一个大于 <span
class="math inline">\(0\)</span> 的数,
而对于原线性松弛问题的所有的整数可行解, 它们满足上述讨论的每一步的约束,
那么它们自然满足 <span class="math inline">\(\rm (iii),\)</span>
于是约束 <span class="math inline">\(\rm (iii)\)</span> 就称为 Gomory
割平面, 把它添加到原线性松弛问题中继续求解,
直到新得到的最优解所有的分量都为整数.</p>
<p>添加新的变量把 Gomory 割平面写成标准形式: <span
class="math display">\[
\sum_{j=m+1}^n (a_{ij}-\lfloor a_{ij}\rfloor)x_j-x_{n+1}= b_i-\lfloor
b_{i}\rfloor
\]</span> 需要注意的是, 新添加的变量并不是我们想要的变量,
它无需是整数.</p>
<p>如果最优解不在前 <span class="math inline">\(m\)</span> 列,
设最优解/基变量对应的下标集为 <span class="math inline">\(I,\)</span>
非基变量对应的下标集为 <span class="math inline">\(J,\)</span> 则 Gomory
割平面为: <span class="math display">\[
\sum_{j\in J} (a_{ij}-\lfloor a_{ij}\rfloor)x_j-x_{n+1}= b_i-\lfloor
b_{i}\rfloor
\]</span> 其中 <span class="math inline">\(i\in I,\)</span> 且满足 <span
class="math inline">\(\hat{x}_i\not\in \mathbb{Z},\)</span> 其中 <span
class="math inline">\(\hat{x}_i\)</span> 为 IP
对应的线性松弛问题最优解中的不是整数的那个.</p>
<p>如果有多个解不是整数, 可以选择每次只添加一个割平面,
也可以将所有的割平面添加进去.</p>
<h2 id="混合整数割">混合整数割</h2>
<p>上文的割平面适用于严格的整数规划问题, 对于混合整数规划问题,
它的约束集一般表述为 <span
class="math inline">\(\{x\in\mathbb{Z}_+^n,y\in\mathbb{R}_+^p:Ax+Gy\le
b,b\in\mathbb{R}^m\}\)</span>, 此时的有效不等式/割平面要复杂一些. 记记号
<span
class="math inline">\(\tilde{\cdot}=\cdot-\lfloor\cdot\rfloor\)</span>.</p>
<p><strong>定理1</strong> 设 <span
class="math inline">\(X=\left\{x\in\mathbb{Z}_+^n,y\in\mathbb{R}_+^p:\sum_{j\in
[n]}a_jx_j+\sum_{j\in[p]}g_jy_j\le
b,a_j,g_j,b\in\mathbb{R}\right\}\)</span>, 它的有效不等式为 <span
class="math display">\[
\sum_{j\in[n]}\lfloor a_j\rfloor x_j+\frac{1}{1-\tilde{b}}\sum_{j\in
J^-}g_jy_j\le \lfloor b\rfloor
\]</span> 其中 <span class="math inline">\(J^{-}=\{j\in
[p]:g_j&lt;0\}\)</span>, 同时该有效不等式为 <span
class="math inline">\(\mathrm{conv}(X)\)</span>的一个刻面.</p>
<p><strong>定理2</strong>
设通过单纯形法求解混合整数线性规划的最优解时得到的单纯形表中描述整数基变量
<span class="math inline">\(y_{B_u}\)</span> 的等式约束为 <span
class="math inline">\(X^{(B_u)}=\left\{y_{B_u}\in\mathbb{Z},x\in\mathbb{Z}_+^{n_1},y\in\mathbb{R}_+^{n_2}:y_{B_u}+\sum_{j\in
N_1}\bar{a}_{uj}y_j+\sum_{j\in N_2}\bar{a}_{uj}x_j\le
\bar{a}_{u0},\right\}\)</span>, <span class="math inline">\(N_2\)</span>
为整数非基变量下标集, <span class="math inline">\(N_2\)</span>
为实数非基变量的下标集, 那么 <span
class="math inline">\(X^{(B_u)}\)</span> 的有效不等式为 <span
class="math display">\[
\left(\sum_{\tilde{a}_j\le
\tilde{a}_0}\tilde{a}_jy_j+\sum_{\tilde{a}_j&gt;\tilde{a}_j}\frac{\tilde{a}_0(1-\tilde{a}_0)}{1-\tilde{a}_0}y_j\right)+\left(\sum_{\bar{a}_{uj}&gt;0}\bar{a}_{uj}x_j+\sum_{\bar{a}_{uj}&lt;0}\frac{\tilde{a}_0}{1-\tilde{a}_0}\bar{a}_{uj}x_j\right)
\ge \tilde{a}_0
\]</span> 这是所谓的Gomory混合整数割(平面).</p>
<blockquote>
<p>证明上述定理仅需要通过分类讨论, 取整函数的性质和不等式的基本性质即可,
要证明构造的有效不等式为凸包的刻面, 还需要找到 <span
class="math inline">\(n+p\)</span>
个仿射无关的点使有效不等式等号成立(在有效不等式平面上).</p>
</blockquote>
<h2 id="多面体理论与强有效不等式">多面体理论与强有效不等式</h2>
]]></content>
      <categories>
        <category>组合优化与整数规划</category>
      </categories>
  </entry>
  <entry>
    <title>Benders&#39; Algorithm</title>
    <url>/2023/08/06/OR/int-prop/benders/</url>
    <content><![CDATA[<p>解决混合整数规划问题 <span
class="math inline">\(Z=\max\{cx+hy:Fx+Gy\le d,x\in X\subset
\mathbb{Z}^n_+,y\in\mathbb{R}_+^p\}\)</span>,
可以人为地规定变量优化的顺序, 将其写成类似于 bilevel optimization
的形式: <span class="math display">\[
\begin{aligned}
\max ~&amp;cx+\phi(x)\\
\text{s.t. }&amp;x\in X\\
&amp;\phi(x)=\max\{hy:gy\le d-Fx,y\in\mathbb{R}^p_+\}
\end{aligned}
\]</span> 上面是先把 <span class="math inline">\(x\)</span>
作为参数求解一个线性规划问题, 再求解剩下的子问题.</p>
<blockquote>
<p>如何证明这两种写法的等价性?</p>
<p>感觉好像不太对, 更像是一种启发式规则.</p>
<p>好吧不算很简单，需要好好看一下怎么搞。</p>
</blockquote>
<p>假设 <span class="math inline">\(\phi(x)\)</span> 是有界的, 那么由
Farkas 引理可知 <span class="math inline">\(\phi(x)\)</span> 是 feasible
的 <span class="math inline">\(\iff\)</span> <span
class="math inline">\(v^{(t)}(d-Fx)\ge 0,t=1,\cdots,T\)</span>, 其中
<span class="math inline">\(\{v^{(t)}\}_{t=1}^T\)</span> 是凸集 <span
class="math inline">\(U=\{u\in\mathbb{R}_+^m:uG\ge h\}\)</span>
的极方向(extreme ray).</p>
<p>若求解 <span class="math inline">\(\phi(x)\)</span> 的线性规划是
feasible 的, 那么 <span class="math display">\[
\phi(x)=\min_{1\le s\le S}u^{(s)}(d-Fx)
\]</span> 其中 <span class="math inline">\(\{u^{(s)}\}_{s=1}^S\)</span>
是 <span class="math inline">\(U\)</span> 的极点, 这可以改写为 <span
class="math display">\[
\phi(x)=\max_{\eta\le u^{(s)}(d-Fx)\atop1\le s\le S}\eta
\]</span> 将离散问题转化为了一个连续的线性规划问题, 那么就可以将 <span
class="math inline">\(Z\)</span> 写成 <span class="math display">\[
\begin{aligned}
Z=\max ~&amp;cx+\eta\\
\text{s.t. }&amp;x\in X,\eta\in\mathbb{R}\\
&amp;v^{(t)}(d-Fx)\ge 0,t=1,\cdots,T\\
&amp;u^{(s)}(d-Fx)\ge \eta,s=1,\cdots, S
\end{aligned}
\]</span> 这个问题约束的个数是指数级别的, 解决该问题最好的方法是
branch-and-cut.</p>
]]></content>
  </entry>
  <entry>
    <title>Well-Solved Problems</title>
    <url>/2023/07/10/OR/int-prop/well-solved/</url>
    <content><![CDATA[<p>这部分介绍一些已经解决得很好的组合优化问题, 在此之前,
需要先定义什么叫做"解决得很好".</p>
<p>对于给定的组合优化问题 <span class="math inline">\(\max\{c^Tx:x\in
X\subset\mathbb{R}^n\}\)</span>,
定义与其相伴的<strong>分离问题</strong>为: 给定一个点 <span
class="math inline">\(x^{\ast}\)</span>, 判断 <span
class="math inline">\(x^{\ast}\in\mathrm{conv}(X)\)</span> 是否成立,
若不成立, 找到一个超平面将 <span class="math inline">\(x^{\ast}\)</span>
和 <span class="math inline">\(x^{\ast}\in\mathrm{conv}(X)\)</span>
分离开来, 说的更具体一点, 要找到 <span class="math inline">\(a^Tx\le
a_0\)</span> 对任意 <span class="math inline">\(x\in X\)</span> 都成立但
<span class="math inline">\(a^Tx^{\ast}&gt;a_0\)</span>.</p>
<p>在判断一个问题是否有高效的算法的时候,
通常会同时用到下面的四个性质:</p>
<ul>
<li>efficient optimization性质:
对于给定的组合优化问题族存在高效的(多项式)算法.</li>
<li>强对偶性质: 对于给定的问题族,
存在可以让我们得到可以快速验证最优条件的强对偶问题 <span
class="math inline">\((D):\min\{\omega(u):u\in U\}\)</span>,
这个验证解的最优条件是: <span class="math inline">\(x^{\ast}\in
X\)</span> 是原问题 <span class="math inline">\(P\)</span>
的最优解当且仅当存在 <span class="math inline">\(u^{\ast}\in U\)</span>
使得 <span
class="math inline">\(c^Tx^{\ast}=\omega(u^{\ast})\)</span>.</li>
<li>efficient separation性质:
存在与组合优化问题相伴的分离问题的高效算法.</li>
<li>精确凸包性质: 原文中有compact description of convex hull,
不知道是什么意思, 反正就是原则上可以将每个实例替换为线性规划问题 <span
class="math inline">\(\max\{cx:x\in\mathrm{conv}(X)\}\)</span>.</li>
</ul>
]]></content>
      <categories>
        <category>组合优化与整数规划</category>
      </categories>
  </entry>
  <entry>
    <title>拉格朗日对偶</title>
    <url>/2023/07/25/OR/int-prop/lagrangian-duality/</url>
    <content><![CDATA[
]]></content>
  </entry>
  <entry>
    <title>最优化（三）：梯度法</title>
    <url>/2022/10/07/OR/num-opt/gradient/</url>
    <content><![CDATA[<h1 id="梯度法">梯度法</h1>
<h2 id="迭代算法与收敛率">迭代算法与收敛率</h2>
<p>现在要考虑满足在定义域内一阶可微的多元实值函数 <span
class="math inline">\(f(x)\)</span> 的局部极小点, 即</p>
<p><span class="math display">\[
\begin{aligned}
&amp;\min f(x)\newline{}
\text{s.t. }&amp;x\in \mathbb{R}
\end{aligned}
\]</span></p>
<p>在各种各样的搜索极小点的方法中,
迭代算法是较为典型且常见的一种方法。迭代法是这样的一种算法,
选定某个(接近极小点)的点 <span class="math inline">\(x_0\)</span>
(有时会把这称为<em>极小点的估计</em>), 以 <span
class="math inline">\(x_0\)</span> 为初始点,
通过<em>某种规则</em>产生一个点 <span
class="math inline">\(x_1,\)</span> 并继续以点 <span
class="math inline">\(x_1\)</span> 采用同样的规则产生 <span
class="math inline">\(x_2,\)</span> 以此类推,
理想情况下(实际操作中中在达到停机条件时会停止该过程)最终会产生一个无穷序列
<span class="math inline">\(\{x_{k}\}_{k=0}^{\infty},\)</span> 每一步(第
<span class="math inline">\(k\)</span>
次)的迭代利用的规则实际上是序列的某个递推关系式: <span
class="math inline">\(x_{k}=\phi(x_{k-1},\cdots),k\ge
1,\phi:\mathbb{R}^n\to\mathbb{R}^n.\)</span> 理想的情况是,
该迭代序列收敛于极小点 <span class="math inline">\(x^{\ast},\)</span>
这样我们就成功地得到了一个搜索极小点的算法. 后面介绍的算法,
大都属于迭代算法.</p>
<p>不管是什么算法, 它的效率/运行速度总是我们最需要关注的性质之一, 显然,
对于迭代算法而言, 这与迭代产生的序列 <span
class="math inline">\(\{x_k\}_{k=0}^{\infty}\)</span>
的<strong>收敛速度</strong>息息相关, 于是我们借此定义收敛率,
并以收敛率衡量迭代算法的收敛速度.</p>
<p><strong>定义</strong> 设序列 <span
class="math inline">\(\{x_k\}\)</span> 收敛到 <span
class="math inline">\(x^{\ast},\)</span> 若 <span
class="math display">\[
\lim_{k\to\infty}\frac{\|x_{k+1}-x^{\ast}\|}{\|x_{k}-x^{\ast}
\|^p}=\beta&lt;\infty,
\]</span> 则序列 <span class="math inline">\(\{x_k\}\)</span>
的收敛阶数为 <span class="math inline">\(p(p\in\mathbb{R})\)</span> 或
<span class="math inline">\(p\)</span> 阶收敛. <span
class="math inline">\(\square\)</span></p>
<p>特别地:</p>
<ul>
<li><span class="math inline">\(p=1,\beta =0\)</span> 时称 <span
class="math inline">\(\{x_k\}\)</span> 超线性收敛;</li>
<li><span class="math inline">\(p=1,0&lt;\beta &lt;1\)</span> 时称 <span
class="math inline">\(\{x_k\}\)</span> <span
class="math inline">\(\beta\)</span> 线性收敛;</li>
<li><span class="math inline">\(p=1,\beta=1\)</span> 时称 <span
class="math inline">\(\{x_k\}\)</span> 次线性收敛;</li>
<li><span class="math inline">\(p=2\)</span> 时称 <span
class="math inline">\(\{x_k\}\)</span> 是二次型收敛.</li>
</ul>
<p>一般而言, 具有超线性及以上收敛速度的算法就可以被称为"很好的算法"了.
<span class="math inline">\(p\)</span> 越大,
算法/数列的收敛速度就越快.</p>
<p>可以证明任意序列的收敛阶数不会小于 <span
class="math inline">\(1\)</span>.</p>
<h2 id="最速下降法">最速下降法</h2>
<p>在迭代算法中, 我们可以这样描述第 <span
class="math inline">\(k\)</span> 次迭代产生的新的点 <span
class="math inline">\(x_{k+1}:\)</span> <span
class="math inline">\(x_k,x_{k+1}\)</span> 是 <span
class="math inline">\(\mathbb{R}^n\)</span> 上的两个点, 产生点 <span
class="math inline">\(x_{k+1}\)</span> 的过程可以看作是从点 <span
class="math inline">\(x_k\)</span> 出发沿着方向 <span
class="math inline">\(x_{k+1}-x_{k}\)</span> 前进 <span
class="math inline">\(\|x_{k+1}-x_k\|\)</span> 的距离, 借助可行方向,
我们将向量 <span class="math inline">\(x_{k+1}-x_{k}\)</span>
作为一个可行方向, 记作 <span class="math inline">\(p_k,\)</span>
为了方便用范数和方向分别描述向量, 保证 <span
class="math inline">\(\|p_k\|=1,\)</span> 前进的距离记作 <span
class="math inline">\(\alpha_k=\|x_{k+1}-x_k\|,\)</span>
这称为<strong><em>步长</em></strong>, 这样就有 <span
class="math inline">\(x_{k+1}=x_{k}+\alpha_kp_k,\)</span>
我们的任务变成了通过某种规则产生"合适"的可行方向与步长.</p>
<p>什么样可行方向和步长的才算是"合适"呢? 这不难想,
既然我们的目的是求极小点, 那必然要保证在迭代的过程中序列 <span
class="math inline">\(\{f(x_k)\}_{k=0}^{\infty}\)</span>
整体呈下降的趋势, 或者干脆让条件再强一些, 序列 <span
class="math inline">\(\{f(x_k)\}_{k=0}^{\infty}\)</span> 严格递减,
那么我们便得到了<strong>下降迭代法</strong>.</p>
<p>但是这还不够具体, 我们要得到可行方向和步长的确切信息.</p>
<p>我们希望只利用可行方向和步长得到<strong><em>最好</em></strong>的下降迭代法,
那么我们显然需要<em>下降最快的方向</em>以及使 <span
class="math inline">\(f(x)\)</span> 在该方向上取得最小值的步长.
那么方向的选择便呼之欲出了, 即<strong>负梯度方向</strong>,
于是我们可以令 <span class="math inline">\(p_k=-\nabla f(x_k).\)</span>
可行方向选择负梯度的算法又被称作梯度法.</p>
<h3 id="固定步长">固定步长</h3>
<p>在使用最优步长之前, 我们不妨"偷一下懒", 选择固定的步长,
这样就免去了每次迭代还要找最优步长的麻烦,
于是我们得到了<strong>固定步长梯度法</strong>. 这样做的好处比较明显,
缺点是:</p>
<ul>
<li>步长较大在远离极小点的地方比较快但是容易在极小点附近产生锯齿状的收敛路径,
<strong><em>甚至不收敛</em></strong>;</li>
<li>步长太小效率会偏低.</li>
</ul>
<p>事实上, 我们可以确定固定步长梯度法中使得算法收敛至极小点的步长的范围,
这放在后面介绍.</p>
<h3 id="最优步长">最优步长</h3>
<p>显然最优步长 <span
class="math inline">\(\alpha_k=\arg\min_{\alpha&gt;0}f(x_k+\alpha
p_k),\)</span> 这是一个一维函数, 记作 <span
class="math inline">\(\phi(\alpha),\)</span> 极小值点在驻点处取得,
于是令 <span class="math inline">\(\phi&#39;(\alpha)=0\)</span> 有 <span
class="math inline">\(\nabla f(x_k+\alpha p_k)^{\top} p_k=\nabla
f(x_{k+1})^{\top} p_k=0.\)</span>
但是在实现算法的时候我们通常使用一维搜索方法.</p>
<p>确定了最优可行方向和最优步长后,
我们得到了<strong>最速下降梯度法</strong>:</p>
<ol type="1">
<li>确定初始点 <span class="math inline">\(x_0,\)</span> 并置迭代次数
<span class="math inline">\(k:=0.\)</span></li>
<li>令 <span class="math inline">\(\phi_k(\alpha)=f(x_{k}-\alpha\nabla
f(x_k)),\)</span> 置 <span
class="math inline">\(\alpha_k:=\arg\min\limits_{\alpha&gt;0}\phi_k(\alpha),\)</span>
<span class="math inline">\(x_{k+1}=x_{k}-\alpha_k\nabla
f(x_k).\)</span> 其中 <span class="math inline">\(\alpha_k\)</span>
的计算可采用一维优化方法.</li>
<li>当满足要求的精度时停止上述过程, 否则置 <span
class="math inline">\(k:=k+1\)</span> 转 2.</li>
</ol>
<p>最速下降法得到的序列一定会收敛至极小点, 证明过程在后文会有提到.</p>
<h3 id="停机条件的选择">停机条件的选择</h3>
<p>理论上来讲, 我们最好把 <span class="math inline">\(\nabla
f(x_k)=0\)</span> 作为停机条件,
但是在实际中我们很难恰好得到梯度为零的结果, 只能得到某个接近 <span
class="math inline">\(0\)</span> 的结果, 此时若给定一个较小的预设的阈值
<span class="math inline">\(\varepsilon&gt;0\)</span>
,便有下面三种停机条件可以使用:</p>
<ul>
<li><p><strong>梯度范数</strong>: 利用 <span
class="math inline">\(\|\nabla f(x_k)\|&lt; \varepsilon\)</span>
作为停机条件;</p></li>
<li><p><strong>绝对数值</strong>: 利用 <span
class="math inline">\(\|f(x_{k+1})-f(x_k) \|&lt;\varepsilon\)</span> 或
<span class="math inline">\(\|x_{k+1}-x_k\|&lt;\varepsilon\)</span>
来作为停机条件.</p></li>
<li><p><strong>相对数值</strong>: 利用 <span
class="math inline">\(\displaystyle \frac{|f(x_{k+1})-f(x_k) |}{|f(x_k)
|}&lt;\varepsilon\)</span> 或 <span class="math inline">\(\displaystyle
\frac{\|x_{k+1}-x_k \|}{\|x_{k} \|}&lt;\varepsilon\)</span>
作为停机条件.</p></li>
</ul>
<p>利用梯度范数和绝对数值作为停机条件的缺点是它们会受到 <span
class="math inline">\(f(x)\)</span> 或 <span
class="math inline">\(\nabla f(x)\)</span> 的数量级的影响,
而相对数值<em>是尺度无关</em>的. 然而若 <span
class="math inline">\(|f(x)|&lt;1\)</span> 或 <span
class="math inline">\(\|x_k\|&lt;1\)</span> 时,
相对数值反而会比绝对数值大, 为避免这一情况我们可以采用下面的修正: <span
class="math display">\[
\frac{|f(x_{k+1})-f(x_k) |}{\max\{|f(x_k)
|,1\}}&lt;\varepsilon,\displaystyle \frac{\|x_{k+1}-x_k
\|}{\max\{\|x_{k} \|,1\}}&lt;\varepsilon
\]</span> 这也是后面的算法常用的停机条件.</p>
<p>经过测试利用修正过的相对数值作为停机条件比使用绝对数值速度快了至少十倍.</p>
<h3 id="二次型函数的最速下降梯度法">二次型函数的最速下降梯度法</h3>
<p>设 <span class="math inline">\(f(x)=\frac{1}{2}x^{\top} Qx+b^{\top}
x+c,\)</span> 有 <span class="math inline">\(\nabla f(x)=Qx+b,\)</span>
于是 <span class="math inline">\(\alpha_k\)</span> 满足 <span
class="math display">\[
\phi_k&#39;(\alpha_k)=0\Rightarrow -\nabla f(x_k-\alpha_k\nabla
f(x_k))^{\top} \nabla f(x_k)=0.
\]</span> 整理可得 <span class="math display">\[
\alpha_k=\frac{\|Qx_k+b\|^2}{(Qx_k+b)^{\top} Q(Qx_k+b)},
\]</span> 至于 <span class="math inline">\(x_{k+1},\)</span>
它的形式并不是很漂亮, 就没有把它写出来的必要了.</p>
<hr />
<h3 id="收敛性质">收敛性质</h3>
<h4 id="固定步长-1">固定步长</h4>
<p>对于二次型函数 <span class="math inline">\(f(x)=\frac{1}{2}x^{\top}
Qx+b^{\top} x+c,\)</span> , 我们能确定使迭代序列收敛的步长范围,
这表述为下面的命题:</p>
<p><strong>命题</strong> 对二次型函数 <span
class="math inline">\(f(x)=\frac{1}{2}x^{\top} Qx+b^{\top} x+c\)</span>
使用固定步长梯度法时, 当且仅当步长满足 <span class="math display">\[
0&lt;\alpha&lt;\frac{2}{\lambda_{\max}}.
\]</span> 时迭代产生的序列 <span class="math inline">\(\{x_k\}\)</span>
收敛至极小点 <span class="math inline">\(x^{\ast}.\)</span> 其中 <span
class="math inline">\(\lambda_{\max}\)</span> 是 <span
class="math inline">\(Q\)</span> 的最大特征值. <span
class="math inline">\(\square\)</span></p>
<h4 id="最速下降">最速下降</h4>
<p><strong>命题</strong> 若 <span class="math inline">\(f\)</span>
在定域上连续一阶可微， 且集合 <span class="math inline">\(G=\{x|f(x)\le
f(x_0)\}\)</span> 有界, 若最速下降法迭代过程中得到的序列 <span
class="math inline">\(\{x_k\}\)</span> 收敛, 则其收敛点为 <span
class="math inline">\(f\)</span> 的驻点. <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 设最速下降法</p>
<hr />
<h3 id="代码实现">代码实现</h3>
<h4 id="python">Python</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change</span>(<span class="params">var, val</span>):  <span class="comment">#构建变量与值之间的以元组为元素的列表</span></span><br><span class="line">    l = []</span><br><span class="line">    it1 = <span class="built_in">iter</span>(var)</span><br><span class="line">    it2 = <span class="built_in">iter</span>(val)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(var.shape[<span class="number">0</span>]):</span><br><span class="line">        l.append(<span class="built_in">tuple</span>((<span class="built_in">next</span>(it1), <span class="built_in">next</span>(it2))))</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">golden_cut</span>(<span class="params">f, l, r, var, eps</span>):</span><br><span class="line">    rho = (<span class="number">3</span>-math.sqrt(<span class="number">5</span>))/<span class="number">2</span></span><br><span class="line">    a = l+(r-l)*rho</span><br><span class="line">    b = r-(r-l)*rho</span><br><span class="line">    <span class="keyword">while</span> (math.fabs(l-r) &gt; eps):</span><br><span class="line">        f_a = f.subs([(var, a)])</span><br><span class="line">        f_b = f.subs([(var, b)])</span><br><span class="line">        <span class="keyword">if</span> f_a[<span class="number">0</span>, <span class="number">0</span>] &gt; f_b[<span class="number">0</span>, <span class="number">0</span>]:</span><br><span class="line">            l = a</span><br><span class="line">            a = b</span><br><span class="line">            b = r-(r-l)*rho</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = b</span><br><span class="line">            b = a</span><br><span class="line">            a = l+(r-l)*rho</span><br><span class="line">    <span class="keyword">return</span> a  <span class="comment">#取左端点</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">SteepestDescent</span>(<span class="params">f, x0, var, eps</span>):</span><br><span class="line">    grad_f = f.jacobian(var)  <span class="comment"># 雅可比矩阵</span></span><br><span class="line">    x1 = sympy.Matrix.zeros(var.shape[<span class="number">0</span>], <span class="number">1</span>)</span><br><span class="line">    con = sympy.Matrix.norm(x1-x0)/<span class="built_in">max</span>(sympy.Matrix.norm(x0), <span class="number">1</span>)</span><br><span class="line">    k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> con &gt; eps:</span><br><span class="line">        rel1 = change(var, x0)</span><br><span class="line">        d = grad_f.subs(rel1).T  <span class="comment"># 这里要加转置，否则会出现维数不一致的情况</span></span><br><span class="line">        alpha = sympy.symbols(<span class="string">&#x27;alpha&#x27;</span>, positive = <span class="literal">True</span>)  <span class="comment">#步长变量</span></span><br><span class="line">        rel2 = change(var, x0-alpha*d)</span><br><span class="line">        phi = f.subs(rel2)  <span class="comment">#以步长为变量的函数</span></span><br><span class="line">        alpha0 = golden_cut(phi, <span class="number">0</span>, <span class="number">100</span>, alpha, <span class="number">1e-4</span>)  <span class="comment">#黄金分割法找最短步长</span></span><br><span class="line">        x1 = x0-alpha0*d</span><br><span class="line">        tmp = x1</span><br><span class="line">        x1 = x0</span><br><span class="line">        x0 = tmp</span><br><span class="line">        con = sympy.Matrix.norm(x1-x0)/<span class="built_in">max</span>(sympy.Matrix.norm(x0), <span class="number">1</span>)</span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(x0.evalf(<span class="number">6</span>))</span><br><span class="line">    rel3 = change(var, x0)</span><br><span class="line">    min_f = f.subs(rel3)</span><br><span class="line">    <span class="built_in">print</span>(min_f[<span class="number">0</span>, <span class="number">0</span>].evalf(<span class="number">6</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Total iterations:&quot;</span>, k)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x, y, z, w = sympy.symbols(<span class="string">&#x27;x,y,z,w&#x27;</span>)</span><br><span class="line">w = (x-<span class="number">5</span>)**<span class="number">2</span>+(y+<span class="number">4</span>)**<span class="number">2</span>+<span class="number">4</span>*(z-<span class="number">6</span>)**<span class="number">2</span></span><br><span class="line">var = sympy.Matrix([x, y, z])</span><br><span class="line">f = sympy.Matrix([w])</span><br><span class="line">x0 = sympy.Matrix([<span class="number">1000</span>, <span class="number">1000</span>, <span class="number">1000</span>])</span><br><span class="line">SteepestDescent(f, x0, var, <span class="number">1e-6</span>)</span><br></pre></td></tr></table></figure>
<p>输出结果为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Matrix([[5.00000], [-4.00000], [6.00000]])</span><br><span class="line">1.17900e-11</span><br><span class="line">Total iterations: 24</span><br></pre></td></tr></table></figure>
<h4 id="matlab">MATLAB</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% %[x,f_min]中,x为极小点,f_min为极小点对应的取值</span></span><br><span class="line"><span class="comment">% %f为目标函数,x0为初始点,var为变量,eps为精度</span></span><br><span class="line"><span class="comment">% %在使用该函数时,先定义目标函数的符号变量,写出目标函数,传入目标函数,初值点,变量以及精度即可</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[x,f_min]</span>=<span class="title">SteepestDescent</span><span class="params">(f,x0,var,eps)</span></span></span><br><span class="line">x1=<span class="number">0</span>;</span><br><span class="line">k=<span class="number">0</span>;<span class="comment">%迭代次数</span></span><br><span class="line">grad_f=jacobian(f,var);<span class="comment">%梯度</span></span><br><span class="line">con=norm(x1-x0)./<span class="built_in">max</span>(<span class="number">1</span>,norm(x0));<span class="comment">%相对值作为循环结束条件</span></span><br><span class="line"><span class="keyword">while</span> con&gt;<span class="built_in">eps</span></span><br><span class="line">    g=subs(grad_f,var,x0);</span><br><span class="line">    syms alpha positive;</span><br><span class="line">    phi=subs(f,var,x0-alpha*g); <span class="comment">%phi是alpha的函数,求出phi的极小值</span></span><br><span class="line">    [a,b]=GoldenCut(phi,alpha,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1.0e-3</span>); <span class="comment">%利用黄金分割法求出极小点,精度为0.001</span></span><br><span class="line">    alpha0=a;<span class="comment">%取左端点</span></span><br><span class="line">    x1=x0-alpha0*g;<span class="comment">%下一个点</span></span><br><span class="line">    tmp=x0;</span><br><span class="line">    x0=x1;</span><br><span class="line">    x1=tmp;</span><br><span class="line">    k=k+<span class="number">1</span>;</span><br><span class="line">    con=norm(x1-x0)./<span class="built_in">max</span>(<span class="number">1</span>,norm(x0));<span class="comment">%停机条件</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=vpa(x0,<span class="number">6</span>);#保留六位小数</span><br><span class="line">f_min=subs(f,var,x);</span><br><span class="line">f_min=vpa(f_min,<span class="number">6</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Optimization</category>
      </categories>
  </entry>
  <entry>
    <title>最优化（二）：多元函数与无约束优化基础</title>
    <url>/2022/10/07/OR/num-opt/basic-of-multi-func/</url>
    <content><![CDATA[<h2 id="多元函数相关概念">多元函数相关概念</h2>
<h3 id="水平集">水平集</h3>
<p>曲面 <span class="math inline">\(F(x,y,z)=0\)</span> 的水平集为 <span
class="math inline">\(S=\{(x,y)|F(x,y,c)=0\}.\)</span></p>
<p>不同的水平集不相交;</p>
<p>水平集稠密的地方目标函数函数变化较快, 稀疏的地方变化较慢.</p>
<p>在极值点附近, 水平集会呈现为同心椭圆集.</p>
<h3 id="梯度雅可比矩阵与黑塞矩阵">梯度、雅可比矩阵与黑塞矩阵</h3>
<h4 id="多维实值函数-对向量求导">多维实值函数: 对向量求导</h4>
<p>若 <span class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span>
且在定义域内一阶可微, 我们可以求出来 <span class="math display">\[
\frac{\partial f}{\partial \mathbf{x}}=\frac{\partial
f}{\partial(x_1,\cdots,x_n)}=\left[\frac{\partial f}{\partial
x_1},\cdots,\frac{\partial f}{\partial x_n}\right],
\]</span> 上面的 <span class="math inline">\(\frac{\partial
f}{\partial(x_1,\cdots,x_n)}\)</span> 可以看作一个形式上的记号, 表示
<span class="math inline">\(f\)</span> 对这些变量求偏导,
最后得到的是一个<strong>行向量</strong>. 同时定义 <span
class="math inline">\(f(\mathbf{x})\)</span> 的梯度 <span
class="math inline">\(\nabla f(\mathbf{x})=\left(\frac{\partial
f}{\partial \mathbf{x}}\right)^{\top} .\)</span>
多元实值函数的梯度是一个<strong>列向量</strong>, 是一个 <span
class="math inline">\(\mathbb{R}^n\to\mathbb{R}^n\)</span> 的函数.</p>
<blockquote>
<p>查到的一些资料给出的规则是对列/行向量求导得到的是列/行向量,
与上面的描述不知为何有些矛盾.</p>
</blockquote>
<p>就像一元函数在给出导函数的定义后推出一些常用的导数公式那样,
对于高维实值函数也有类似的公式(下面默认 <span
class="math inline">\(\mathbf{x}\)</span> 为变量而 <span
class="math inline">\(\mathbf{c}\)</span> 为常量):</p>
<ul>
<li><p><span class="math inline">\(\nabla
\mathbf{c}=\mathbf{0}.\)</span></p></li>
<li><p><span class="math inline">\(\nabla \mathbf{c}^{\top} \mathbf{x}=
\mathbf{c}.\)</span></p></li>
<li><p><span class="math inline">\(\nabla \mathbf{x}^{\top}
\mathbf{x}=2\mathbf{x}.\)</span></p>
<p><strong><em>PROOF</em></strong> <span class="math display">\[
\nabla \mathbf{x}^{\top}
\mathbf{x}=\left(\frac{\partial\sum_{i}x_i^2}{\partial
(x_1,\cdots,x_n)}\right)^{\top} =[2x_1,\cdots,2x_n]^{\top} =2\mathbf{x}.
\]</span></p></li>
<li><p><span class="math inline">\(\nabla \mathbf{x}^{\top}
\mathbf{Ax}=(\mathbf{A}+\mathbf{A}^{\top}) \mathbf{x}.\)</span></p>
<p><strong><em>PROOF</em></strong></p>
<p><span class="math display">\[
\begin{aligned}
\nabla \mathbf{x}^{\top} \mathbf{Ax}
&amp;=\left(\frac{\partial \sum_{i}x_{i}\sum_{j}a_{ij}x_{j}}{\partial
(x_1,\cdots,x_n)}\right)^{\top} \newline{}
&amp;=\left[\sum_{j}x_1(a_{j1}+a_{1j}),\cdots,\sum_{j}x_n(a_{jn}+a_{nj})
\right]^{\top} \newline{}
&amp;=\left[\sum_{j}x_1a_{j1},\cdots,\sum_{j}x_na_{jn}+\right]^{\top}+\left[\sum_{j}x_1a_{1j},\cdots,2\sum_{j}x_na_{nj}
\right]^{\top}\newline{}
&amp;=(\mathbf{x}^{\top} \mathbf{A}+\mathbf{x}^{\top}
\mathbf{A}^{\top})^{\top}\newline{}
&amp;=(\mathbf{A}+\mathbf{A}^{\top})\mathbf{x}
\end{aligned}
\]</span></p>
<p><span class="math inline">\(\mathbf{x}^{\top} \mathbf{Ax}\)</span>
是二次型函数, 对于不对称的 <span
class="math inline">\(\mathbf{A}\)</span> 我们总可以用下述手段让其对称:
令 <span
class="math inline">\(\mathbf{B}=\frac{1}{2}\left(\mathbf{A}+\mathbf{A}^{\top}
\right),\)</span> <span class="math inline">\(\mathbf{B}^{\top}
=\mathbf{B},\)</span> 且</p></li>
</ul>
<p><span class="math display">\[
\begin{aligned}
\mathbf{x}^{\top} \mathbf{Ax}
&amp;=\sum_{i}\sum_{j}a_{ij}x_ix_j\newline{}
&amp;=\frac{1}{2}\sum_i\sum_ja_{ij}x_ix_j+\frac{1}{2}\sum_{i}\sum_ja_{ij}x_ix_j\newline{}
&amp;=\frac{1}{2}\sum_i\sum_ja_{ij}x_ix_j+\frac{1}{2}\sum_{i}\sum_{j}a_{ji}x_ix_j\newline{}
&amp;=\sum_{i}\sum_{j}\frac{a_{ij}+a_{ji}}{2}x_ix_j\newline{}
&amp;=\mathbf{x}^{\top} \mathbf{Bx}.
\end{aligned}
\]</span></p>
<p>于是在处理的时候 <span class="math inline">\(\mathbf{A}\)</span>
往往是实对称矩阵, 也就有 <span class="math inline">\(\nabla
\mathbf{x}^{\top} \mathbf{Ax}=2\mathbf{Ax}\)</span> 成立.</p>
<p>有时候也会称函数 <span
class="math inline">\(f(\mathbf{x})=\mathbf{x}^{\top}
\mathbf{Ax}+\mathbf{b}^{\top} \mathbf{x}+c\)</span>
为一般的二次型函数.</p>
<h5 id="二次型函数性质">二次型函数性质</h5>
<p>给定对称矩阵 <span class="math inline">\(\mathbf{Q}\in
\mathbb{R}^{n\times n},\)</span> 若 <span class="math inline">\(\forall
\mathbf{x}\in\mathbb{R}^n\backslash\{\mathbf{0}\}\)</span> 都有 <span
class="math inline">\(\mathbf{x}^{\top} \mathbf{Qx}&gt;0\)</span> 成立,
则称 <span class="math inline">\(\mathbf{Q}\)</span> 是一个正定矩阵;
若仅有 <span class="math inline">\(\mathbf{x}^{\top} \mathbf{Qx}\ge
0\)</span> 成立则称 <span class="math inline">\(\mathbf{Q}\)</span>
为半正定矩阵. 类似也可定义负定矩阵与半负定矩阵.</p>
<p><strong>定理1 (Sylvester 定理)</strong> 对称矩阵 <span
class="math inline">\(\mathbf{Q}\)</span> 为正定矩阵当且仅当 <span
class="math inline">\(\mathbf{Q}\)</span> 的顺序主子式是正定的.</p>
<p><strong>定理2</strong> 对称矩阵 <span
class="math inline">\(\mathbf{Q}\)</span> 是正定/半正定当且仅当 <span
class="math inline">\(\mathbf{Q}\)</span> 的所有特征值都是正/非负的.</p>
<h4 id="梯度矩阵与雅可比矩阵">梯度矩阵与雅可比矩阵</h4>
<p>我们现在给出函数 <span class="math inline">\(\mathbf{f}:\mathbb{R}^n
\to\mathbb{R}^m\)</span> 对向量 <span
class="math inline">\(\mathbf{x}\)</span> 求导的公式. <span
class="math inline">\(\mathbf{f}\)</span> 是一个列向量: <span
class="math inline">\(\mathbf{f}=[f_1,\cdots,f_m]^{\top} ,\)</span> 对
<span class="math inline">\(\mathbf{x}\)</span> 求导相当于每一个分量
<span class="math inline">\(f_i\)</span> 对 <span
class="math inline">\(\mathbf{x}\)</span> 求导, 而每一个 <span
class="math inline">\(\frac{\partial f_i}{\partial \mathbf{x}}\)</span>
又是一个行向量, 于是 <span class="math display">\[
\frac{\partial \mathbf{f}}{\partial\mathbf{x}}=
\begin{bmatrix}
\frac{\partial f_1}{\partial \mathbf{x}}\newline{}
\vdots\newline{}
\frac{\partial f_m}{\partial \mathbf{x}}
\end{bmatrix}
=
\begin{bmatrix}
\frac{\partial f_1}{\partial x_1}&amp;\cdots&amp;\frac{\partial
f_1}{\partial x_n}\newline{}
\vdots&amp;&amp;\vdots\newline{}
\frac{\partial f_m}{\partial x_1}&amp;\cdots&amp;\frac{\partial
f_m}{\partial x_n}
\end{bmatrix}
\]</span> 这是所谓的<strong>导数矩阵</strong>,
又称为雅可比矩阵(Jacobian), 记作 <span
class="math inline">\(\mathscr{D}\mathbf{f}(\mathbf{x})\)</span> 或者
<span class="math inline">\(J\mathbf{f}(\mathbf{x}),\)</span> 它是 <span
class="math inline">\(m\times n\)</span> 矩阵.
同样定义<strong>梯度矩阵</strong> <span class="math inline">\(\nabla
\mathbf{f}(\mathbf{x})=(\mathscr{D}\mathbf{f}(\mathbf{x}))^{\top}
,\)</span> 梯度矩阵是 <span class="math inline">\(n\times m\)</span>
矩阵.</p>
<p>因此对于实值函数 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span> ,
它的雅可比矩阵 <span
class="math inline">\(\mathscr{D}f(\mathbf{x})\)</span>
是一个行向量.</p>
<h4 id="黑塞矩阵">黑塞矩阵</h4>
<p>对于实值函数 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R},\)</span> 若梯度 <span
class="math inline">\(\nabla f\)</span> 可微, 则称 <span
class="math inline">\(f\)</span> 二阶可微, <span
class="math inline">\(\nabla f\)</span> 的导数记为 <span
class="math display">\[
\mathscr{D}^2 f=\left[\begin{array}{cccc}
\frac{\partial ^2 f}{\partial  x_1^2} &amp; \frac{\partial ^2
f}{\partial  x_2 \partial  x_1} &amp; \cdots &amp; \frac{\partial ^2
f}{\partial  x_n \partial  x_1} \newline{}
\frac{\partial ^2 f}{\partial  x_1 \partial  x_2} &amp; \frac{\partial
^2 f}{\partial  x_2^2} &amp; \cdots &amp; \frac{\partial ^2
f}{\partial  x_n \partial  x_2} \newline{}
\vdots &amp; \vdots &amp; \ddots &amp; \vdots \newline{}
\frac{\partial ^2 f}{\partial  x_1 \partial  x_n} &amp; \frac{\partial
^2 f}{\partial  x_2 \partial  x_n} &amp; \cdots &amp; \frac{\partial ^2
f}{\partial  x_n^2}
\end{array}\right].
\]</span> 矩阵 <span class="math inline">\(\mathscr{D}^2
f(\mathbf{x})\)</span> 被称为 <span class="math inline">\(f\)</span>
(在点 <span class="math inline">\(\mathbf{x}\)</span>
处)的黑塞矩阵(Hessian). 本文中也会用 <span
class="math inline">\(\nabla^2 f(\mathbf{x})\)</span> 表示黑塞矩阵.</p>
<p>若 <span class="math inline">\(f\)</span> 是二阶连续可微的, 则 <span
class="math inline">\(f\)</span> 的黑塞矩阵是对称的.</p>
<p>一个实例: <span class="math inline">\(f(\mathbf{x})\)</span>
在定义域内二阶可微, <span
class="math inline">\(\phi(\alpha)=f(\mathbf{x}+\alpha\mathbf{p}),\)</span>
求 <span
class="math inline">\(\phi&#39;(\alpha),\phi&#39;&#39;(\alpha).\)</span></p>
<p><strong><em>SOL</em></strong> 这个函数是以后经常碰到的函数,
直接用链式法则即可: <span class="math display">\[
\begin{aligned}\phi&#39;(\alpha)=\nabla f(\mathbf{x}+\alpha
\mathbf{p})^{\top}\mathbf{p}\newline{}\phi&#39;&#39;(\alpha)=p^{\top}\nabla^2
f(\mathbf{x}+\alpha \mathbf{p})\mathbf{p}\end{aligned}
\]</span></p>
<h3 id="taylor展开">Taylor展开</h3>
<blockquote>
<p><strong>Theorem</strong><a href="#fn1" class="footnote-ref"
id="fnref1" role="doc-noteref"><sup>1</sup></a> (Taylor) Suppose <span
class="math inline">\(f\)</span> from <span
class="math inline">\(\mathbb{R}^n\)</span> to <span
class="math inline">\(\mathbb{R}\)</span> is a <span
class="math inline">\(C^{m+1}\)</span> function on an open ball centered
at <span class="math inline">\(\mathbf{A}\)</span>. Then for <span
class="math inline">\(\mathbf{A}+\mathbf{H}\)</span> in the ball, <span
class="math display">\[
\begin{gathered}f(\mathbf{A}+\mathbf{H})=f(\mathbf{A})+\sum_{i_1=1}^n
h_{i_1} f_{x_{i_1}}(\mathbf{A})+\frac{1}{2} \sum_{i_1, i_2=1}^n h_{i_1}
h_{i_2} f_{x_{i_1} x_{i_2}}(\mathbf{A}) \newline{}+\cdots+\frac{1}{m !}
\sum_{i_1, \ldots, i_m=1}^n\left(h_{i_1} h_{i_2} \cdots h_{i_m}\right)
f_{x_{i_1} x_{i_2} \cdots x_{i_m}}(\mathbf{A})+R_m(\mathbf{A},
\mathbf{H}),\end{gathered}
\]</span> where <span class="math inline">\(\left|R_m(\mathbf{A},
\mathbf{H})\right| \leq k\|\mathbf{H}\|^{m+1}\)</span> for some constant
<span class="math inline">\(k\)</span>. The remainder goes to zero
faster than <span class="math inline">\(\|\mathbf{H}\|^m\)</span> in the
sense that <span class="math display">\[
0 \leq \frac{\left|R_m(\mathbf{A}, \mathbf{H})\right|}{\|\mathbf{H}\|^m}
\leq k\|\mathbf{H}\| .
\]</span></p>
</blockquote>
<p>当然常用的Taylor展开只需要展开到一阶或二阶即可.</p>
<p>若函数 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R},\)</span> 在开集 <span
class="math inline">\(\Omega\subset \mathbb{R}^n\)</span>
上一阶/二阶连续可微, 且 <span
class="math inline">\(\mathbf{x_0}\in\Omega,\)</span> 则</p>
<p>一阶: <span class="math display">\[
f(\mathbf{x})=f(\mathbf{x}_0)+\nabla f(\mathbf{x})^{\top}
(\mathbf{x}-\mathbf{x}_0)+o(\|\mathbf{x}-\mathbf{x}_0\|).
\]</span> 二阶: <span class="math display">\[
f(\mathbf{x})=f(\mathbf{x}_0)+\nabla f(\mathbf{x})^{\top}
(\mathbf{x}-\mathbf{x}_0)+\frac{1}{2}(\mathbf{x}-\mathbf{x}_0)^{\top}
\nabla^2f(\mathbf{x}_0)(\mathbf{x}-\mathbf{x}_0)+o(\|\mathbf{x}-\mathbf{x}_0\|^2).
\]</span></p>
<blockquote>
<p>这里不是数学笔记就不补充证明过程了.</p>
</blockquote>
<h2 id="集合约束优化">集合约束优化</h2>
<p>集合约束优化是形如 <span class="math display">\[
\begin{aligned}
&amp;\min f(\mathbf{x})\newline{}
\text{s.t. }&amp;\mathbf{x}\in\Omega
\end{aligned}
\]</span> 的优化问题, 其中 <span class="math inline">\(f:\Omega\subset
\mathbb{R}^n\to\mathbb{R}.\)</span> 由于最小值会在极小值点取到,
先给出两类极小点的定义.</p>
<p><strong>定义1</strong> 对于 <span class="math inline">\(f\)</span>
定义域中的一个点 <span class="math inline">\(\mathbf{x}^{\ast},\)</span>
若存在 <span class="math inline">\(\mathbf{x}^{\ast}\)</span>
的一个去心邻域 <span
class="math inline">\(\tilde{U}(\mathbf{x}^{\ast})\)</span> 使得 <span
class="math inline">\(\forall \mathbf{x}\in
\tilde{U}(\mathbf{x}^{\ast}),\)</span> 不等式 <span
class="math inline">\(f(\mathbf{x})\ge f(\mathbf{x}^{\ast})\)</span>
都成立, 则称 <span class="math inline">\(\mathbf{x}^{\ast}\)</span> 是
<span class="math inline">\(f\)</span> 在 <span
class="math inline">\(\Omega\)</span>
中的一个<strong>局部极小点</strong>. 若 <span
class="math inline">\(\forall
\mathbf{x}\in\Omega\backslash\{\mathbf{x}^{\ast}\}\)</span> 不等式 <span
class="math inline">\(f(\mathbf{x})\ge f(\mathbf{x}^{\ast})\)</span>
都成立, 则称 <span class="math inline">\(\mathbf{x}^{\ast}\)</span> 是
<span class="math inline">\(f\)</span> 在 <span
class="math inline">\(\Omega\)</span>
中的一个<strong>全局极小点</strong>. <span
class="math inline">\(\square\)</span></p>
<p>若将 <span class="math inline">\(\ge\)</span> 改成 <span
class="math inline">\(&gt;,\)</span>
则得到的是<strong>严格</strong>局部极小点和<strong>严格</strong>全局极小点的定义.</p>
<p>根据极小点的定义, 对于优化问题 <span class="math inline">\(\min
f(\mathbf{x}),\text{s.t. }\mathbf{x}\in\Omega,\)</span>
可以给出<strong>局部最优解</strong>与<strong>全局最优解</strong>的定义,
即 <span class="math inline">\(\Omega\)</span>
中的局部极小点为该优化问题的局部最优解,
全局极小点为该优化问题的全局最优解.</p>
<h3 id="可行方向">可行方向</h3>
<p><strong>定义2</strong> 对于 <span
class="math inline">\(\mathbf{d}\in\mathbb{R}^n\land \mathbf{d}\ne
\mathbf{0}\)</span> 和<span
class="math inline">\(\mathbf{x}\in\Omega,\)</span> 若存在一个实数 <span
class="math inline">\(\alpha_0&gt;0\)</span> 使得 <span
class="math inline">\(\forall \alpha\in[0,\alpha_0],\)</span> 都有 <span
class="math inline">\(\mathbf{x}+\alpha\mathbf{d}\in\Omega,\)</span>
则称 <span class="math inline">\(\mathbf{d}\)</span> 为 <span
class="math inline">\(\mathbf{x}\)</span> 处的可行方向. <span
class="math inline">\(\square\)</span></p>
<p>显然若 <span class="math inline">\(\mathbf{x}\)</span> 在 <span
class="math inline">\(\Omega\)</span> 的内部, 任意一个方向都是可行方向;
若 <span class="math inline">\(\mathbf{x}\)</span> 处于边缘,
则肯定某个范围内的方向是不可行的. 为什么我们要关注可行方向? <span
class="math inline">\(\mathbf{x}\)</span>
在约束集边缘和在约束集内部时能使用的信息是不一样的</p>
<h4 id="方向导数">方向导数</h4>
<p>在可行方向定义的基础下，我们给出方向导数的定义。</p>
<p>设 <span class="math inline">\(\mathbf{d}\in \mathbb{R}^n,\)</span>
可微函数 <span class="math inline">\(f(\mathbf{x})\)</span> 在 <span
class="math inline">\(\mathbf{x}\)</span> 处沿 <span
class="math inline">\(\mathbf{d}\)</span> 的方向导数为 <span
class="math display">\[
\frac{\partial f}{\partial \mathbf{d}}(\mathbf{x})=\frac{\mathrm{d}
f(\mathbf{x}+\alpha\mathbf{d})}{\mathrm{d}\alpha}=\nabla
f(\mathbf{x})^{\top} \mathbf{d}.
\]</span> <span class="math inline">\(\square\)</span></p>
<p>方向导数描述了函数 <span class="math inline">\(f(\mathbf{x})\)</span>
在 <span class="math inline">\(\mathbf{x}\)</span> 处沿 <span
class="math inline">\(\mathbf{d}\)</span> 方向变化的快慢,
我们自然关注函数在何方向变化得最快, 也即 <span
class="math inline">\(\mathbf{d}\)</span> 满足什么条件 <span
class="math inline">\(\nabla f(\mathbf{x})^{\top} \mathbf{d}\)</span>
最大. 由Cauchy-Schwartz不等式有 <span class="math inline">\(\|\nabla
f(\mathbf{x})^{\top} \mathbf{d}\|\le \|\nabla f(\mathbf{x})^{\top}
\|\|\mathbf{d}\|\)</span> 当且仅当 <span class="math inline">\(\nabla
f(\mathbf{x})^{\top}\)</span> 和 <span
class="math inline">\(\mathbf{d}\)</span> 在一个方向时取等,
也即在某点沿梯度方向函数 <span class="math inline">\(f(x)\)</span>
拥有最大的增长率, 同理 <span class="math inline">\(f(x)\)</span>
在某点的负梯度方向减小得最快.</p>
<p>这部分实际上是对微积分中多元变量微积分的推广,
因为大部分工科的教材在介绍黑塞矩阵时只给出了二元函数的情形.</p>
<p>下面我们给出某一点是多元函数的极小值点的一些必要条件与充分条件.</p>
<blockquote>
<p>虽然我们更关注的是在约束集 <span
class="math inline">\(\Omega\)</span> 内部的极小点,
但是难免会碰到在边界取得极小值的函数, 所以我们需要都考虑进去.</p>
</blockquote>
<h3 id="一阶必要条件">一阶必要条件</h3>
<p><strong>定理3 (一阶必要条件)</strong> 设 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span> 在开集 <span
class="math inline">\(\Omega\)</span> 上连续可微, 若 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 是函数 <span
class="math inline">\(f\)</span> 在 <span
class="math inline">\(\Omega\)</span> 上的局部极小点, 则对 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 的任意可行方向 <span
class="math inline">\(\mathbf{d}\)</span> 都有 <span
class="math inline">\(\mathbf{d}^{\top} \nabla f(\mathbf{x}^{\ast})\ge
0.\)</span> <span class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 对任意 <span
class="math inline">\(\alpha&gt; 0\land \mathbf{x}^{\ast}+\alpha
\mathbf{d}\in\Omega,\)</span> 有 <span
class="math inline">\(f(\mathbf{x}^{\ast}+\alpha\mathbf{d})\ge
f(\mathbf{x})\)</span> 成立, 由Taylor展开有 <span
class="math display">\[
\nabla f(\mathbf{x}^{\ast})^{\top} \mathbf{d}+\frac{o(\alpha\|\mathbf{d}
\|)}{\alpha}\ge 0.
\]</span> 取 <span class="math inline">\(\alpha\to 0,\)</span> 便有
<span class="math inline">\(\nabla f(\mathbf{x}^{\ast})^{\top}
\mathbf{d}\ge 0\)</span> 也即 <span
class="math inline">\(\mathbf{d}^{\top} \nabla f(\mathbf{x}^{\ast})\ge
0.\)</span> <span class="math inline">\(\blacksquare\)</span></p>
<p>需要注意的是定理3中 <span class="math inline">\(x^{\ast}\)</span>
并不一定是在约束集内部, 所以我们不能断定 <span
class="math inline">\(\nabla f(x^{\ast})=\mathbf{0}.\)</span></p>
<p><strong>推论1</strong> 设 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span> 在开集 <span
class="math inline">\(\Omega\)</span> 上连续可微, 若 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 是函数 <span
class="math inline">\(f\)</span> 在 <span
class="math inline">\(\Omega\)</span> 上的局部极小值点<em>且为内点</em>,
则有 <span class="math inline">\(\nabla f(\mathbf{x}^{\ast})=
\mathbf{0}\)</span> 成立.</p>
<p><strong><em>PROOF</em></strong> 由于 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 为内点,
可行方向可以任取, 于是取 <span class="math inline">\(\mathbf{d}\)</span>
和 <span class="math inline">\(\mathbf{-d},\)</span> 就有 <span
class="math inline">\(\mathbf{d}^{\top} \nabla f(\mathbf{x}^{\ast})\ge
0,-\mathbf{d}^{\top} \nabla f(\mathbf{x}^{\ast})\ge 0,\)</span>
这就表明了 <span class="math inline">\(\mathbf{d}^{\top} \nabla
f(\mathbf{x}^{\ast})= 0,\)</span> 而 <span
class="math inline">\(\mathbf{d}\)</span> 是任意的, 那么有 <span
class="math inline">\(\nabla f(\mathbf{x}^{\ast})=\mathbf{0}\)</span>
成立. <span class="math inline">\(\blacksquare\)</span></p>
<p>值得注意的是 <span class="math inline">\(\nabla
f(\mathbf{x}^{\ast})=0\)</span> 的点 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 被称作为驻点,
并不一定是极值点, 比如马鞍面(双曲抛物面)的鞍点.</p>
<h3 id="二阶必要条件">二阶必要条件</h3>
<blockquote>
<p>这里和前面一样要注意局部极小点可能在边界处.</p>
</blockquote>
<p><strong>定理4 (二阶必要条件)</strong> 设 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span> 在约束集
<span class="math inline">\(\Omega\subset \mathbb{R}^n\)</span>
上二阶连续可微, 若 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 是函数 <span
class="math inline">\(f\)</span> 在 <span
class="math inline">\(\Omega\)</span> 上的局部极小值点, 且对某个可行方向
<span class="math inline">\(\mathbf{d}\)</span> 有 <span
class="math inline">\(\mathbf{d}^{\top} \nabla
f(\mathbf{x^{\ast}})=0,\)</span> 那么就有 <span
class="math inline">\(\mathbf{d}^{\top} \nabla^2
f(\mathbf{x}^{\ast})\mathbf{d}\ge 0\)</span> 成立. <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 由 <span
class="math inline">\(\mathbf{d}^{\top} \nabla
f(\mathbf{x^{\ast}})=0\)</span> 可得 <span class="math inline">\(\nabla
f(\mathbf{x^{\ast}})^{\top} \mathbf{d}=0,\)</span> 由于 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 是极小点, 于是当正数
<span class="math inline">\(\alpha\)</span> 充分小时一定有 <span
class="math inline">\(f(\mathbf{x}^{\ast}+\alpha\mathbf{d})\ge
f(\mathbf{x}^{\ast}),\)</span> 于是对 <span
class="math inline">\(f(\mathbf{x}^{\ast}+\alpha\mathbf{d})\)</span>
进行Taylor展开, 有 <span class="math display">\[
f(\mathbf{x}^{\ast}+\alpha \mathbf{d})=f(\mathbf{x}^{\ast})+\alpha\nabla
f(\mathbf{x}^{\ast})^{\top}
\mathbf{d}+\frac{1}{2}\alpha^2\mathbf{d}^{\top}
\nabla^2f(\mathbf{x})\mathbf{d}+o(\alpha^2\|\mathbf{d}\|^2)\ge
f(\mathbf{x}^{\ast})
\]</span> 化简有 <span
class="math inline">\(\frac{1}{2}\alpha^2\mathbf{d}^{\top}
\nabla^2f(\mathbf{x})\mathbf{d}+o(\alpha^2\|\mathbf{d}\|^2)\ge
0,\)</span> 于是 <span class="math display">\[
\mathbf{d}^{\top} \nabla^2
f(\mathbf{x}^{\ast})\mathbf{d}+\frac{o(\alpha^2\|\mathbf{d}\|^2)}{2\alpha^2}\ge
0,
\]</span> 取 <span class="math inline">\(\alpha \to 0\)</span> 即得结论.
<span class="math inline">\(\blacksquare\)</span></p>
<p><strong>推论2</strong> 设 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span> 在约束集
<span class="math inline">\(\Omega\subset \mathbb{R}^n\)</span>
上二阶连续可微, 若 <span
class="math inline">\(\mathbf{x}^{\ast}\)</span> 是函数 <span
class="math inline">\(f\)</span> 在 <span
class="math inline">\(\Omega\)</span> 上的局部极小值点<em>且为内点</em>,
则对任意可行方向 <span class="math inline">\(\mathbf{d}\)</span> 都有
<span class="math inline">\(\mathbf{d}^{\top} \nabla^2
f(\mathbf{x}^{\ast})\mathbf{d}\ge 0\)</span> 成立, 即黑塞矩阵半正定.
<span class="math inline">\(\square\)</span></p>
<p>证明推论只需要用到一阶必要条件和二阶必要条件即可.</p>
<h3 id="充分条件">充分条件</h3>
<p><strong>引理1 (瑞利不等式)</strong> 设 <span
class="math inline">\(\mathbf{P}\in\mathbb{R}^{n\times n}\)</span>
是实对称矩阵, 则 <span class="math display">\[
\lambda_{\min}(\mathbf{P})\|\mathbf{x}\|^2\le \mathbf{x}^{\top}
\mathbf{Px}\le \lambda_{\max} \|\mathbf{x}\|^2.
\]</span> <span class="math inline">\(\square\)</span></p>
<p><strong>定理5</strong> 设 <span
class="math inline">\(f:\mathbb{R}^n\to\mathbb{R}\)</span> 在 <span
class="math inline">\(\Omega\)</span> 上二阶连续可微, <span
class="math inline">\(x^{\ast}\)</span> 是约束集的一个内点, 若 <span
class="math inline">\(\nabla f(x^{\ast})=0\)</span> 且在 <span
class="math inline">\(x^{\ast}\)</span> 处的黑塞矩阵 <span
class="math inline">\(F(x^{\ast})\)</span> 正定, 则 <span
class="math inline">\(x^{\ast}\)</span> 为 <span
class="math inline">\(f\)</span> 的一个严格局部极小点. <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 对任意的且范数充分小的可行方向 <span
class="math inline">\(d\)</span> , 对 <span
class="math inline">\(f(x^{\ast}+ d)\)</span> 进行Taylor展开有 <span
class="math display">\[
f(x^{\ast}+d)=f(x^{\ast})+\frac{1}{2}d^{\top} F(x^{\ast})d+o(\|d\|^2),
\]</span> 由于 <span class="math inline">\(F(x^{\ast})\)</span> 正定,
故由瑞利不等式有 <span class="math inline">\(d^{\top} F(x^{\ast})d\ge
\lambda_{\min}(F(x^{\ast}))\|d\|^2&gt;0,\)</span> 且在 <span
class="math inline">\(\|d\|\)</span> 充分小时, 有 <span
class="math inline">\(\|d\|^2&gt;|o(\|d\|^2)|,\)</span> 这表明了 <span
class="math display">\[
\frac{1}{2}d^{\top} F(x^{\ast})d+o(\|d\|^2)&gt;0,
\]</span> 这也就意味着对任意可行方向 <span
class="math inline">\(d\)</span> 都有 <span
class="math inline">\(f(x^{\ast}+d)&gt;f(x^{\ast}),\)</span>
这也就表明了 <span class="math inline">\(x^{\ast}\)</span>
为严格局部极小点. <span class="math inline">\(\blacksquare\)</span></p>
<h2 id="补充-对矩阵求导">补充: 对矩阵求导</h2>
<p>设 <span class="math inline">\(f:\R^{m\times n}\to \R,\)</span> 且
<span class="math inline">\(X=(x_{ij}),\)</span> 定义 <span
class="math display">\[
\nabla_{X}f(X)=\frac{\partial f}{\partial X}=\left(\frac{\partial
f}{\partial x_{ij}}\right)
\]</span> 常见的 <span class="math inline">\(f\)</span>
是矩阵的迹(trace), 即 <span
class="math inline">\(f(X)=\operatorname{tr}(X),X\in\R^{n\times
n},\)</span> 下面是一些公式:</p>
<p>1: <span class="math inline">\(\displaystyle \nabla_X
\operatorname{tr}(AX)=A^T,A\in \R^{n\times m}.\)</span> <span
class="math display">\[
\nabla_X \operatorname{tr}(AX)=\left(\frac{\partial}{\partial
x_{ij}}\sum_{k=1}^{n}\sum_{l=1}^ma_{kl}x_{lk}\right)=(a_{ji})=A^T
\]</span> 2: <span
class="math inline">\(\nabla_X\operatorname{tr}(X^TX)=\nabla_X\operatorname{tr}(XX^T)=2X.\)</span>
<span class="math display">\[
\begin{aligned}
\nabla_X \operatorname{tr}(X^TX)
&amp;=\left(\frac{\partial}{\partial
x_{ij}}\sum_{k=1}^{n}\sum_{l=1}^mx_{lk}^2\right)\newline{}
&amp;=2(x_{ij})\newline{}
&amp;=2X
\end{aligned}
\]</span> 3: <span class="math inline">\(\nabla_X
\operatorname{tr}(X^TQX)=QX+Q^TX,Q\in\R^{m\times m}.\)</span></p>
<p>令 <span
class="math inline">\(X=(\vec{x}_1,\cdots,\vec{x}_n),\vec{x}_i\in
\R^m,\)</span> 则 <span class="math display">\[
\begin{aligned}
\nabla_X \operatorname{tr}(X^TQX)
&amp;=\left(\frac{\partial}{\partial
x_{ij}}\sum_{k=1}^n\vec{x}_k^TQ\vec{x}_k\right)\newline{}
&amp;=\left(\sum_{l=1}^m (q_{il}+q_{li})x_{lj}\right)\newline{}
&amp;=\left(\sum_{l=1}^m q_{il}x_{lj}\right)+\left(\sum_{l=1}^m
q_{li}x_{lj}\right)\newline{}
&amp;=QX+Q^TX
\end{aligned}
\]</span> 如果 <span class="math inline">\(Q\)</span> 为对称阵则 <span
class="math inline">\(\nabla_X\operatorname{tr}(X^TQX)=2QX.\)</span></p>
<p>4: <span class="math inline">\(\nabla_X\operatorname{tr}
(XAX^TB)=BXA+B^TXA^T,A\in\R^{n\times n},B\in\R^{m\times m}.\)</span></p>
<p>5: <span class="math inline">\(\nabla_{X^T} f(X)=(\nabla_X
f(X))^T.\)</span></p>
<p>直接根据定义证即可.</p>
<p>6: <span class="math inline">\(\nabla_X\det
(X)=\det(X)(X^{-1})^T,X\in\R^{n\times n},\det(X)\ne 0.\)</span> 也就是
<span class="math inline">\(\nabla_X\det(X)=(X^*)^T,\)</span> <span
class="math inline">\(X^*\)</span> 为 <span
class="math inline">\(X\)</span> 的伴随矩阵. 根据行列式展开定义证明即可,
即沿 <span class="math inline">\(x_{ij}\)</span> 展开后 <span
class="math inline">\(x_{ij}\)</span> 的系数为 <span
class="math inline">\(x_{ij}\)</span> 的代数余子式 <span
class="math inline">\(X_{ij},\)</span> 于是 <span
class="math inline">\((X_{ij})=(X^*)^T.\)</span></p>
<p>1, 2, 3和对向量求导的结果是一致的.</p>
<p>实值函数对矩阵的高阶导数需要借助张量表示.</p>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Peter D. Lax, Maria Shea Terrell: <em>Multivariable
Calculus with Applications</em>.<a href="#fnref1" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>Optimization</category>
      </categories>
  </entry>
  <entry>
    <title>操作系统概述</title>
    <url>/2023/07/25/junior_first_semester/OS/1-introduction/</url>
    <content><![CDATA[<blockquote>
<p>希望能坚持。</p>
</blockquote>
<p><a href="http://xv6.dgs.zone/">xv6-book</a></p>
<p><a
href="https://mit-public-courses-cn-translatio.gitbook.io/mit6-s081/">course</a></p>
<h1 id="课程要求">课程要求</h1>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308291031258.jpg"
alt="课时构成" />
<figcaption aria-hidden="true">课时构成</figcaption>
</figure>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308291033840.jpg"
alt="成绩组成" />
<figcaption aria-hidden="true">成绩组成</figcaption>
</figure>
<h2 id="课程主要内容">课程主要内容</h2>
<ol type="1">
<li>操作系统概述</li>
<li>进程管理</li>
<li>存储管理</li>
<li>设备管理</li>
<li>文件管理</li>
</ol>
<h1 id="概述">概述</h1>
<p>操作系统的三个目标：</p>
<ul>
<li>方便: 使计算机更容易使用.</li>
<li>有效: 以更有效的方式使用计算机系统资源.</li>
<li>扩展能力: 在不妨碍服务的前提下, 有效地开发,
测试和引入新的系统功能.</li>
</ul>
<p>它提供了下面的服务:</p>
<ul>
<li>程序开发</li>
<li>程序运行</li>
<li>I/O 设备访问</li>
<li>文件访问控制</li>
<li>系统访问</li>
<li>错误检测和响应</li>
<li>记账</li>
</ul>
<p>三种重要接口是 ISA, ABI, API.</p>
<p>由于计算机可以看作是一组资源, 因此操作系统可以看作是资源管理器,
控制计算机的基本功能, 但是是一种不同寻常的控制:</p>
<ul>
<li>操作系统是由处理器执行的一段程序或者一组程序</li>
<li>操作系统经常<strong>会<em>释放</em>控制</strong>,
而且<strong>必须依赖处理器 (processor) 才能恢复控制</strong>.
操作系统控制处理器使用其他系统资源, 并控制其他程序的执行时机.
其实就是不同程序对处理器的占用调度分配.</li>
</ul>
<p>因此 OS 需要完成的资源管理包括:</p>
<ul>
<li><p><strong>内存</strong>的分配管理</p></li>
<li><p><strong>I/O</strong>的访问控制</p></li>
<li><p>对<strong>文件</strong>的访问控制和使用</p></li>
<li><p>对<strong>处理器</strong>的分配</p></li>
</ul>
<p>操作系统通过接口向用户提供服务.</p>
<h2 id="可扩展性">可扩展性</h2>
<p>操作系统因下面的特性而不断发展:</p>
<ul>
<li>硬件升级和新型硬件的出现</li>
<li>新服务</li>
<li>纠错: 引入<strong>补丁</strong>(patch)纠错. ( patch
本身也会引入新的错误 )</li>
</ul>
<h1 id="发展历史">发展历史</h1>
<p>监控程序的功能:</p>
<p>作业的自动续接</p>
<ul>
<li>内存保护</li>
<li>定时器</li>
<li>特权指令</li>
<li>中断</li>
</ul>
<p>两种运行模式:</p>
<ul>
<li>用户模式: 不允许执行特权指令</li>
<li>内核模式: 可执行特权指令以及访问受保护的内存区域.</li>
</ul>
<blockquote>
<p>1: 为什么要有两种运行模式(user mode 和 kernel mode)?</p>
<p>答: 为了安全性(保护操作系统重要的数据结构,
防止在用户模式下访问到关键的内存执行到关键的指令,
而对操作系统造成破坏)/错误隔离/性能优化.</p>
<p>2: 如何知道当前是哪种模式?</p>
<p>答: 通过特殊的处理器状态标志(存在寄存器中)以及硬件机制来判断.
类似的有状态字寄存器PSW.</p>
</blockquote>
<p>batch processing 指的是一批作业要能自动处理完成,
也就是完成一个作业之后要能够自动续接.</p>
<p>简单批处理系统通过串行处理, 是 <strong>读-执行指令-写</strong>
的串行序列(处理器必须等待I/O完成后才能继续处理),
实际利用的时间只有执行指令的时间, 其他时间都在等I/O,
而执行指令的速度非常快, 导致系统利用率非常低.</p>
<p>多道批处理(batch processing)系统就是<strong>并发</strong>处理,
处理器在空闲时间去执行其他指令. 这其中比较重要的硬件是I/O中断和DMA.
除此之外, 由于需要并行处理, 因此需要将待执行的若干作业存储起来,
需要<strong>内存管理</strong>,
也需要设计合适的<strong>调度算法</strong>(作业调度程序负责).</p>
<blockquote>
<p>1: 并发和并行的区别:</p>
<ul>
<li>并发指的是在<strong>一段时间</strong>内可以同时执行若干作业.</li>
<li>并行指的是某一时刻可以同时执行.</li>
</ul>
<p>并行可以看作是并发的子集.</p>
<p>2: 为什么在多道批处理中需要有中断和DMA的支持?</p>
<ul>
<li>中断: 当I/O完成后操作系统会正在进行I/O操作的进程发出I/O中断,
处理器被中断, 操作系统接管对处理器的控制权.</li>
<li>DMA: 由于作业存在存储器中, 因此需要频繁地直接访问存储器,
而DMA可以<strong>允许外设直接访问系统内存</strong>, 不需要CPU接入,
可以大大提高数据传输的效率.</li>
</ul>
<p>计组没学好是这样的😭</p>
</blockquote>
<p><strong>分时系统</strong>:</p>
<ul>
<li>采用多道程序设计技术处理多个交互作业</li>
<li>多个用户共享处理器时间</li>
<li>多个用户可以通过终端同时访问系统(操作系统控制<strong>用户程序</strong>在很短的时间内<strong>交替</strong>执行)</li>
<li>时间片技术.</li>
</ul>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308311103888.png" style="zoom: 50%;" /></p>
<blockquote>
<p>分时与多道的联系是什么? 分时是在多道的基础上设计的,
都是为了提高处理器利用率.</p>
</blockquote>
<h2 id="进程">进程</h2>
<p>1: 什么是进程?</p>
<ul>
<li>一个<strong>正在执行</strong>的程序.</li>
<li>计算机中<strong>正在运行</strong>的程序的一个<strong>实体</strong></li>
<li>可分配给处理器并由处理器执行的一个实体</li>
<li>由 一个单一顺序线程, 一个当前状态, 一组相关系统资源
所<strong>表征</strong>的活动单元. 表征是什么意思?
活动单元又是什么意思?</li>
</ul>
<p>可以看到进程是一个动态的概念.</p>
<blockquote>
<ol type="1">
<li><p>什么是线程?</p>
<p>答:
线程是计算机程序中的一种执行单元，它是进程的一部分。一个进程可以包含多个线程，每个线程独立执行特定的任务。与进程不同的是，线程共享相同的内存空间，可以直接访问进程的资源和数据。</p></li>
<li><p>什么叫做表征? 什么叫做活动单元?</p>
<p>答: 表征就是表示的意思.</p></li>
</ol>
</blockquote>
<p>2: 为什么要有进程? (实际上是类似于数据库中事务的特性)
可能会存在下面的问题:</p>
<ul>
<li>不正确的同步</li>
<li>失败的互斥</li>
<li>不确定的程序操作</li>
<li>死锁</li>
</ul>
<p>3: 进程的组成.</p>
<ul>
<li>一段可执行的程序</li>
<li>程序所需要的数据</li>
<li>程序执行的<strong>上下文(进程状态,
操纵系统用来管理和控制进程所需的所有数据)</strong>,
是一个比较复杂的数据结构.</li>
</ul>
<p>线程是什么?</p>
<p>什么是进程挂起?</p>
<h2 id="内存管理">内存管理</h2>
<p>操作系统使用</p>
<ul>
<li><strong>虚拟内存</strong>(允许程序以逻辑方式访问存储器,
"以逻辑方式"的含义是不考虑物理内存可用的空间数量)</li>
<li><strong>文件系统</strong>(实现长期存储)</li>
</ul>
<p>来实现下面的功能:</p>
<ul>
<li>进程隔离</li>
<li>自动分配和管理</li>
<li>支持模块化程序设计</li>
<li>保护和访问呢控制</li>
<li>长期存储</li>
</ul>
<p>分页机制用来解决<strong>因进程大小不一致难以将进程紧密地压入内存</strong>的问题,
同时:</p>
<ul>
<li><p>提供了虚地址和物理地址之间的<strong>动态映射</strong></p></li>
<li><p>进程由若干固定大小的<strong>页</strong>组成</p></li>
<li><p>程序通过虚地址访存<strong>字</strong>,
虚地址由<strong>页号</strong>和<strong>页中的偏移量</strong>(类似在词典查阅单词的方式)组成</p></li>
</ul>
<h2 id="信息保护和安全">信息保护和安全</h2>
<p>四类典型安全问题:</p>
<ul>
<li>可用性: 保护系统不被中断</li>
<li>保密性: 保证用户不能读取未授权访问的数据</li>
<li>数据完整性: 保护数据不被未授权修改</li>
<li>认证: 设计用户的身份的正确认证和消息或数据的合法性</li>
</ul>
<h2 id="调度和资源管理">调度和资源管理</h2>
<p>任何资源分配和调度策略都必须考虑三个因素:</p>
<ul>
<li>公平性</li>
<li>有差别的响应性: 区分提供不同服务的部件</li>
<li>有效性:
获得<strong>最大吞吐量</strong>和<strong>最小响应时间</strong>;
在分时情形下, 可以容纳尽可能多的用户.</li>
</ul>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309071056621.png" style="zoom: 50%;" /></p>
<h1 id="现代操作系统的特征">现代操作系统的特征</h1>
<p><span class="math inline">\(\it 1.\)</span> <strong>微内核</strong>:
只给内核分配一些最基本的功能, 包括<strong>地址空间</strong>,
<strong>进程间通信</strong>和<strong>基本的调度</strong>, 优点是</p>
<ul>
<li>简化了实现</li>
<li>提供了灵活性</li>
<li>适用于分布式环境.</li>
</ul>
<p><span class="math inline">\(\it 2.\)</span> <strong>多线程</strong>:
把执行一个应用程序的进程划分为可以同时在运行的多个线程.</p>
<blockquote>
<p>线程是什么? 线程和进程的区别是什么?</p>
</blockquote>
<p><span class="math inline">\(\it 3.\)</span>
<strong>对称多处理</strong>:</p>
<ul>
<li>多个进程和线程可以并行运行</li>
<li>多个处理器对用户来讲是透明的(共享内存和I/O并可执行同一任务)</li>
<li>操作系统在不同的处理器上调度不同的进程或线程,
并负责它们之间的同步</li>
</ul>
<p>优点:</p>
<ul>
<li>性能: 多个处理器可以在不同的处理器上同时运行</li>
<li>可用性: 单个处理器的失效不会导致机器停止</li>
<li>渐增性: 系统性能可以随着添加新的处理器而提高</li>
<li>扩展性: 生产商根据处理器的数量提供不同价格与性能的产品.</li>
</ul>
<p><span class="math inline">\(\it 4.\)</span> 分布式操作系统</p>
<p><span class="math inline">\(\it 5.\)</span> 面向对象的设计</p>
<h1 id="容错性">容错性</h1>
<p>容错性指系统或部件发生软硬件错误时, 能够继续正常运行的能力.
操作系统采用下面的技术提高容错性:</p>
<ul>
<li>进程隔离: 进程的内存, 文件存取和执行过程相互隔离</li>
<li>并发机制: 保证进程通信或协作时的正确性</li>
<li>虚拟机</li>
<li>检测点(一个 backup)和回滚机制 (退回检测点)
(和数据库的事务部分很像)</li>
</ul>
<h1
id="多处理器和多核操作系统设计考虑因素">多处理器和多核操作系统设计考虑因素</h1>
<p>什么八股文, 不想写了.</p>
<h1 id="进程-1">进程</h1>
<p><strong>进程都有什么状态? 进程的这些状态是如何互相转换的?
产生这些转换的原因是什么? 操作系统管理控制进程都需要哪些信息? </strong>
<span class="math display">\[
重点:进程状态图, 进程控制块
\]</span></p>
<p>进程的两个基本元素:
<strong>程序代码</strong>与<strong>和代码相关的一组数据</strong>,
除此之外还有<strong>进程控制块(PCB)</strong>, 进程控制块:</p>
<ul>
<li>包含了进程的元素</li>
<li>可以中断和恢复进程的执行(好像中断从未发生过一样)</li>
<li>由操作系统创建和管理</li>
<li>是支持多进程的重要工具</li>
</ul>
<p>进程执行的任意时刻, 都可以 用 <strong>标识符, 状态, 优先级,
程序计数器, 内存指针, 上下文数据, I/O状态信息, 记账信息(处理器时间总和,
使用的时钟数总和, 时间限制, 记帐号等)</strong> 这些元素来表征,
这些元素存在 PCB 中.</p>
<p>进程的基本特征:</p>
<ul>
<li>动态性: <strong>本质特征</strong></li>
<li>并发性</li>
<li>独立性: 各进程的地址空间相互独立,
<strong>除非采用进程间通信手段</strong></li>
<li>异步性: 按各自独立的不可预知的速度向前推进</li>
</ul>
<blockquote>
<p><strong>异步</strong>是什么意思?</p>
</blockquote>
<blockquote>
<p>进程和程序的区别是什么?</p>
<p>答: 进程=进程控制块+程序+相关数据. 进程动态而程序静态,
注意进程和程序之间不存在一一对应关系(一个应用程序可以对应多个进程的执行,
在 Windows 的任务管理器中可以看到例子).</p>
</blockquote>
<h2 id="进程状态">进程状态</h2>
<p>如何描述进程? 列出进程执行的指令序列, 可以描述单个进程的行为,
这样的指令序列被称为进程<strong>轨迹(trace)</strong>.</p>
<p>定义进程的轨迹后,
可以用<strong>多个进程执行的轨迹</strong>来描述处理器的行为,
分派器可以将处理器从一个进程切换到另一个进程.</p>
<h3 id="进程的两状态模型">进程的两状态模型</h3>
<p>进程有<strong>运行态</strong>和<strong>非运行态</strong>.</p>
<p>进程的创建和终止</p>
<h3 id="五状态模型">五状态模型</h3>
<p>将非运行态分为两个状态: 就绪态(ready)和阻塞态(blocked),
一共是五个状态:</p>
<ul>
<li>运行态</li>
<li>就绪态</li>
<li>阻塞态</li>
<li>新建态</li>
<li>退出态</li>
</ul>
<h2 id="进程描述">进程描述</h2>
<blockquote>
<p>这部分关注的信息是, 操作系统要控制并管理资源, 需要哪些信息?
用什么结构来控制和管理? 如果这个资源是<strong>进程</strong>,
信息具体是什么呢? 管理进程的具体结构是什么?</p>
</blockquote>
<p>进程的物理存在是:
<strong>进程的位置</strong>和<strong>进程的属性</strong>,
操作系统通过这两点管理和控制进程.</p>
<p><strong>PCB, Data, Stack, Code</strong> 的集合称为进程影像(process
image).</p>
<p>PCB 控制的元素包括:</p>
<ul>
<li><p><strong>进程标识信息</strong>,
典型的是<strong>标识符(ID)</strong>, 包括</p>
<ul>
<li>当前进程的PID</li>
<li>父进程的PID</li>
<li>用户ID</li>
</ul>
<p>用来对进程<strong>索引</strong>,
在做某些事的时候指明和区分每个进程.</p></li>
<li><p><strong>处理器状态信息</strong>, 主要是一些寄存器, 包括:</p>
<ul>
<li>用户可见寄存器(下面的两个寄存器用户不可见):
<strong>用户模式</strong>下机器语言可以访问的寄存器.</li>
<li>控制和状态寄存器, 就是 PSW, 需要参考计组中的内容.</li>
<li>栈指针: 栈保存参数和过程调用或系统调用的<strong>地址</strong>,
栈指针指向栈顶.</li>
</ul></li>
<li><p>进程控制信息:
操作系统控制和协调各种活动进程所需的额外信息.</p></li>
</ul>
<h2 id="进程控制">进程控制</h2>
<blockquote>
<p>这部分探讨的问题是,
操作系统是如何<strong>具体</strong>管理和控制进程的?
这包括进程的<strong>创建</strong>和<strong>切换</strong>, 是如何创建的?
因为什么发生了进程切换? 以及:</p>
<ul>
<li>进程创建时<strong>操作系统</strong>和<strong>进程</strong>会出现哪些变化?</li>
<li>进程切换时操作系统和进程会出现哪些变化?</li>
</ul>
</blockquote>
<p><strong>使用两种模式的原因是保护操作系统和重要的操作系统表(如PCB)不受用户程序的干扰.</strong></p>
<p>模式切换的原因是<strong>系统调用</strong>或者<strong>中断</strong>:</p>
<p>中断出现 <span class="math inline">\(\to\)</span>
PC置为中断处理程序的开始地址 <span class="math inline">\(\to\)</span>
user转为kernel, 以便中断处理<strong>能执行特权指令</strong>.</p>
<p>模式切换不一定导致进程切换, 比如 I/O 中断来了之后, 处理完 I/O
中断还会继续处理原进程. 还有 <code>getpid()</code>.</p>
<p>如果当前的进程状态变化(就绪或阻塞), 则回进程切换.</p>
<p><strong>进程切换的步骤:</strong></p>
<p><em>1.</em> 保存处理器<strong>上下文环境</strong>,
保存到<strong>PCB</strong>中.</p>
<p><em>2.</em> 更新当前处于运行状态的PCB.</p>
<p><em>3.</em> 将进程的PCB已知相应队列</p>
<p><em>4.</em> 选择另一个进程执行</p>
<p><em>5.</em>
更新PCB的信息(原来的进程信息改成切换成的新的进程的信息)</p>
<p><em>6.</em> 更新内存管理数据结构</p>
<p><em>7.</em> 恢复被选择进程的上下文环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">  A--&gt;B;</span><br><span class="line">  A--&gt;C;</span><br><span class="line">  B--&gt;D;</span><br><span class="line">  C--&gt;D;</span><br></pre></td></tr></table></figure>
<h2 id="unix-svr4">UNIX SVR4</h2>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309141154715.png"
alt="UINX进程状态转换图" />
<figcaption aria-hidden="true">UINX进程状态转换图</figcaption>
</figure>
<p>用文字描述上图的状态转换.</p>
<h3 id="fork"><code>fork()</code></h3>
<p>一个进程使用系统调用 <code>fork</code> 来创建一个新的进程,
新的进程称为子进程, 其内存内容与调用它的进程(称为父进程)相同.
在父进程中, <code>fork</code> 返回子进程的PID, 在子进程中,
<code>fork</code> 返回零. 子进程会复制父进程的 image,
拥有<strong>一份独立的 copy</strong>.</p>
<p>调用 <code>fork()</code> 之后, 从 <code>fork</code> 所在的语句开始,
下面的所有语句将同时在父子进程中执行.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> global = <span class="number">4</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span>  pid; </span><br><span class="line">    <span class="type">int</span> vari = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;before fork\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ((pid = fork()) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fork error\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">    global++;</span><br><span class="line">    vari--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;global=%d,vari=%d\n&quot;</span>, global, vari);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这段代码中, 即使 <code>global</code> 是全局变量, 但是子进程中对
<code>global</code> 的改变不会影响父进程中 <code>global</code> 的值.</p>
<h1 id="线程">线程</h1>
<p><strong>多线程</strong>是指在操作系统在<strong>单个进程</strong>内支持<strong>多个并发执行路径</strong>的能力.</p>
<p>线程是进程中的一个实体, 是独立调度和分派的基本单位.</p>
<p>线程与特征极为相似, 线程所具有的特征为:</p>
<ul>
<li>线程执行状态</li>
<li>未运行时保存的线程上下文. 这个上下文是什么?
是<strong>寄存器的环境</strong>. 为什么要保存未运行时的上下文?
为了便于下一次调用时恢复信息.</li>
<li>执行栈</li>
<li>静态存储空间, 以及与进程内其他线程共享的内存和资源的访问</li>
</ul>
<p>进程中所有的线程共享该进程的状态和资源.</p>
<p>线程的优点是<strong>各方面</strong>的速度更快, 包括</p>
<ul>
<li><p>创建</p></li>
<li><p>终止</p></li>
<li><p>线程间切换</p></li>
<li><p>通信</p>
<p>​</p></li>
</ul>
<h1 id="作业1">作业1</h1>
<p>1.归纳整理操作系统的基本功能。</p>
<blockquote>
<p>作为资源管理器, 包括内存的分配管理, I/O的访问控制, 对文件的访问控制,
对处理器的分配.</p>
</blockquote>
<p>2.论述批处理、分时和实时三种操作系统的<strong>基本特征</strong>。</p>
<blockquote>
<p>批处理: 有监控程序, 对一批程序进行自动处理,
分为简单批处理和多道批处理</p>
<ul>
<li>简单批处理: 处理器必须等待I/O指令完成才能继续处理,
处理器经常处于空闲状态</li>
<li>多道批处理: 多道性, 调度性, 无序性, 无交互能力</li>
</ul>
<p>分时: 多路性, 独立性, 及时性, 交互性</p>
<p>实时: 可确定性, 可响应性, 用户控制, 可靠性, 故障弱化能力</p>
</blockquote>
<p>3.为什么会有进程？分析理解进程的概念、上下文的含义。</p>
<blockquote>
<p>进程存在的原因是, 系统中在同一时间会有许多作业在运行,
为了防止不正确的同步/失败的互斥/不正确的程序操作/死锁等情况的发生,
需要设计系统级的机制来监控各个作业的运行.</p>
</blockquote>
<p>4.论述现代操作系统的特征。</p>
<p>5.解释单体内核和微内核的区别。</p>
<p>6.进程调度程序、时钟中断处理程序和命令解释程序在哪种模式下执行？</p>
<blockquote>
<p>进程调度程序和时钟中断程序: 内核模式</p>
<p>命令解释程序: 用户模式 (比如shell中的命令)</p>
</blockquote>
<p>7.分析系统调用时的模式切换过程？</p>
<h1 id="作业2">作业2</h1>
<blockquote>
<p>需要注意题目前的<strong>论述</strong>二字, 一定要详细说明.</p>
</blockquote>
<p>1.论述程序、进程、线程的区别与联系</p>
<p>2.论述进程控制块(PCB)的作用、存储内容</p>
<p>3.论述进程的基本特征</p>
<p>4.以图为例，分析五状态进程模型</p>
<p>5.为什么引入挂起状态，其与阻塞状态的本质区别是什么？</p>
<p>6.论述进程切换与模式切换的区别。什么情况下会发生进程
切换，什么情况下会发生模式切换。</p>
<p>7.什么是中断？中断的处理过程如何？</p>
<p>8.什么是系统调用？</p>
<p>9.比较不同类型线程的优缺点。</p>
<p>10.说明fork()函数的作用，并举例说明。</p>
<h1 id="project">Project</h1>
<p>设计和实现一个基本的用户级线程库, 完成包括线程的创建, 撤销,
调度等基本功能, 对外提供接口, 同时设计测试用例, 对相关功能加以验证.</p>
<hr />
<p>Kernel: 一个为正在运行的程序提供服务的特殊的程序.
一台计算机只有一个内核.</p>
<p>正在运行的程序称为进程(process),
进程有包含指令、数据和堆栈的内存.</p>
<p>堆栈: 组织程序的过程调用.</p>
<p>进程调用内核服务时, 它会调用一个<strong>系统调用</strong>(system
call),
系统调用是指操作系统提供给应用程序的一组接口，用于访问操作系统的功能和资源.
它允许应用程序通过调用特殊的函数或指令请求操作系统来执行某些任务.</p>
<p>shell 是一个普通的用户程序, 不是内核的一部分,
从用户那里读取命令并执行.</p>
<p>内核提供的系统调用集合是用户程序看到的接口, 下面是 xv6 kernel
所有的系统调用.</p>
<table>
<colgroup>
<col style="width: 39%" />
<col style="width: 60%" />
</colgroup>
<thead>
<tr class="header">
<th><strong>系统调用</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>int fork()</code></td>
<td>创建一个进程，返回子进程(已有的进程创建的进程)的PID(进程标识符)</td>
</tr>
<tr class="even">
<td><code>int exit(int status)</code></td>
<td>终止当前进程(并释放资源,
比如内存和打开的文件)，并将状态报告给wait()函数。无返回, 通常0表示成功,
1表示失败</td>
</tr>
<tr class="odd">
<td><code>int wait(int *status)</code></td>
<td>等待一个子进程退出; 将退出状态存入*status; 返回子进程PID;
如果调用者没有子进程, 立刻返回 <code>-1</code>,
若不关注子进程的退出状态, 可以直接 <code>wait((int *)0)</code>.</td>
</tr>
<tr class="even">
<td><code>int kill(int pid)</code></td>
<td>终止对应PID的进程，返回 <span
class="math inline">\(0\)</span>，或返回 <span
class="math inline">\(-1\)</span> 表示错误</td>
</tr>
<tr class="odd">
<td><code>int getpid()</code></td>
<td>返回当前进程的PID</td>
</tr>
<tr class="even">
<td><code>int sleep(int n)</code></td>
<td>暂停 <span class="math inline">\(n\)</span> 个时钟节拍</td>
</tr>
<tr class="odd">
<td><code>int exec(char *file, char *argv[])</code></td>
<td>加载一个文件并使用参数执行它; 只有在出错时才返回</td>
</tr>
<tr class="even">
<td><code>char *sbrk(int n)</code></td>
<td>给进程的内存增加 <span class="math inline">\(n\)</span>
字节。返回新内存的起始地址</td>
</tr>
<tr class="odd">
<td><code>int open(char *file, int flags)</code></td>
<td>打开一个文件；flags表示read/write；返回一个fd（文件描述符）</td>
</tr>
<tr class="even">
<td><code>int write(int fd, char *buf, int n)</code></td>
<td>从buf 写n 个字节到文件描述符fd; 返回n</td>
</tr>
<tr class="odd">
<td><code>int read(int fd, char *buf, int n)</code></td>
<td>将n 个字节读入buf；返回读取的字节数；如果文件结束，返回0</td>
</tr>
<tr class="even">
<td><code>int close(int fd)</code></td>
<td>释放打开的文件fd</td>
</tr>
<tr class="odd">
<td><code>int dup(int fd)</code></td>
<td>返回一个新的文件描述符，指向与fd 相同的文件</td>
</tr>
<tr class="even">
<td><code>int pipe(int p[])</code></td>
<td>创建一个管道，把read/write文件描述符放在p[0]和p[1]中</td>
</tr>
<tr class="odd">
<td><code>int chdir(char *dir)</code></td>
<td>改变当前的工作目录</td>
</tr>
<tr class="even">
<td><code>int mkdir(char *dir)</code></td>
<td>创建一个新目录</td>
</tr>
<tr class="odd">
<td><code>int mknod(char *file, int, int)</code></td>
<td>创建一个设备文件</td>
</tr>
<tr class="even">
<td><code>int fstat(int fd, struct stat *st)</code></td>
<td>将打开文件fd的信息放入*st</td>
</tr>
<tr class="odd">
<td><code>int stat(char *file, struct stat *st)</code></td>
<td>将指定名称的文件信息放入*st</td>
</tr>
<tr class="even">
<td><code>int link(char *file1, char *file2)</code></td>
<td>为文件file1创建另一个名称(file2)</td>
</tr>
<tr class="odd">
<td><code>int unlink(char *file)</code></td>
<td>删除一个文件</td>
</tr>
</tbody>
</table>
<blockquote>
<p>call 和 invoke 的区别?</p>
</blockquote>
<h2 id="进程和内存">1.1 进程和内存</h2>
<p>一个进程使用系统调用 <code>fork</code> 来创建一个新的进程,
新的进程称为子进程, 其内存内容与调用它的进程(称为父进程)相同.
在父进程中, <code>fork</code> 返回子进程的PID, 在子进程中,
<code>fork</code> 返回零.</p>
]]></content>
  </entry>
  <entry>
    <title>组合数学（一）：一些问题&amp;排列与组合</title>
    <url>/2022/08/19/math/combinatorial-math/basic/</url>
    <content><![CDATA[<blockquote>
<p>组合数学是数数的艺术。</p>
</blockquote>
<h2 id="问题一棋盘的完美覆盖">问题一：棋盘的完美覆盖</h2>
<p>对于一个 <span class="math inline">\(m\times n\)</span>
的棋盘，能否用 <span class="math inline">\(b\times 1\)</span>
的长方形骨牌进行不重叠、不遗漏的完全覆盖？</p>
<p>结论是，能完美覆盖的充分必要条件是 <span class="math inline">\(b\mid
m\)</span> 或 <span class="math inline">\(b\mid n.\)</span></p>
<p>充分性的证明：即证明若 <span class="math inline">\(b\mid m\)</span>
或 <span class="math inline">\(b\mid n\)</span>
，则可以完美覆盖。这是显然的，不妨设棋盘是 <span
class="math inline">\(m\)</span> 行 <span
class="math inline">\(n\)</span> 列且 <span class="math inline">\(b\mid
m,\)</span> 那么将所有长方形骨牌竖着填充即可。</p>
<!--more-->
<p>必要性的证明：若棋盘能被完美覆盖，则 <span
class="math inline">\(b\mid m\)</span> 或 <span
class="math inline">\(b\mid n\)</span>.</p>
<p>利用染色进行证明。设每一个 <span class="math inline">\(b\times
1\)</span>
的长方型骨牌的每一格上有不同的颜色，则整个棋盘上每一种颜色的格子数目一定是相等的。在
<span class="math inline">\(b\times b\)</span>
的正方形棋盘中，考虑如下的颜色排列</p>
<p><img src="https://pic2.zhimg.com/v2-5483d98730778cb74be3f191f91059c5_r.jpg" alt="preview" style="zoom: 50%;" /></p>
<p>我们以这个 <span class="math inline">\(b\times b\)</span>
的棋盘为基础，进行填补 <span class="math inline">\(m\times n\)</span>
的棋盘。为了方便我们不妨令 <span class="math inline">\(m\le n\)</span>.
由带余除法知 <span class="math display">\[
m=bq_1+r_1,r_1\in[0,b)\\
n=bq_2+r_2,r_2\in[0,b)
\]</span> 于是把 <span class="math inline">\(m\times n\)</span>
的棋盘分为三个部分：上方的 <span class="math inline">\(bq_1\times
n\)</span> 的棋盘，左下方的 <span class="math inline">\(r_1\times
bq_2\)</span> 的棋盘和右下方的 <span class="math inline">\(r_1\times
r_2\)</span>棋盘。</p>
<blockquote>
<p>待补充。</p>
</blockquote>
<h2 id="问题二空间划分问题1">问题二：空间划分问题（1）</h2>
<p>给定 <span class="math inline">\(n\)</span>
条简单曲线（曲线可闭合，但不允许打结），求出这 <span
class="math inline">\(n\)</span>
条曲线最多能将平面划分为多少个区域。</p>
<p>对于可任意弯曲的曲线，我们能得到的区域数的最大值为 <span
class="math inline">\(2^n,\)</span> 即确保增加的第 <span
class="math inline">\(n\)</span> 条曲线 <span
class="math inline">\(\Gamma_n\)</span> 可以经过前 <span
class="math inline">\(n-1\)</span>
条曲线将平面分成的每一个区域，这样区域数呈指数增加，公比为 <span
class="math inline">\(2.\)</span>
下面我们考虑几种特殊的情况：直线与一些二次曲线，分析的基本思路是相同的。</p>
<h3 id="直线">直线</h3>
<p>增加的第 <span class="math inline">\(n\)</span> 条直线需要被前 <span
class="math inline">\(n-1\)</span> 条直线分为 <span
class="math inline">\(n\)</span> 个部分，而这 <span
class="math inline">\(n\)</span> 条射线或线段经过前 <span
class="math inline">\(n-1\)</span> 条直线分割成的 <span
class="math inline">\(a_{n-1}\)</span> 个区域区域中的 <span
class="math inline">\(n\)</span>
个区域，并将其分成两份，于是容易得到递推公式为 <span
class="math display">\[
a_n=a_{n-1}-n+2n=a_{n-1}+n,
\]</span> 因此 <span class="math display">\[
a_n=\frac{n^2+n+2}{2}
\]</span></p>
<h3 id="圆">圆</h3>
<p>两个圆最多有两个交点。对于第 <span class="math inline">\(n\)</span>
个圆 <span class="math inline">\(\Gamma_n\)</span>，它与前 <span
class="math inline">\(n-1\)</span> 个圆的每一个都有两个交点，于是一共有
<span class="math inline">\(2(n-1)\)</span> 个交点。这 <span
class="math inline">\(2(n-1)\)</span> 个点把圆 <span
class="math inline">\(\Gamma_n\)</span> 分成了 <span
class="math inline">\(2(n-1)\)</span> 段圆弧，而每一段圆弧都经过前 <span
class="math inline">\(n-1\)</span> 个圆分割成的若干区域区域中的 <span
class="math inline">\(2(n-1)\)</span> 个区域，并将其分成两份 ，因此
<span class="math display">\[
a_n=a_{n-1}-2(n-1)+4(n-1)=a_{n-1}+2(n-1)
\]</span> 于是 <span class="math display">\[
a_n=a_1+\sum_{k=2}^{n}2(k-1)=n^2-n+2.
\]</span></p>
<h3 id="椭圆">椭圆</h3>
<p>两个椭圆最多有 <span class="math inline">\(4\)</span>
个交点，将椭圆分为 <span class="math inline">\(4\)</span> 段。对于第
<span class="math inline">\(n\)</span> 个椭圆 <span
class="math inline">\(\Gamma_n,\)</span> 它与前 <span
class="math inline">\(n-1\)</span> 个椭圆有 <span
class="math inline">\(4(n-1)\)</span> 个交点，这些交点把 <span
class="math inline">\(\Gamma_n\)</span> 分成了 <span
class="math inline">\(4(n-1)\)</span> 条曲线段。在这 <span
class="math inline">\(4(n-1)\)</span>
条曲线段中，有四条特殊的曲线段，将它们分为两组，其中一组同时经过了最外围的区域，另一组同时经过了最里面的区域（这只是其中一种较为容易分析的一种画法）。对于另外
<span class="math inline">\(4(n-2)\)</span> 的曲线段，它们都经过了前
<span class="math inline">\(n-1\)</span> 个椭圆分割成的若干区域区域中的
<span class="math inline">\(4(n-2)\)</span> 个区域，并将其分成两份，于是
<span class="math display">\[
a_{n}=a_{n-1}-2+2\times 3-4(n-2)+8(n-2)=a_{n-1}+4(n-1),n\ge 2
\]</span> 因此 <span class="math display">\[
a_n=a_1+\sum_{k=2}^{n}4(n-1)=2n^2-2n+2
\]</span></p>
<h3 id="抛物线">抛物线</h3>
<p>两条抛物线最多可以有 <span class="math inline">\(4\)</span>
个交点，将抛物线分为 <span class="math inline">\(5\)</span> 段。对于第
<span class="math inline">\(n\)</span> 条抛物线 <span
class="math inline">\(\Gamma_n,\)</span> 它与前 <span
class="math inline">\(n-1\)</span> 个椭圆有 <span
class="math inline">\(4(n-1)\)</span> 个交点，这些交点把 <span
class="math inline">\(\Gamma_n\)</span> 分成了 <span
class="math inline">\(4n-3\)</span> 条曲线段。在这 <span
class="math inline">\(4n-3\)</span> 条曲线段中，有 <span
class="math inline">\(5\)</span>
条特殊的曲线段，其中三条同时经过了某个所有抛物线顶点附近的无界区域，另外两条同时经过了最里面的区域（这只是其中一种较为容易分析的一种画法）。对于另外
<span class="math inline">\(4n-8\)</span> 的曲线段，它们都经过了前 <span
class="math inline">\(n-1\)</span> 个椭圆分割成的若干区域区域中的 <span
class="math inline">\(4n-8\)</span> 个区域，并将其分成两份，于是 <span
class="math display">\[
a_n=a_{n-1}+(-1+3)+(-1+4)+(-(4n-8)+2(4n-8))=a_{n-1}+4n-3
\]</span> 于是 <span class="math display">\[
a_{n}=a_1+\sum_{k=2}^{n}(4n-3)=2n^2-n+1
\]</span></p>
<h3 id="直线和圆">直线和圆</h3>
<blockquote>
<p>待补充。</p>
</blockquote>
<h3 id="三维时的情形">三维时的情形</h3>
<h4 id="平面">平面</h4>
<p>第 <span class="math inline">\(n\)</span> 个平面 <span
class="math inline">\(\Gamma_n\)</span> 与前 <span
class="math inline">\(n-1\)</span> 个平面有 <span
class="math inline">\(n-1\)</span>
条交线，根据已有的二维时的情况，这些交线最多把 <span
class="math inline">\(\Gamma_n\)</span> 分成了 <span
class="math inline">\(\frac{n(n-1)}{2}+1\)</span>
个区域，而这些区域经过了前 <span class="math inline">\(n-1\)</span>
个平面分割成的若干区域中的 <span
class="math inline">\(\frac{n(n-1)}{2}+1\)</span>
个区域，并将其分成两份。于是 <span class="math display">\[
a_n=a_{n-1}+\frac{n(n-1)}{2}+1
\]</span> 于是 <span class="math display">\[
a_n=a_1+\sum_{k=2}^{n}\left(\frac{k(k-1)}{2}+1\right)=\frac{n(n-1)(n+1)}{6}+n+1=\frac{n^3+5n}{6}+1
\]</span></p>
<h3 id="m-维的情形"><span class="math inline">\(m\)</span> 维的情形</h3>
<p>求解三维时，我们很容易注意到不同维度之间存在着递推关系。设 <span
class="math inline">\(n\)</span> 个超平面最多可以将 <span
class="math inline">\(\mathbb{R}^m\)</span> 划分为 <span
class="math inline">\(\mathcal{C}(m,n)\)</span> 个区域。则显然有 <span
class="math display">\[
\mathcal{C}(m,n)=\mathcal{C}(m,n-1)+\mathcal{C}(m-1,n).
\]</span> <span class="math inline">\(m\)</span> 维的空间被 <span
class="math inline">\(n\)</span> 个超平面分成的区域数量最多是 <span
class="math display">\[
S(m,n)=
\begin{cases}
2^n,&amp;n\le m\\
\sum_{k=0}^{m}\binom{n}{k},&amp;n&gt;m
\end{cases}
\]</span></p>
<p>归纳易证。在后续文章会再次介绍此数列。</p>
<h2 id="排列与组合">排列与组合</h2>
<h3 id="排列">排列</h3>
<p><span class="math inline">\(n\)</span> 元素集合 <span
class="math inline">\(\cal{S}\)</span> 的 <strong><span
class="math inline">\(r\)</span> 排列</strong>的意思是，<span
class="math inline">\(n\)</span> 个元素中的 <span
class="math inline">\(r\)</span>
个元素的<strong>有序放置</strong>。比如集合 <span
class="math inline">\(\{a,b,c\}\)</span> 的 <span
class="math inline">\(2\)</span> 排列为 <span
class="math inline">\(ab,ac,ba,bc,ca,cb.\)</span> 我们将 <span
class="math inline">\(n\)</span> 元素集合的 <span
class="math inline">\(r\)</span> 排列的数目记作 <span
class="math inline">\(P(n,r),\)</span> 显然有 <span
class="math display">\[
P(n,r)=n\times(n-1)\times\cdots\times (n-r+1)=\frac{n!}{(n-r)!}.
\]</span> 这在高中的记号是 <span class="math inline">\(A_n^r.\)</span>
也可以理解为，在 <span class="math inline">\(n\)</span> 元素集合中选择
<span class="math inline">\(r\)</span> 个元素，并将这 <span
class="math inline">\(r\)</span> 个元素进行全排列。</p>
<h4 id="圆排列">圆排列</h4>
<p>上面介绍的排列是<strong>线性排列</strong>。圆排列又称为循环排列，即将取出的
<span class="math inline">\(r\)</span> 个元素排列成一个圆。<span
class="math inline">\(n\)</span> 元素集合的 <span
class="math inline">\(r\)</span> 圆排列的数目为 <span
class="math display">\[
\frac{P(n,r)}{r}=\frac{n!}{r(n-r)!}.
\]</span> 这很容易理解，只需要考察下面 <span
class="math inline">\(r\)</span> 个线性排列： <span
class="math display">\[
\langle i_1i_2\cdots i_{r-1}i_r\rangle,\langle i_2i_3\cdots
i_ri_1\rangle,\langle i_3i_4\cdots i_1i_2\rangle,\cdots,\langle
i_ri_1\cdots i_{r-2}i_{r-1}\rangle
\]</span> 它们实际上是同一个圆排列，这一共是 <span
class="math inline">\(r\)</span> 个，于是可以将 <span
class="math inline">\(P(n,r)\)</span> 个线性排列划分为 <span
class="math inline">\(r\)</span>
个部分，每一部分是一个圆排列，因此将线性排列的个数除以 <span
class="math inline">\(r\)</span> 即得圆排列的个数。</p>
<h3 id="组合">组合</h3>
<p><span class="math inline">\(n\)</span> 元素集合 <span
class="math inline">\(\cal S\)</span> 的一个组合或子集表示集合 <span
class="math inline">\(\cal S\)</span>
的元素的一个<strong>无序</strong>选择，这是与排列不同的地方。<span
class="math inline">\(n\)</span> 元素集合 <span
class="math inline">\(\cal S\)</span> 的 <span
class="math inline">\(r\)</span> 子集的意思是它的含有 <span
class="math inline">\(r\)</span> 个元素的子集的集合。用 <span
class="math inline">\(\binom{n}{r}\)</span> 表示 <span
class="math inline">\(n\)</span> 元素集合的 <span
class="math inline">\(r\)</span> 子集个数，并且有下面的定理</p>
<p><strong>定理1</strong> <span class="math display">\[
\binom{n}{r}=\frac{P(n,r)}{r!}=\frac{n!}{r!(n-r)!}.\tag{i}
\]</span> <strong><em>PROOF</em></strong>
借助排列是十分容易证明的，这是因为由乘法原理显然有 <span
class="math inline">\(P(n,r)=r!\binom{n}{r}.\)</span> <span
class="math inline">\(\square\)</span></p>
<p><strong>定理2（组合数的性质）</strong></p>
<p>（1）<span class="math inline">\(\displaystyle
\binom{n}{r}=\binom{n}{n-r};\)</span></p>
<p><strong><em>PROOF</em></strong> 我们可以在 <span
class="math inline">\(n\)</span> 元素集合的 <span
class="math inline">\(r\)</span> 子集的构成的集合与 <span
class="math inline">\(n\)</span> 元素集合的 <span
class="math inline">\(n-r\)</span>
子集构成的集合之间建立双射，于是等式便得证。<span
class="math inline">\(\square\)</span></p>
<p>（2）（Pascal公式）<span class="math inline">\(\displaystyle
\binom{n}{k}=\binom{n-1}{k-1}+\binom{n-1}{k},1\le k\le n;\)</span></p>
<p><strong><em>PROOF</em></strong>
在组合数学中，我们更倾向于用组合的方法进行证明。</p>
<p>设 <span class="math inline">\(n\)</span> 元素集合 <span
class="math inline">\(\cal S\)</span> 满足 <span
class="math inline">\(x\in\cal S,S\)</span> 的所有 <span
class="math inline">\(k\)</span> 子集的集合记作 <span
class="math inline">\(\cal X,\)</span> 并将其划分为两部分 <span
class="math inline">\(\cal A\)</span> 和 <span
class="math inline">\(\cal B,\)</span> 其中 <span
class="math inline">\(\cal A\)</span> 中的每个集合都含有 <span
class="math inline">\(x\)</span> 而 <span class="math inline">\(\cal
B\)</span> 中的每个集合均不含，那么显然有 <span class="math display">\[
\cal |X|=\binom{n}{k}=|A|+|B|.
\]</span> 而 <span class="math inline">\(\cal |A|\)</span> 等于集合
<span class="math inline">\(\cal S\backslash \{x\}\)</span> 的 <span
class="math inline">\(k-1\)</span> 子集的个数，<span
class="math inline">\(\cal |B|\)</span> 等于集合 <span
class="math inline">\(\cal S\backslash \{x\}\)</span> 的 <span
class="math inline">\(k\)</span> 子集的个数，也即 <span
class="math display">\[
|\mathcal{A}|=\binom{n-1}{k-1},|\mathcal{B}|=\binom{n-1}{k},
\]</span> 这就是要证的。<span class="math inline">\(\square\)</span></p>
<p>（3） <span class="math display">\[
\sum_{k=0}^{n}\binom{n}{k}=2^n.
\]</span> 这个很容易理解，因为左边的和式相当于 <span
class="math inline">\(n\)</span> 元素集合 <span
class="math inline">\(\cal S\)</span> 所有子集的数目，也即 <span
class="math inline">\(2^n.\)</span></p>
<h3 id="多重集合">多重集合</h3>
<p>所谓多重集合，就是允许元素重复的集合，比如构成串 <span
class="math inline">\(aabccc\)</span> 的元素可以表示为集合 <span
class="math inline">\(\{2\cdot a,1\cdot b,3\cdot c\}.\)</span> 若元素
<span class="math inline">\(x\)</span> 有无穷多则可记作 <span
class="math inline">\(\infty\cdot x.\)</span></p>
<h4 id="多重集合的排列">多重集合的排列</h4>
<p><strong>定理3</strong> 设多重集合 <span class="math inline">\(\cal
S\)</span> 有 <span class="math inline">\(k\)</span>
种不同的元素，且每种元素的数目分别为 <span
class="math inline">\(n_i&lt;\infty,1\le n\le k,\)</span> 并记 <span
class="math inline">\(|\cal S|=n,\)</span> 那么 <span
class="math inline">\(\cal S\)</span> 的排列数目为 <span
class="math display">\[
P=\frac{n!}{\prod_{1\le i\le k}n_i!}.
\]</span> <strong><em>PROOF</em></strong> 分别在 <span
class="math inline">\(n\)</span> 个位置放置元素即可。先从 <span
class="math inline">\(n\)</span> 个位置选取 <span
class="math inline">\(n_1\)</span> 个位置放置第一个元素，再从剩下的
<span class="math inline">\(n-n_1\)</span> 个位置取 <span
class="math inline">\(n_2\)</span>
个位置放置第二个元素，以此类推，可以得到下面的式子： <span
class="math display">\[
\begin{aligned}
&amp;\binom{n}{n_1}\binom{n-n_1}{n_2}\cdots\binom{n-n_1-\cdots
n_{k-1}}{n_k}\\
&amp;=\frac{n!}{n_1!(n-n_1)!}\cdot\frac{(n-n_1)!}{n_2!(n-n_1-n_2)!}\cdot\cdots\cdot\frac{(n-n_1-\cdots
n_{k-1})!}{n_k!0!}\\
&amp;=\frac{n!}{\prod_{1\le i\le k}n_i!}.
\end{aligned}
\]</span> <span class="math inline">\(\square\)</span></p>
<p>下面是数 <span class="math inline">\(P\)</span> 的另一种描述。</p>
<p><strong>定理4</strong> <span class="math inline">\(n\)</span>
元素集合的 <span class="math inline">\(k\)</span>
<strong>有序划分</strong>（划分为 <span class="math inline">\(k\)</span>
个集合后把所有子集视作不同元素进行排列 ）的数目为 <span
class="math inline">\(P,\)</span> 其中 <span
class="math inline">\(n_i\)</span> 表示第 <span
class="math inline">\(i\)</span> 个子集有 <span
class="math inline">\(n_i\)</span> 个元素，<span
class="math inline">\(k\)</span> 为划分得到的子集数目；而 <span
class="math inline">\(k\)</span> 无序划分的数目为 <span
class="math inline">\(P/k!.\)</span></p>
<p>证明过程与定理3基本相同。</p>
<p>举个例子，<span class="math inline">\(\{a,b,c,d\}\)</span> 的 <span
class="math inline">\(2\)</span> 有序划分中的 <span
class="math inline">\(\{a,b\},\{c,d\}\)</span> 与 <span
class="math inline">\(\{c,d\},\{a,b\}\)</span>
是不同的划分。可以看作将这些元素放入了不同的盒子，无序划分则放入了相同的盒子里。</p>
<p><strong>例1</strong> 在 <span class="math inline">\(n\times
n\)</span> 的棋盘上放置 <span class="math inline">\(n\)</span>
辆车，使得任意两辆车都不在同一直线或同一竖线上，那么放置的方法种数有
<span class="math inline">\(n!\)</span> 种；若这些车有 <span
class="math inline">\(k\)</span> 种且第 <span
class="math inline">\(i(1\le i\le k)\)</span> 种车有 <span
class="math inline">\(n_i\)</span> 辆，那么放置的方法种数为 <span
class="math display">\[
n!\frac{n!}{\prod_{1\le i\le k}n_i!}=\frac{(n!)^2}{\prod_{1\le i\le
k}n_i!}.
\]</span> <strong><em>SOL</em></strong> 实际上是要找出 <span
class="math inline">\(n\)</span> 个序偶 <span
class="math inline">\((x_i,y_i)(1\le i,x_i,y_i\le n)\)</span>
的组合的个数，每一种组合的这些序偶的横纵坐标两两不等。车子都相同时，每一行只有一辆车，无需考虑顺序，于是可以直接假定坐标为
<span class="math inline">\((1,y_1),(2,y_2),\cdots,(n,y_n),\)</span>
那么 <span class="math inline">\(y_1,y_2,\cdots,y_n\)</span> 实际上就是
<span class="math inline">\(1,2,\cdots,n\)</span> 的排列，于是总数目为
<span class="math inline">\(n!\)</span>
个。当车之间有差异时，车的集合相当于一个多重集合，相当于要对这些坐标（车子）根据它们之间的差异将进行排列，于是问题转化为多重集合的排列，最终答案就很显然了。<span
class="math inline">\(\square\)</span></p>
<h4 id="多重集合的组合1">多重集合的组合（1）</h4>
<p>多重集合 <span class="math inline">\(\cal S\)</span> 的 <span
class="math inline">\(r\)</span> 组合是 <span class="math inline">\(\cal
S\)</span> 中 <span class="math inline">\(r\)</span>
个对象的无序选择，选择的结果仍然是一些多重集合。</p>
<p><strong>定理5</strong> 设 <span class="math inline">\(\cal S\)</span>
有 <span class="math inline">\(k\)</span>
种元素且每种元素有无穷多个，那么 <span class="math inline">\(\cal
S\)</span> 的 <span class="math inline">\(r\)</span> 组合的个数为 <span
class="math display">\[
\binom{r+k-1}{r}=\binom{r+k-1}{k-1}.
\]</span> <strong><em>PROOF</em></strong> 设 <span
class="math inline">\(\mathcal{S}=\{\infty\cdot a_1,\infty\cdot
a_2,\cdots,\infty\cdot a_k\},\)</span> 于是它的 <span
class="math inline">\(r\)</span> 组合是形如 <span
class="math inline">\(\{x_1\cdot a_1,x_2\cdot a_2,\cdots,x_k\cdot
a_k\}\)</span> 的集合，满足 <span
class="math inline">\(x_1+x_2+\cdots+x_k=r\)</span> 且 <span
class="math inline">\(x_i\)</span> 为非负整数。问题就转化为了不定方程
<span class="math inline">\(x_1+x_2+\cdots+x_k=r\)</span>
的非负整数解的组数问题了。下面证明该方程的非负整数解的组数为多重集合
<span class="math inline">\(T=\{r\cdot 1,(k-1)\cdot 0\}\)</span>
的排列的个数（即长度为 <span class="math inline">\(r+k-1\)</span> 且含有
<span class="math inline">\(r\)</span> 个 <span
class="math inline">\(1\)</span> 和 <span
class="math inline">\(k-1\)</span> 个 <span
class="math inline">\(0\)</span> 的串）。给定 <span
class="math inline">\(T\)</span> 的一个排列，其中的 <span
class="math inline">\(k-1\)</span> 个 <span
class="math inline">\(0\)</span> 将这 <span
class="math inline">\(r\)</span> 个 <span
class="math inline">\(1\)</span> 分成了 <span
class="math inline">\(k\)</span> 部分<a href="#fn1" class="footnote-ref"
id="fnref1" role="doc-noteref"><sup>1</sup></a> ，即从左到右分别有 <span
class="math inline">\(x_1,x_2,\cdots,x_k\ge 0\)</span> 个 <span
class="math inline">\(1,\)</span> 它们显然满足 <span
class="math inline">\(x_1+x_2+\cdots+x_k=r;\)</span> 反之，若给定满足
<span class="math inline">\(x_1+x_2+\cdots+x_k=r\)</span> 的非负整数
<span class="math inline">\(x_i(1\le i\le k),\)</span>
把上述步骤倒推可以构造出 <span class="math inline">\(T\)</span>
的一个排列；这就证得了该方程的非负整数解的组数为多重集合 <span
class="math inline">\(T=\{r\cdot 1,(k-1)\cdot 0\}\)</span>
的排列的个数。于是解的组数为 <span class="math display">\[
\frac{(r+k-1)!}{r!(k-1)!}=\binom{r+k-1}{r}=\binom{r+k-1}{k-1}.
\]</span> <span class="math inline">\(\square\)</span></p>
<blockquote>
<p>额，自己在做时搞出来一个没啥用的东西……</p>
<p>设从 <span class="math inline">\(p\)</span> 种元素取出 <span
class="math inline">\(q(q\ge p)\)</span> 个包含所有种类的元素的取法为
<span class="math inline">\(S(p,q),\)</span> 当第一种元素取出 <span
class="math inline">\(\ell\)</span> 个时，相当于要在剩下的 <span
class="math inline">\(p-1\)</span> 种元素取出 <span
class="math inline">\(q-\ell\)</span>
个元素且要包含剩下所有种类的元素，这个取法刚好是 <span
class="math inline">\(S(p-1,q-\ell),\)</span> 且 <span
class="math inline">\(1\le \ell\le q-p+1,\)</span> 于是 <span
class="math display">\[
S(p,q)=\sum_{1\le \ell \le q-p+1}S(p-1,q-\ell).
\]</span> 于是结果为 <span class="math display">\[
\sum_{i=1}^{r}\binom{k}{i}S(i,r)
\]</span> （化简不了……</p>
</blockquote>
<p>后续的章节中将继续讨论不定方程 <span
class="math inline">\(x_1+x_2+\cdots+x_k=r\)</span>
的解有上界时的解（解有下界时换个元即可）。</p>
<h3 id="练习">练习</h3>
<p>1：确定性如 <span
class="math inline">\(\emptyset\subseteq\mathcal{A}_1\subseteq\mathcal{A}_2\subseteq\cdots
\subseteq\mathcal{A}_k\subseteq\{1,2,\cdots,n\}\)</span>
的塔状集的数目。</p>
<p><strong><em>SOL</em></strong> 显然为 <span class="math display">\[
\sum_{i_1=0}^n\binom{n}{i_1}\sum_{i_2=0}^{i_1}\binom{i_1}{i_2}\cdots\sum_{i_k=0}^{i_{k-1}}\binom{i_{k-1}}{i_k}2^{i_k}=(k+1)^n.
\]</span></p>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li
id="fn1"><p>很容易发现这就是隔板法。应该可以认为这个论证过程在证明隔板法的正确性？<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>Math</category>
        <category>Combinatorial Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>最优化（一）：一维搜索方法</title>
    <url>/2022/10/07/OR/num-opt/one-dim/</url>
    <content><![CDATA[<p>本章主要讨论一维函数的最小化问题算法 <span class="math display">\[
\min f(x),x\in\mathbb{R}.
\]</span> 一维搜索的重要性:</p>
<ul>
<li><p>一维搜索是高位搜索的特例, 一维搜索能启发高维搜索方法.</p></li>
<li><p>一维搜索算法时高维搜索算法的一部分(用于决定步长).</p></li>
</ul>
<p><strong>定义1 (单峰函数)</strong> 若一维函数 <span
class="math inline">\(f:\mathbb{R}\to\mathbb{R}\)</span> 在定义 <span
class="math inline">\([a_0,b_0]\)</span> 上有唯一局部极小值点 <span
class="math inline">\(x^{\ast},\)</span> 则 <span
class="math inline">\(f(x)\)</span> 在 <span
class="math inline">\(f(x)\)</span> 在 <span
class="math inline">\([a_0,b_0]\)</span> 上是单峰函数(unimodal
function).</p>
<h2 id="黄金分割法">黄金分割法</h2>
<p>黄金分割法用到的是单峰函数一个简单的性质:</p>
<blockquote>
<p>若选择 <span class="math inline">\(a_1,b_1\)</span> 满足 <span
class="math inline">\(a_0 &lt; a_1 &lt; b_1&lt; b_0,\)</span> 且 <span
class="math inline">\(f(a_1) &lt; f(b_1),\)</span> 则 <span
class="math inline">\(x^{\ast}\in[a_0,b_1]\)</span> ; 若 <span
class="math inline">\(f(a_1)&gt;f(b_1),\)</span> 则 <span
class="math inline">\(x^{\ast}\in[a_1,b_0].\)</span> <span
class="math inline">\(\square\)</span></p>
</blockquote>
<p>这实际上就提供了一种简单的找出最小值的方法, 即在 <span
class="math inline">\([a_0,b_0]\)</span> 中任意选择 <span
class="math inline">\(a_1&lt;b_1,\)</span> 比较 <span
class="math inline">\(f(a_1),f(b_1),\)</span> 利用上述性质更新区间,
在更新后的区间再选择 <span class="math inline">\(a_{2}&lt;b_2,\)</span>
重复进行下去直到达到我们想要的精度(区间压缩到一定的长度).</p>
<p>我们需要关注的是点的选择方式. 一种朴素的想法是等比压缩,
选择点后得到的左右两个区间与原区间的比值相等且恒定, 即若第 <span
class="math inline">\(k(k\ge 1)\)</span> 次更新后的区间为 <span
class="math inline">\([l_k,r_k],\)</span> 则在第 <span
class="math inline">\(k+1\)</span> 次选择的点 <span
class="math inline">\(a_{k+1},b_{k+1}\)</span> 满足 <span
class="math inline">\(l_k&lt;a_{k+1}&lt;b_{k+1}&lt;r_{k}\)</span> 且
<span class="math display">\[
\frac{a_{k+1}-l_k}{r_k-l_k}=\frac{r_{k}-b_{k+1}}{r_k-l_k}=\rho,
\]</span> 用语言描述就是: <span
class="math inline">\(b_{k+1}=区间右端点-比例 \times 区间长度,\)</span>
<span
class="math inline">\(a_{k+1}=区间左端点+比例\times区间长度.\)</span></p>
<p>那么根据性质极值点应该在区间 <span
class="math inline">\([l_{k},b_{k+1}]\)</span> 或者区间 <span
class="math inline">\([a_{k+1},r_{k}]\)</span> 中,
新的区间的长度是原来的区间的 <span class="math inline">\(1-\rho\)</span>
倍, 故为等比压缩.</p>
<p>这种方式每次需要计算两个点的函数值, 现欲减少运算量.
假设现在的新区间为 <span class="math inline">\([l_k,b_{k+1}],\)</span>
在该区间内上一步求出的 <span class="math inline">\(a_{k+1}\)</span>
的函数值是已知的, 我们可以利用这一函数值. 即如果有合适的 <span
class="math inline">\(\rho,\)</span> 使得在选择 <span
class="math inline">\(a_{k+2},b_{k+2}\)</span> 时, 有 <span
class="math inline">\(a_{k+2}=a_{k+1}\)</span> 或者 <span
class="math inline">\(b_{k+2}=a_{k+1},\)</span>
那么我们每次只需要计算一个点. 经过计算, 当 <span
class="math inline">\(a_{k+2}=a_{k+1}\)</span> 时解得 <span
class="math inline">\(\rho=0,1,\)</span> 不符合题意舍去; 当 <span
class="math inline">\(b_{k+2}=a_{k+1}\)</span> 时有 <span
class="math inline">\(\rho^2-3\rho+1=0,\)</span> 解得 <span
class="math inline">\(\rho=\frac{3-\sqrt{5}}{2},\)</span> 且此时有 <span
class="math inline">\(1-\rho=\frac{\sqrt{5}-1}{2}=\phi.\)</span> 选择
<span class="math inline">\(\rho=\frac{3-\sqrt{5}}{2}\)</span> 后,
每次迭代只需计算一次函数 <span class="math inline">\(f\)</span> 的值.
此时能够使得短区间 (<span class="math inline">\([l_k,b_{k+2}]\)</span>
或 <span class="math inline">\([a_{k+2},b_{k+1}]\)</span>) 与长区间
<span class="math inline">\(([l_{k},b_{k+1}])\)</span>
长度的比值等于长区间与整个区间 <span
class="math inline">\(([l_k,r_k])\)</span> 的比值,
这是黄金分割最经典的模型, 这也是其名字的由来.</p>
<p>同理, 若新区间为 <span
class="math inline">\([a_{k+1},b_{k}],\)</span> 令 <span
class="math inline">\(a_{k+2}=b_{k+1}\)</span> 或者 <span
class="math inline">\(b_{k+2}=b_{k+1},\)</span>
仍然能得到与上面相同的结果.</p>
<p>进行 <span class="math inline">\(N\)</span> 次后 <span
class="math inline">\(x^{\ast}\)</span> 所在的区间的长度变为原来的 <span
class="math inline">\((1-\rho)^N,\)</span> 这是最终的压缩比例,
称为<strong>总压缩比</strong>.</p>
<h4 id="python实现">Python实现</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> math.<span class="built_in">pow</span>(x,<span class="number">2</span>)+<span class="number">4</span>*math.cos(x)<span class="comment">#函数</span></span><br><span class="line"></span><br><span class="line">l=<span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">r=<span class="built_in">float</span>(<span class="built_in">input</span>()) <span class="comment">#初始化区间</span></span><br><span class="line">rho=(<span class="number">3</span>-math.sqrt(<span class="number">5</span>))/<span class="number">2</span></span><br><span class="line">e=<span class="built_in">float</span>(<span class="built_in">input</span>()) <span class="comment">#精度</span></span><br><span class="line">a=l</span><br><span class="line">b=r</span><br><span class="line">k=<span class="number">1</span> <span class="comment">#迭代次数</span></span><br><span class="line">a=l+(r-l)*rho</span><br><span class="line">b=r-(r-l)*rho</span><br><span class="line"><span class="keyword">while</span>(math.fabs(l-r)&gt;e):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Iterations:&quot;</span>,k)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a=%.4f&quot;</span> % a)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b=%.4f&quot;</span> % b)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;f(a)=%.4f&quot;</span> % f(a))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;f(b)=%.4f&quot;</span> % f(b))</span><br><span class="line">    <span class="keyword">if</span> f(a)&gt;f(b):</span><br><span class="line">        l=a</span><br><span class="line">        a=b</span><br><span class="line">        b=r-(r-l)*rho</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        r=b</span><br><span class="line">        b=a</span><br><span class="line">        a=l+(r-l)*rho</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The new section is&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;%.4f&quot;</span> % l ,<span class="string">&quot;,&quot;</span>,<span class="string">&quot;%.4f&quot;</span> % r,<span class="string">&quot;]&quot;</span>)</span><br><span class="line">    k+=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>上面是目标函数为 <span class="math inline">\(f(x)=x^2+4\cos
x\)</span> 初始区间为 <span class="math inline">\([1,2]\)</span> 且精度
<span class="math inline">\(e=0.2\)</span> 的例子，输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Iterations: 1</span><br><span class="line">a=1.3820</span><br><span class="line">b=1.6180</span><br><span class="line">f(a)=2.6607</span><br><span class="line">f(b)=2.4292</span><br><span class="line">The new section is [ 1.3820 , 2.0000 ]</span><br><span class="line">Iterations: 2</span><br><span class="line">a=1.6180</span><br><span class="line">b=1.7639</span><br><span class="line">f(a)=2.4292</span><br><span class="line">f(b)=2.3437</span><br><span class="line">The new section is [ 1.6180 , 2.0000 ]</span><br><span class="line">Iterations: 3</span><br><span class="line">a=1.7639</span><br><span class="line">b=1.8541</span><br><span class="line">f(a)=2.3437</span><br><span class="line">f(b)=2.3196</span><br><span class="line">The new section is [ 1.7639 , 2.0000 ]</span><br><span class="line">Iterations: 4</span><br><span class="line">a=1.8541</span><br><span class="line">b=1.9098</span><br><span class="line">f(a)=2.3196</span><br><span class="line">f(b)=2.3171</span><br><span class="line">The new section is [ 1.8541 , 2.0000 ]</span><br></pre></td></tr></table></figure>
<h4 id="matlab实现">MATLAB实现</h4>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%从左到右依次为函数,变量,区间左端点,区间右端点,精度,返回极值点所在的区间</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[a,b]</span>=<span class="title">GoldenCut</span><span class="params">(f,var,left,right,eps)</span></span></span><br><span class="line">rho=(<span class="number">3</span>-<span class="built_in">sqrt</span>(<span class="number">5</span>))/<span class="number">2</span>;</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line">L=right-left;</span><br><span class="line">a=left+L*rho;</span><br><span class="line">b=right-L*rho;</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">abs</span>(right-left)&gt;<span class="built_in">eps</span></span><br><span class="line">    f_a=subs(f,var,a);</span><br><span class="line">    f_b=subs(f,var,b);</span><br><span class="line">    <span class="keyword">if</span> f_a&gt;f_b</span><br><span class="line">        left=a;</span><br><span class="line">        a=b;</span><br><span class="line">        b=right-(right-left)*rho;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        right=b;</span><br><span class="line">        b=a;</span><br><span class="line">        a=left+(right-left)*rho;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    k=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">a=left;</span><br><span class="line">b=right;</span><br></pre></td></tr></table></figure>
<h2 id="斐波那契法">斐波那契法</h2>
<p>我们的目标是找到极小值点 <span
class="math inline">\(x^{\ast},\)</span> 在用算法逼近极小值点的时候,
精度越高越好, 这表现在我们利用算法求出的 <span
class="math inline">\(x^{\ast}\)</span> 所在的区间的长度上.
在黄金分割法中最终区间的长度为 <span class="math inline">\((1-\rho)^N
L,\)</span> 其中 <span class="math inline">\(L\)</span> 为初始区间长度,
于是为了改进算法我们希望降低总压缩比, 提高 <span
class="math inline">\(x^{\ast}\)</span> 的精度.</p>
<p>在黄金分割法中我们令比例 <span class="math inline">\(\rho\)</span>
恒定不变, 为了降低总压缩比, 现令每一次取点的 <span
class="math inline">\(\rho\)</span> 都不同, 记第 <span
class="math inline">\(k\)</span> 次取点的比例为 <span
class="math inline">\(\rho_k,\)</span> 区间长度为 <span
class="math inline">\(L,\)</span> 则有 <span
class="math inline">\(\rho_{k}L=(1-\rho_{k+1})(1-\rho_k)L,\)</span> 得到
<span class="math display">\[
\rho_{k+1}=1-\frac{\rho_k}{1-\rho_{k}},
\]</span> 假设进行了 <span class="math inline">\(N\)</span> 次迭代,
那么总压缩比为 <span class="math inline">\(\prod_{1\le k\le
N}(1-\rho_k),\)</span> 我们想要解决的就是如下的优化问题: <span
class="math display">\[
\begin{aligned}
&amp;\min \prod_{1\le k\le N}(1-\rho_k)\newline{}
\text{s.t. }&amp;0\le \rho_k\le\frac{1}{2},k=1,\cdots,N\newline{}
&amp;\rho_{k+1}=1-\frac{\rho_k}{1-\rho_{k}},k=1,\cdots,N-1
\end{aligned}
\]</span> 可以证明数列 <span class="math display">\[
\rho_k=1-\frac{F_{N+1-k}}{F_{N+2-k}},k=1,\cdots, N
\]</span> 是上述优化问题的最优解, 其中 <span
class="math inline">\(\{F_n\}_{n\ge -1}\)</span> 是斐波那契数列,
这样可以得到总压缩比为 <span
class="math inline">\(1/F_{N+1}.\)</span></p>
<p>需要注意的是在第 <span class="math inline">\(N\)</span> 次迭代时有
<span class="math inline">\(\rho_N=1-F_1/F_2=1/2,\)</span> 这意味着第
<span class="math inline">\(N\)</span> 次选择点时两个点会重合.
为了避免这一情况的发生, 在第 <span class="math inline">\(N\)</span>
次选择点修正 <span class="math inline">\(\rho_N\)</span> 为 <span
class="math inline">\(1/2-\varepsilon,\)</span> 其中 <span
class="math inline">\(\varepsilon\)</span> 是任意小的正数.
修正后的总压缩比为 <span
class="math inline">\((2\varepsilon+1)/F_N.\)</span></p>
<p>因为斐波那契数列相邻两项之比在 <span
class="math inline">\(n\to\infty\)</span> 的极限是 <span
class="math inline">\((\sqrt{5}-1)/2,\)</span>
所以斐波那契法最终的压缩比实际上与黄金分割法变化不大.
因此黄金分割法比斐波那契法用得更多.</p>
<h4 id="python实现-1">Python实现</h4>
<p>确定 <span class="math inline">\(N\)</span> 时使用的不等式为 <span
class="math display">\[
\frac{2\varepsilon +1}{F_{N+1}}\le\frac{e}{r-l}\Rightarrow
F_{N+1}\ge\frac{(2\varepsilon +1)(r-l)}{e}.
\]</span></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">g</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> math.<span class="built_in">pow</span>(x,<span class="number">2</span>)+<span class="number">4</span>*math.cos(x)</span><br><span class="line"></span><br><span class="line">l=<span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">r=<span class="built_in">float</span>(<span class="built_in">input</span>()) <span class="comment">#初始化区间</span></span><br><span class="line">e=<span class="built_in">float</span>(<span class="built_in">input</span>()) <span class="comment">#精度</span></span><br><span class="line">epsilon=<span class="built_in">float</span>(<span class="built_in">input</span>()) <span class="comment">#微扰</span></span><br><span class="line">F=[<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">N=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: <span class="comment">#确定迭代次数N</span></span><br><span class="line">    F.append(F[N]+F[N-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> F[N+<span class="number">1</span>]&gt;=(<span class="number">2</span>*epsilon+<span class="number">1</span>)*(r-l)/e:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    N+=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;N=&quot;</span>,N)</span><br><span class="line">rho=<span class="number">1</span>-F[N]/F[N+<span class="number">1</span>]</span><br><span class="line">a=l+(r-l)*rho</span><br><span class="line">b=r-(r-l)*rho</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Iterations:&quot;</span>,i+<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;rho=%.4f&quot;</span> % rho)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;a=%.4f&quot;</span> % a)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;b=%.4f&quot;</span> % b)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;f(a)=%.4f&quot;</span> % g(a))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;f(b)=%.4f&quot;</span> % g(b))</span><br><span class="line">    <span class="keyword">if</span> i==N-<span class="number">2</span>:<span class="comment">#下一次的rho</span></span><br><span class="line">        rho=<span class="number">0.5</span>-epsilon</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rho=<span class="number">1</span>-F[N-i-<span class="number">1</span>]/F[N-i]</span><br><span class="line">    <span class="keyword">if</span> g(a)&gt;g(b):</span><br><span class="line">        l=a</span><br><span class="line">        a=b</span><br><span class="line">        b=r-(r-l)*rho</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        r=b</span><br><span class="line">        b=a</span><br><span class="line">        a=l+(r-l)*rho</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The new section is&quot;</span>,<span class="string">&quot;[&quot;</span>,<span class="string">&quot;%.4f&quot;</span> % l ,<span class="string">&quot;,&quot;</span>,<span class="string">&quot;%.4f&quot;</span> % r,<span class="string">&quot;]&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>仍然以目标函数 <span class="math inline">\(g(x)=x^2+4\cos x\)</span>
初始区间为 <span class="math inline">\([1,2]\)</span> 且精度 <span
class="math inline">\(e=0.2\)</span> 为例，附加 <span
class="math inline">\(\varepsilon=0.05,\)</span> 经计算输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">N= 4</span><br><span class="line">Iterations: 1</span><br><span class="line">rho=0.3750</span><br><span class="line">a=1.3750</span><br><span class="line">b=1.6250</span><br><span class="line">f(a)=2.6688</span><br><span class="line">f(b)=2.4239</span><br><span class="line">The new section is [ 1.3750 , 2.0000 ]</span><br><span class="line">Iterations: 2</span><br><span class="line">rho=0.4000</span><br><span class="line">a=1.6250</span><br><span class="line">b=1.7500</span><br><span class="line">f(a)=2.4239</span><br><span class="line">f(b)=2.3495</span><br><span class="line">The new section is [ 1.6250 , 2.0000 ]</span><br><span class="line">Iterations: 3</span><br><span class="line">rho=0.3333</span><br><span class="line">a=1.7500</span><br><span class="line">b=1.8750</span><br><span class="line">f(a)=2.3495</span><br><span class="line">f(b)=2.3175</span><br><span class="line">The new section is [ 1.7500 , 2.0000 ]</span><br><span class="line">Iterations: 4</span><br><span class="line">rho=0.4500</span><br><span class="line">a=1.8750</span><br><span class="line">b=1.8875</span><br><span class="line">f(a)=2.3175</span><br><span class="line">f(b)=2.3169</span><br><span class="line">The new section is [ 1.8750 , 2.0000 ]</span><br></pre></td></tr></table></figure>
<h2 id="二分法">二分法</h2>
<p>二分法要求目标函数可导.
并根据极小值点的导数为零这一条件用二分法找出导函数的零点.实际上是零点存在性定理.
每次选择中点, 每次的压缩比为 <span class="math inline">\(1/2.\)</span>
迭代 <span class="math inline">\(N\)</span> 次的总压缩比为 <span
class="math inline">\((1/2)^N,\)</span>
这比黄金分割法与斐波那契法的压缩比更优秀.</p>
<h2 id="平方根倒数速算法">平方根倒数速算法</h2>
<blockquote>
<p>待补充.</p>
</blockquote>
<h2 id="多维优化问题中的一维优化">多维优化问题中的一维优化</h2>
<blockquote>
<p>待补充。</p>
</blockquote>
]]></content>
      <categories>
        <category>Optimization</category>
      </categories>
  </entry>
  <entry>
    <title>最优化（四）：牛顿法</title>
    <url>/2022/10/07/OR/num-opt/newton/</url>
    <content><![CDATA[<h1 id="牛顿法">牛顿法</h1>
<h2 id="一元函数">一元函数</h2>
<p>牛顿法要求函数二阶可导.</p>
<p>牛顿法利用二次函数对目标函数进行拟合,
利用二次函数的极值点作为目标函数的极值点的近似.</p>
<p>利用Taylor展开有: <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="63.541ex" height="4.876ex" role="img" focusable="false" viewBox="0 -1469 28085 2155"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2177.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3233.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3783.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4172.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(5181.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5792.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(6792.6,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7673,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8062,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(9070.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9459.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(9848.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(10642.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(11643,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(12651.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13262.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(14263,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1074.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1463.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(2472.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1400.7,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="3061.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(17564.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17953.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(18747.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(19747.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(20756.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(21804.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(22804.5,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mo" transform="translate(23289.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(23678.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(24067.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(24861.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(25861.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(26870.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(27696,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 于是在点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.334ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4567.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1842.2,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2392.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2781.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(3789.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4178.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span>
处我们可以用 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="46.767ex" height="3.164ex" role="img" focusable="false" viewBox="0 -1053.5 20670.9 1398.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1438,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2104.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3160.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3710.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4099.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(5108.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5719.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(6719.6,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7600,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7989,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(8997.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9386.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(9775.6,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(10569.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(11570,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(12578.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13189.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(14190,0)"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1074.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1463.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(2472.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1054.9,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="2223.4" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(16653.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17042.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(17836.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(18836.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(19845.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></span>
来对 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.299ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1900 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 进行拟合, 并用 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.133ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1827 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1438,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 的极值点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.339ex" role="img" focusable="false" viewBox="0 -442 1008.6 592"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container></span> 对应的点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.334ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4567.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1397.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1842.2,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2392.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2781.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(3789.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4178.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 处对 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.299ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1900 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 用Taylor展开做下次拟合.
记选择的点的序列为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="8.273ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 3656.5 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msub" transform="translate(1523.4,0)"><g data-mml-node="mo"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3378.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 则 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.315ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 1023.4 599.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></span> 和 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.36ex" height="1.471ex" role="img" focusable="false" viewBox="0 -442 1927.1 650"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span> 的关系求解如下:</p>
<p>对于函数 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="49.782ex" height="4.876ex" role="img" focusable="false" viewBox="0 -1469 22003.7 2155"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(479,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(897.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1286.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1858.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2525.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3581,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4131,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4520,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5543.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6154.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(7154.8,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(8035.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8424.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9447.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9836.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10225.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(11019.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(12020.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13043.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13654.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(14655,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1074.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1463.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2487.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mn" transform="translate(1408.2,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="3076.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(17971.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(18360.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(19154.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(20154.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(21178.1,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container></span> 它的一阶导数的零点为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.36ex" height="1.471ex" role="img" focusable="false" viewBox="0 -442 1927.1 650"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span> 即 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="30.69ex" height="2.396ex" role="img" focusable="false" viewBox="0 -809 13565.1 1059"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2904.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(3904.3,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4979.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5368.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6391.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6780.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7169.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9318.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(10319.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11342.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12009.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(13065.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></span> 于是 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.776ex;" xmlns="http://www.w3.org/2000/svg" width="21.169ex" height="6.704ex" role="img" focusable="false" viewBox="0 -1736 9356.8 2963"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="menclose"><g transform="translate(267, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2204.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3260.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4506.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(5506.5,0)"><g data-mml-node="mrow" transform="translate(317.2,710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1074.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1463.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2487.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="3076.3" height="60" x="120" y="220"></rect></g></g></g></g></g><rect x="33.5" y="-1193.5" width="9289.8" height="2896" fill="none" stroke-width="67"></rect></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.36ex" height="1.471ex" role="img" focusable="false" viewBox="0 -442 1927.1 650"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container></span>
是拟合函数的极值点, 作为目标函数极值点的近似.</p>
<h3 id="牛顿法解方程">牛顿法解方程</h3>
<p>牛顿法也可以看作是在求一阶导函数的零点, 于是令 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.826ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 5669 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1438,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2104.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(3160.6,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4041,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4430,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5002,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5391,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 我们可以用牛顿法求 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.133ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1827 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1438,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 的零点.</p>
<h3 id="割线法">割线法</h3>
<p>牛顿法对函数的要求较高, 即二阶可导.
由于某一点的导数的定义是切线的斜率, 于是我们可以取两个点,
利用这过这两个点的割线的斜率近似切线的斜率, 这得到了割线法.
为了充分利用已经计算过的点, 我们用 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.238ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 6735.3 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2316.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(2760.8,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(3641.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4030.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5957.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6346.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 和点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="11.149ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 4927.9 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1412.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1857.1,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2737.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3126.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4149.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4538.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span>
这两点连线的斜率近似 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="7.136ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 3154.3 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1074.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1463.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2487.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2876.3,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> 令 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.113ex;" xmlns="http://www.w3.org/2000/svg" width="22.42ex" height="3.497ex" role="img" focusable="false" viewBox="0 -1053.5 9909.7 1545.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(1074.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1463.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2487.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3154.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(4209.9,0)"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2681.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3459.9,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4340.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4729.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6656.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1392.7,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1023.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(1801.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="5181.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(9631.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span>
代入牛顿法的式子得 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -5.636ex;" xmlns="http://www.w3.org/2000/svg" width="37.675ex" height="12.403ex" role="img" focusable="false" viewBox="0 -2991 16652.2 5482"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="menclose"><g transform="translate(267, 0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mstyle"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,1465)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(1333.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2579.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(3579.4,0)"><g data-mml-node="mrow" transform="translate(1878.5,676)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1245.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2245.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2904.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3904.3,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4784.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5173.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7100.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="7689.8" height="60" x="120" y="220"></rect></g><g data-mml-node="msup" transform="translate(11509.2,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(12389.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12778.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13802.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-1264)"><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(1333.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msup" transform="translate(1927.1,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2807.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3196.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4219.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4831.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5831.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(6854.8,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7735.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8124.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10051.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1695.2,-710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2904.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3904.3,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4784.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5173.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7100.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="10640.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(12213.9,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></g></g></g></g></g><rect x="33.5" y="-2457.5" width="16585.2" height="5415" fill="none" stroke-width="67"></rect></g></g></g></svg></mjx-container></span> 此时需要两个初始点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="9.932ex" height="2.46ex" role="img" focusable="false" viewBox="0 -893.3 4390.2 1087.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1558.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(2003.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(389,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1167,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1667,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4112.2,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span></p>
<p>同样地, 割线法也可用于求函数的零点.</p>
<p>按照割线法的思想, 我们能否继续进行下去,
即继续利用割线分别近似割线法迭代公式中的 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.815ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 6990.1 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2681.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3126.5,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4007,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4396,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6323.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6712.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span>
得到下面的迭代公式呢? <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -7.949ex;" xmlns="http://www.w3.org/2000/svg" width="41.678ex" height="17.03ex" role="img" focusable="false" viewBox="0 -4013.7 18421.6 7527.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,2544.7)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(1333.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msup" transform="translate(1927.1,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(2807.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3196.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4219.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4831.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5831.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(6854.8,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7735.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8124.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10051.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1695.2,-710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2904.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3904.3,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,289) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4784.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5173.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7100.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="10640.3" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0,-714.5)"><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(1333.6,0)"><g data-mml-node="mrow" transform="translate(220,952.1)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mfrac" transform="translate(1927.1,0)"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1962.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2351.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3129.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3679.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4068.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5995.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1159,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1023.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(1801.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="4714.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(7103.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(8104,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mfrac" transform="translate(9127.4,0)"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2866.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3255.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4033.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4583.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4972.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6899.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1159,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1927.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2705.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="5353.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(1695.2,-1007.1)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1962.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2351.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3129.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3679.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4068.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5995.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1159,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1023.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(1801.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="4714.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(5176.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(6177,0)"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2866.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3255.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4033.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4583.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4972.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6899.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1159,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1927.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2705.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="5353.5" height="60" x="120" y="220"></rect></g></g><rect width="14921" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0,-3263.7)"><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(1927.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1333.6,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g></g></g></g></g></g></svg></mjx-container></span></p>
<p>但这是不对的, 因为不管是牛顿法还是割线法,
它们都是对目标函数的二次函数的拟合:</p>
<p>牛顿法保证 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="46.861ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 20712.5 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(849,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1872.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2539.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3595,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4145,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4534,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5557.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5946.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6391,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(543.7,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7179.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7568.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8591.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9258.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(10314.1,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(11194.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(11583.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12607,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12996,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(13440.7,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(543.7,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(14423.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(14812.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15835.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(16502.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(17558.2,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><g data-c="2033"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z" transform="translate(275,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(18633.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(19022.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(20045.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(20434.5,0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g></g></g></svg></mjx-container></span></p>
<p>割线法的拟合函数为 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.023ex;" xmlns="http://www.w3.org/2000/svg" width="61.986ex" height="5.346ex" role="img" focusable="false" viewBox="0 -1469 27397.8 2363"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(849,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1421,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2087.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3143.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3693.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4082.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5106,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5717.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(6717.4,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7597.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7986.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(9010.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9399.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(9788.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(10582.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(11582.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12606.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13217.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(14217.6,0)"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g><g data-mml-node="mfrac" transform="translate(15157.6,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2904.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3904.3,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4784.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5173.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7100.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1878.5,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1245.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2245.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="7689.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(23087.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(23476.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(24270.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(25270.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(26294.2,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(27119.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 可以验证 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="50.07ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 22131 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(849,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1872.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2539.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3595,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4145,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4534,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5557.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5946.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(6391,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(543.7,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(7179.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7568.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8591.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9258.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(10314.1,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(11194.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(11583.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12607,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12996,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(13440.7,0)"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(543.7,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(14228.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(14617.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(16544.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(17211.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(18267.5,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(19147.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(19536.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(21464,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(21853,0)"><path data-c="3B" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 85 94 103T137 121Q202 121 202 8Q202 -44 183 -94T144 -169T118 -194Q115 -194 106 -186T95 -174Q94 -171 107 -155T137 -107T160 -38Q161 -32 162 -22T165 -4T165 4Q165 5 161 4T142 0Q110 0 94 18T78 60Z"></path></g></g></g></svg></mjx-container></span></p>
<p>而上述直接用割线斜率代替 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.186ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 6712.1 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(880.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1269.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2292.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2681.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3126.5,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(636,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(4007,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4396,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6323.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span>
的方式得到的拟合函数是: <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.023ex;" xmlns="http://www.w3.org/2000/svg" width="82.049ex" height="6.546ex" role="img" focusable="false" viewBox="0 -1999.2 36265.5 2893.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(849,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1421,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2087.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3143.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3693.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4082.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5106,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5717.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(6717.4,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1962.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2573.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3573.8,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4123.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4512.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6439.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1548,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1245.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2245.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="7028.9" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(13986.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(14375.3,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(15169.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(16169.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(17193.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(17804.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(18804.6,0)"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g><g data-mml-node="mfrac" transform="translate(19744.6,0)"><g data-mml-node="mrow" transform="translate(220,952.1)"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1962.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2351.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3129.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3679.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4068.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5995.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1159,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1023.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(1801.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="4714.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(5176.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(6177,0)"><g data-mml-node="mrow" transform="translate(220,516.8) scale(0.707)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2866.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3255.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4033.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4583.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4972.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6899.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1159,-345) scale(0.707)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1927.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2705.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><rect width="5353.5" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mrow" transform="translate(4018.8,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1245.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(2245.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g><rect width="11970.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(31955.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(32344.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(33138.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(34138.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(35161.9,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(35987.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 可以验证它不满足 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="18.171ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8031.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(849,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2776.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3442.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4498.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(5048.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5437.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7364.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7753.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span>
于是它并非在当前条件下对目标函数的完美拟合.
而要达到比较好的拟合效果我们显然需要 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="51.179ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 22621.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(849,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1872.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2539.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3595,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4145,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4534,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5557.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5946.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(6391,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(6851,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7240,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9167.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9833.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(10889.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(11439.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(11828.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13755.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14144.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(14589.4,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(15049.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(15438.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(17365.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(18032.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(19088.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(19638.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(20027.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(21954.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(22343.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span>
这启发我们用<strong>插值法</strong>拟合: 这里用拉格朗日插值法构造 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.112ex;" xmlns="http://www.w3.org/2000/svg" width="33.272ex" height="7.005ex" role="img" focusable="false" viewBox="0 -1720.9 14706.2 3096.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1438,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2104.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munderover" transform="translate(3160.6,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mn" transform="translate(545.2,1150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="munder" transform="translate(4771.2,0)"><g data-mml-node="mo"><path data-c="220F" d="M220 812Q220 813 218 819T214 829T208 840T199 853T185 866T166 878T140 887T107 893T66 896H56V950H1221V896H1211Q1080 896 1058 812V-311Q1076 -396 1211 -396H1221V-450H725V-396H735Q864 -396 888 -314Q889 -312 889 -311V896H388V292L389 -311Q405 -396 542 -396H552V-450H56V-396H66Q195 -396 219 -314Q220 -312 220 -311V812Z"></path></g><g data-mml-node="TeXAtom" transform="translate(96.3,-1123.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(412,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="mi" transform="translate(1190,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mfrac" transform="translate(6215.9,0)"><g data-mml-node="mrow" transform="translate(842.7,754.2)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(794.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(1794.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2039.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(3039.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="5104.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mi" transform="translate(11560.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(12110.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(12499.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14317.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 用 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.133ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1827 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(477,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(866,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1438,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 的极值点近似
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.299ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1900 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 的极值点. <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.218ex;" xmlns="http://www.w3.org/2000/svg" width="61.653ex" height="5.945ex" role="img" focusable="false" viewBox="0 -1647.4 27250.7 2627.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(510,413) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(754.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1143.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1715.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2382.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3438,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(3938,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(4676.7,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="mo" transform="translate(6287.3,0)"><path data-c="220F" d="M220 812Q220 813 218 819T214 829T208 840T199 853T185 866T166 878T140 887T107 893T66 896H56V950H1221V896H1211Q1080 896 1058 812V-311Q1076 -396 1211 -396H1221V-450H725V-396H735Q864 -396 888 -314Q889 -312 889 -311V896H388V292L389 -311Q405 -396 542 -396H552V-450H56V-396H66Q195 -396 219 -314Q220 -312 220 -311V812Z"></path></g><g data-mml-node="mfrac" transform="translate(7732,0)"><g data-mml-node="mrow" transform="translate(1099.7,710)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2756.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2039.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(3039.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="5104.8" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(13299,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(14299.2,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="mo" transform="translate(15909.9,0)"><path data-c="220F" d="M220 812Q220 813 218 819T214 829T208 840T199 853T185 866T166 878T140 887T107 893T66 896H56V950H1221V896H1211Q1080 896 1058 812V-311Q1076 -396 1211 -396H1221V-450H725V-396H735Q864 -396 888 -314Q889 -312 889 -311V896H388V292L389 -311Q405 -396 542 -396H552V-450H56V-396H66Q195 -396 219 -314Q220 -312 220 -311V812Z"></path></g><g data-mml-node="mfrac" transform="translate(17354.6,0)"><g data-mml-node="mrow" transform="translate(220,897.4)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2756.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="munder" transform="translate(3312.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M61 748Q64 750 489 750H913L954 640Q965 609 976 579T993 533T999 516H979L959 517Q936 579 886 621T777 682Q724 700 655 705T436 710H319Q183 710 183 709Q186 706 348 484T511 259Q517 250 513 244L490 216Q466 188 420 134T330 27L149 -187Q149 -188 362 -188Q388 -188 436 -188T506 -189Q679 -189 778 -162T936 -43Q946 -27 959 6H999L913 -249L489 -250Q65 -250 62 -248Q56 -246 56 -239Q56 -234 118 -161Q186 -81 245 -11L428 206Q428 207 242 462L57 717L56 728Q56 744 61 748Z"></path></g><g data-mml-node="TeXAtom" transform="translate(1089,-285.4) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="2113" d="M345 104T349 104T361 95T369 80T352 59Q268 -20 206 -20Q170 -20 146 3T113 53T99 104L94 129Q94 130 79 116T48 86T28 70Q22 70 15 79T7 94Q7 98 12 103T58 147L91 179V185Q91 186 91 191T92 200Q92 282 128 400T223 612T336 705Q397 705 397 636V627Q397 453 194 233Q185 223 180 218T174 211T171 208T165 201L163 186Q159 142 159 123Q159 17 208 17Q228 17 253 30T293 56T335 94Q345 104 349 104ZM360 634Q360 655 354 661T336 668Q328 668 322 666T302 645T272 592Q252 547 229 467T192 330L179 273Q179 272 186 280T204 300T221 322Q327 453 355 590Q360 612 360 634Z"></path></g><g data-mml-node="mo" transform="translate(417,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="mi" transform="translate(1195,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="msub" transform="translate(5754.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="2113" d="M345 104T349 104T361 95T369 80T352 59Q268 -20 206 -20Q170 -20 146 3T113 53T99 104L94 129Q94 130 79 116T48 86T28 70Q22 70 15 79T7 94Q7 98 12 103T58 147L91 179V185Q91 186 91 191T92 200Q92 282 128 400T223 612T336 705Q397 705 397 636V627Q397 453 194 233Q185 223 180 218T174 211T171 208T165 201L163 186Q159 142 159 123Q159 17 208 17Q228 17 253 30T293 56T335 94Q345 104 349 104ZM360 634Q360 655 354 661T336 668Q328 668 322 666T302 645T272 592Q252 547 229 467T192 330L179 273Q179 272 186 280T204 300T221 322Q327 453 355 590Q360 612 360 634Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(1578.9,-686)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2039.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(3039.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></g><rect width="7822.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(25694.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(26750.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></span> 整理即得 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.172ex;" xmlns="http://www.w3.org/2000/svg" width="45.22ex" height="5.475ex" role="img" focusable="false" viewBox="0 -1460 19987.4 2420"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2204.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3260.6,0)"><g data-mml-node="mrow" transform="translate(668.5,710)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(1361.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1911.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2300.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3323.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3934.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(4935,0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(6296.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(6846.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7235.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9162.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9773.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(10773.6,0)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(12134.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(12684.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(13073.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15000.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(889,0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(2123.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2673.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3062.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4085.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4696.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(5697,0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(6931.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(7481.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7870.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9797.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10408.4,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(11408.6,0)"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path></g></g></g><g data-mml-node="mi" transform="translate(12642.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(13192.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(13581.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(15508.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15897.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><rect width="16486.8" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></span></p>
<p>其中 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.666ex;" xmlns="http://www.w3.org/2000/svg" width="17.146ex" height="2.288ex" role="img" focusable="false" viewBox="0 -717 7578.6 1011.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="TeXAtom" transform="translate(477,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1340.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2395.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4435.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5435.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7300.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -1.023ex;" xmlns="http://www.w3.org/2000/svg" width="17.434ex" height="2.909ex" role="img" focusable="false" viewBox="0 -833.9 7705.6 1285.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="TeXAtom" transform="translate(604,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1467.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(2522.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-307.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4562.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msubsup" transform="translate(5562.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-307.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(1299,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7427.6,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span></p>
<p>这种方法对目标函数要求比较低.</p>
<blockquote>
<p>收敛性分析在多元函数部分.</p>
</blockquote>
<hr>
<h2 id="多元函数">多元函数</h2>
<p>和一维搜索的牛顿法一样,
高维函数的牛顿法也是使用二次型函数去拟合目标函数,
用该二次型函数的极值点近似目标函数的极值点.
并以该点为初始点进行下一次迭代.</p>
<p>已知点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.395ex" height="1.361ex" role="img" focusable="false" viewBox="0 -444 1058.4 601.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g></svg></mjx-container></span> , 现欲求
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="5.068ex" height="1.475ex" role="img" focusable="false" viewBox="0 -444 2240.1 652"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1962.1,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> 对 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.378ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1935 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(1546,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 进行Taylor展开有: <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="79.789ex" height="4.588ex" role="img" focusable="false" viewBox="0 -1342 35266.9 2028"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(1546,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2212.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3268.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3818.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4207.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5266,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5877.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(6877.4,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(7710.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(8260.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8649.4,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(9707.8,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="22A4" d="M55 642T55 648T59 659T66 666T71 668H708Q723 660 723 648T708 628H409V15Q402 2 391 0Q387 0 384 1T379 3T375 6T373 9T371 13T369 16V628H71Q70 628 67 630T59 637Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10729.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(11118.9,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(11948.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(12948.4,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(14006.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14618,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(15618.2,0)"><g data-mml-node="mn" transform="translate(220,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-686)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="700" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(16558.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(16947.2,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(17776.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(18776.7,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(19835.1,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="22A4" d="M55 642T55 648T59 659T66 666T71 668H708Q723 660 723 648T708 628H409V15Q402 2 391 0Q387 0 384 1T379 3T375 6T373 9T371 13T369 16V628H71Q70 628 67 630T59 637Z"></path></g></g></g><g data-mml-node="msup" transform="translate(20857.2,0)"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mn" transform="translate(866,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(22126.8,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(22676.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(23065.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(24124.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24513.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(24902.2,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(25731.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(26731.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(27790,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(28401.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(29401.4,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mo" transform="translate(29886.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(30275.4,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(30775.4,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(31604.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(32604.9,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(33663.3,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(34599.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(34988.9,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 令黑塞矩阵为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.4ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2387 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D405" d="M425 0L228 3Q63 3 51 0H39V62H147V618H39V680H644V676Q647 670 659 552T675 428V424H613Q613 433 605 477Q599 511 589 535T562 574T530 599T488 612T441 617T387 618H368H304V371H333Q389 373 411 390T437 468V488H499V192H437V212Q436 244 430 263T408 292T378 305T333 309H304V62H439V0H425Z"></path></g></g><g data-mml-node="mo" transform="translate(724,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1113,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(1720,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2109,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="14.684ex" height="2.456ex" role="img" focusable="false" viewBox="0 -835.3 6490.5 1085.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D420" d="M50 300Q50 368 105 409T255 450Q328 450 376 426L388 420Q435 455 489 455Q517 455 533 441T554 414T558 389Q558 367 544 353T508 339Q484 339 471 354T458 387Q458 397 462 400Q464 401 461 400Q459 400 454 399Q429 392 427 390Q454 353 459 328Q461 315 461 300Q461 240 419 202Q364 149 248 149Q185 149 136 172Q129 158 129 148Q129 105 170 93Q176 91 263 91Q273 91 298 91T334 91T366 89T400 85T432 77T466 64Q544 22 544 -69Q544 -114 506 -145Q438 -201 287 -201Q149 -201 90 -161T30 -70Q30 -58 33 -47T42 -27T54 -13T69 -1T82 6T94 12T101 15Q66 57 66 106Q66 151 90 187L97 197L89 204Q50 243 50 300ZM485 403H492Q491 404 488 404L485 403V403ZM255 200Q279 200 295 206T319 219T331 242T335 268T336 300Q336 337 333 352T317 380Q298 399 255 399Q228 399 211 392T187 371T178 345T176 312V300V289Q176 235 194 219Q215 200 255 200ZM287 -150Q357 -150 400 -128T443 -71Q443 -65 442 -61T436 -50T420 -37T389 -27T339 -21L308 -20Q276 -20 253 -20Q190 -20 180 -20T156 -26Q130 -38 130 -69Q130 -105 173 -127T287 -150Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(608,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1304.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2360,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(3193,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3743,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4132,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5190.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="22A4" d="M55 642T55 648T59 659T66 666T71 668H708Q723 660 723 648T708 628H409V15Q402 2 391 0Q387 0 384 1T379 3T375 6T373 9T371 13T369 16V628H71Q70 628 67 630T59 637Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6212.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 取 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="54.975ex" height="2.737ex" role="img" focusable="false" viewBox="0 -864.9 24298.9 1209.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(849,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(1456,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2122.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3178.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3728.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4117.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5176,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5787.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(6787.4,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D420" d="M50 300Q50 368 105 409T255 450Q328 450 376 426L388 420Q435 455 489 455Q517 455 533 441T554 414T558 389Q558 367 544 353T508 339Q484 339 471 354T458 387Q458 397 462 400Q464 401 461 400Q459 400 454 399Q429 392 427 390Q454 353 459 328Q461 315 461 300Q461 240 419 202Q364 149 248 149Q185 149 136 172Q129 158 129 148Q129 105 170 93Q176 91 263 91Q273 91 298 91T334 91T366 89T400 85T432 77T466 64Q544 22 544 -69Q544 -114 506 -145Q438 -201 287 -201Q149 -201 90 -161T30 -70Q30 -58 33 -47T42 -27T54 -13T69 -1T82 6T94 12T101 15Q66 57 66 106Q66 151 90 187L97 197L89 204Q50 243 50 300ZM485 403H492Q491 404 488 404L485 403V403ZM255 200Q279 200 295 206T319 219T331 242T335 268T336 300Q336 337 333 352T317 380Q298 399 255 399Q228 399 211 392T187 371T178 345T176 312V300V289Q176 235 194 219Q215 200 255 200ZM287 -150Q357 -150 400 -128T443 -71Q443 -65 442 -61T436 -50T420 -37T389 -27T339 -21L308 -20Q276 -20 253 -20Q190 -20 180 -20T156 -26Q130 -38 130 -69Q130 -105 173 -127T287 -150Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(608,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7813.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(8202.8,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(9032,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(10032.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11090.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11701.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(12702.1,0)"><g data-mml-node="mn" transform="translate(220,394) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mn" transform="translate(220,-345) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><rect width="553.6" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(13495.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(13884.7,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(14713.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(15714.1,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(16772.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="22A4" d="M55 642T55 648T59 659T66 666T71 668H708Q723 660 723 648T708 628H409V15Q402 2 391 0Q387 0 384 1T379 3T375 6T373 9T371 13T369 16V628H71Q70 628 67 630T59 637Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(17794.6,0)"><g data-mml-node="mi"><path data-c="1D405" d="M425 0L228 3Q63 3 51 0H39V62H147V618H39V680H644V676Q647 670 659 552T675 428V424H613Q613 433 605 477Q599 511 589 535T562 574T530 599T488 612T441 617T387 618H368H304V371H333Q389 373 411 390T437 468V488H499V192H437V212Q436 244 430 263T408 292T378 305T333 309H304V62H439V0H425Z"></path></g></g><g data-mml-node="mo" transform="translate(18518.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(18907.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(19966,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(20355,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(20744,0)"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mo" transform="translate(21573.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(22573.5,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(23631.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(24020.9,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> 于是
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="14.072ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6219.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(1293,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1682,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3644.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4310.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5366.6,0)"><g data-mml-node="mn"><path data-c="1D7CE" d="M266 654H280H282Q500 654 524 418Q529 370 529 320Q529 125 456 52Q397 -10 287 -10Q110 -10 63 154Q45 212 45 316Q45 504 113 585Q140 618 185 636T266 654ZM374 548Q347 604 286 604Q247 604 218 575Q197 552 193 511T188 311Q188 159 196 116Q202 87 225 64T287 41Q339 41 367 87Q379 107 382 152T386 329Q386 518 374 548Z"></path></g></g><g data-mml-node="mo" transform="translate(5941.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 即 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="27.018ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11941.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D420" d="M50 300Q50 368 105 409T255 450Q328 450 376 426L388 420Q435 455 489 455Q517 455 533 441T554 414T558 389Q558 367 544 353T508 339Q484 339 471 354T458 387Q458 397 462 400Q464 401 461 400Q459 400 454 399Q429 392 427 390Q454 353 459 328Q461 315 461 300Q461 240 419 202Q364 149 248 149Q185 149 136 172Q129 158 129 148Q129 105 170 93Q176 91 263 91Q273 91 298 91T334 91T366 89T400 85T432 77T466 64Q544 22 544 -69Q544 -114 506 -145Q438 -201 287 -201Q149 -201 90 -161T30 -70Q30 -58 33 -47T42 -27T54 -13T69 -1T82 6T94 12T101 15Q66 57 66 106Q66 151 90 187L97 197L89 204Q50 243 50 300ZM485 403H492Q491 404 488 404L485 403V403ZM255 200Q279 200 295 206T319 219T331 242T335 268T336 300Q336 337 333 352T317 380Q298 399 255 399Q228 399 211 392T187 371T178 345T176 312V300V289Q176 235 194 219Q215 200 255 200ZM287 -150Q357 -150 400 -128T443 -71Q443 -65 442 -61T436 -50T420 -37T389 -27T339 -21L308 -20Q276 -20 253 -20Q190 -20 180 -20T156 -26Q130 -38 130 -69Q130 -105 173 -127T287 -150Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(608,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1248.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2248.8,0)"><g data-mml-node="mi"><path data-c="1D405" d="M425 0L228 3Q63 3 51 0H39V62H147V618H39V680H644V676Q647 670 659 552T675 428V424H613Q613 433 605 477Q599 511 589 535T562 574T530 599T488 612T441 617T387 618H368H304V371H333Q389 373 411 390T437 468V488H499V192H437V212Q436 244 430 263T408 292T378 305T333 309H304V62H439V0H425Z"></path></g></g><g data-mml-node="mo" transform="translate(2972.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3361.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4420.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4809.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5198.2,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7382.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(8382.8,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9441.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10108,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(11163.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(11663.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 解得 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="23.593ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 10428 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2239.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3295.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4576.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5576.5,0)"><g data-mml-node="mi"><path data-c="1D405" d="M425 0L228 3Q63 3 51 0H39V62H147V618H39V680H644V676Q647 670 659 552T675 428V424H613Q613 433 605 477Q599 511 589 535T562 574T530 599T488 612T441 617T387 618H368H304V371H333Q389 373 411 390T437 468V488H499V192H437V212Q436 244 430 263T408 292T378 305T333 309H304V62H439V0H425Z"></path></g></g><g data-mml-node="mo" transform="translate(6300.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(6689.5,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(640,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(7747.9,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(9123.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D420" d="M50 300Q50 368 105 409T255 450Q328 450 376 426L388 420Q435 455 489 455Q517 455 533 441T554 414T558 389Q558 367 544 353T508 339Q484 339 471 354T458 387Q458 397 462 400Q464 401 461 400Q459 400 454 399Q429 392 427 390Q454 353 459 328Q461 315 461 300Q461 240 419 202Q364 149 248 149Q185 149 136 172Q129 158 129 148Q129 105 170 93Q176 91 263 91Q273 91 298 91T334 91T366 89T400 85T432 77T466 64Q544 22 544 -69Q544 -114 506 -145Q438 -201 287 -201Q149 -201 90 -161T30 -70Q30 -58 33 -47T42 -27T54 -13T69 -1T82 6T94 12T101 15Q66 57 66 106Q66 151 90 187L97 197L89 204Q50 243 50 300ZM485 403H492Q491 404 488 404L485 403V403ZM255 200Q279 200 295 206T319 219T331 242T335 268T336 300Q336 337 333 352T317 380Q298 399 255 399Q228 399 211 392T187 371T178 345T176 312V300V289Q176 235 194 219Q215 200 255 200ZM287 -150Q357 -150 400 -128T443 -71Q443 -65 442 -61T436 -50T420 -37T389 -27T339 -21L308 -20Q276 -20 253 -20Q190 -20 180 -20T156 -26Q130 -38 130 -69Q130 -105 173 -127T287 -150Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(608,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10150,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> 当然, 这前提是 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.793ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2560.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D405" d="M425 0L228 3Q63 3 51 0H39V62H147V618H39V680H644V676Q647 670 659 552T675 428V424H613Q613 433 605 477Q599 511 589 535T562 574T530 599T488 612T441 617T387 618H368H304V371H333Q389 373 411 390T437 468V488H499V192H437V212Q436 244 430 263T408 292T378 305T333 309H304V62H439V0H425Z"></path></g></g><g data-mml-node="mo" transform="translate(724,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1113,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D431" d="M227 0Q212 3 121 3Q40 3 28 0H21V62H117L245 213L109 382H26V444H34Q49 441 143 441Q247 441 265 444H274V382H246L281 339Q315 297 316 297Q320 297 354 341L389 382H352V444H360Q375 441 466 441Q547 441 559 444H566V382H471L355 246L504 63L545 62H586V0H578Q563 3 469 3Q365 3 347 0H338V62H366Q366 63 326 112T285 163L198 63L217 62H235V0H227Z"></path></g></g><g data-mml-node="mi" transform="translate(640,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2171.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 可逆.
黑塞矩阵不可逆时牛顿法将失效, 我们将在后文提出修正的方法.</p>
<p>对二次型函数直接应用牛顿法时, 不论初值为何值,
只需要迭代一次就能得到极小值点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.437ex;" xmlns="http://www.w3.org/2000/svg" width="6.262ex" height="2.323ex" role="img" focusable="false" viewBox="0 -833.9 2767.7 1026.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D410" d="M64 339Q64 431 96 502T182 614T295 675T420 696Q469 696 481 695Q620 680 709 589T798 339Q798 255 768 184Q720 77 611 26L600 21Q635 -26 682 -26H696Q769 -26 769 0Q769 7 774 12T787 18Q805 18 805 -7V-13Q803 -64 785 -106T737 -171Q720 -183 697 -191Q687 -193 668 -193Q636 -193 613 -182T575 -144T552 -94T532 -27Q531 -23 530 -16T528 -6T526 -3L512 -5Q499 -7 477 -8T431 -10Q393 -10 382 -9Q238 8 151 97T64 339ZM326 80Q326 113 356 138T430 163Q492 163 542 100L553 86Q554 85 561 91T578 108Q637 179 637 330Q637 430 619 498T548 604Q500 641 425 641Q408 641 390 637T347 623T299 590T259 535Q226 469 226 338Q226 244 246 180T318 79L325 74Q326 74 326 80ZM506 58Q480 112 433 112Q412 112 395 104T378 77Q378 44 431 44Q480 44 506 58Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(897,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1850.7,0)"><g data-mml-node="mi"><path data-c="1D41B" d="M32 686L123 690Q214 694 215 694H221V409Q289 450 378 450Q479 450 539 387T600 221Q600 122 535 58T358 -6H355Q272 -6 203 53L160 1L129 0H98V301Q98 362 98 435T99 525Q99 591 97 604T83 620Q69 624 42 624H29V686H32ZM227 105L232 99Q237 93 242 87T258 73T280 59T306 49T339 45Q380 45 411 66T451 131Q457 160 457 230Q457 264 456 284T448 329T430 367T396 389T343 398Q282 398 235 355L227 348V105Z"></path></g></g><g data-mml-node="mo" transform="translate(2489.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span></p>
<blockquote>
<p>下面就懒得用粗体了(</p>
</blockquote>
<h3 id="牛顿法的修正">牛顿法的修正</h3>
<h4 id="不下降的问题">不下降的问题</h4>
<p>作为迭代算法,
牛顿法在收敛的情况下得到的点的序列对应的函数值虽然整体是呈下降趋势收敛至极小值的,
但是我们没办法保证序列 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.648ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4706.5 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1050,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1439,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2462.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(2851.4,0)"><g data-mml-node="mo"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></g></svg></mjx-container></span> 是严格递减的,
这也就是说<strong>牛顿法不具有下降特性</strong>(当然,
这一般出现在<em>离极小点比较远</em>的情况).
一个好的算法在迭代过程中对极小点应该是"步步紧逼"的,
我们想把牛顿法修正成为这样的算法. 幸运的是,
牛顿法每次迭代前进的方向是一个下降方向, 这表述为下面的命题:</p>
<p><strong>命题1</strong> 令 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="17.707ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 7826.4 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1249.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2305,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3083,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(3832,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4221,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5244.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(6620,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(7548.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 且黑塞矩阵正定, 则
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.198ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 971.4 851.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></svg></mjx-container></span> 是一个下降方向, 即存在 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.782ex" height="2.061ex" role="img" focusable="false" viewBox="0 -717 2555.6 911"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(721.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1777.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2277.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 使得 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="10.374ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4585.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="2200" d="M0 673Q0 684 7 689T20 694Q32 694 38 680T82 567L126 451H430L473 566Q483 593 494 622T512 668T519 685Q524 694 538 694Q556 692 556 674Q556 670 426 329T293 -15Q288 -22 278 -22T263 -15Q260 -11 131 328T0 673ZM414 410Q414 411 278 411T142 410L278 55L414 410Z"></path></g><g data-mml-node="mi" transform="translate(556,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(1473.8,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mo" transform="translate(2418.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(2807.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(3307.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3752.2,0)"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(4196.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 都有 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="20.697ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 9148.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(939,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2184.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(3184.8,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(3824.8,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(4796.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5463,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(6518.8,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(7068.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7457.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8481.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8870.2,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.559ex" role="img" focusable="false" viewBox="0 -689 778 689"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="25FB" d="M71 0Q59 4 55 16V346L56 676Q64 686 70 689H709Q719 681 722 674V15Q719 10 709 1L390 0H71ZM682 40V649H95V40H682Z"></path></g></g></g></svg></mjx-container></span></p>
<p><strong><em>PROOF</em></strong> 置 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="19.934ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8810.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(596,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(985,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(1625,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2291.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3347.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3897.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4286.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5532.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(6532.4,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(7172.4,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8143.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8532.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.958ex" height="2.47ex" role="img" focusable="false" viewBox="0 -841.7 11473.5 1091.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(629,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(873.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1262.5,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(1902.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2569.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3625,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(4458,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(5008,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5397,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(6642.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(7642.9,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(8282.9,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(9254.3,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(422,363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="msub" transform="translate(10224.1,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(11195.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 于是由黑塞矩阵正定可得 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.625ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 11768.5 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(629,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(873.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1262.5,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1762.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2429.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(3485,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(4263,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mi" transform="translate(5191.4,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(5940.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(6329.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(7352.8,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(8728.5,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(9934.7,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mn" transform="translate(10990.5,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(11490.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span>
由连续函数的保号性可得存在 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.782ex" height="2.061ex" role="img" focusable="false" viewBox="0 -717 2555.6 911"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(721.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1777.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2277.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 当 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.116ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4029.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(917.8,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mo" transform="translate(1862.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(2251.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2751.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3196.2,0)"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(3640.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 时 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.962ex" height="2.283ex" role="img" focusable="false" viewBox="0 -759 4403 1009"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(629,363) scale(0.707)"><path data-c="2032" d="M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"></path></g></g><g data-mml-node="mo" transform="translate(873.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1262.5,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(1902.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2569.2,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mn" transform="translate(3625,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4125,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 即 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.557ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2014 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(596,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(985,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(1625,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 在 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.902ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2166.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1333.7,0)"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(1777.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 上递减, 于是对任意 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="9.116ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 4029.2 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(917.8,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="mo" transform="translate(1862.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(2251.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2751.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(3196.2,0)"><path data-c="1D6FF" d="M195 609Q195 656 227 686T302 717Q319 716 351 709T407 697T433 690Q451 682 451 662Q451 644 438 628T403 612Q382 612 348 641T288 671T249 657T235 628Q235 584 334 463Q401 379 401 292Q401 169 340 80T205 -10H198Q127 -10 83 36T36 153Q36 286 151 382Q191 413 252 434Q252 435 245 449T230 481T214 521T201 566T195 609ZM112 130Q112 83 136 55T204 27Q233 27 256 51T291 111T309 178T316 232Q316 267 309 298T295 344T269 400L259 396Q215 381 183 342T137 256T118 179T112 130Z"></path></g><g data-mml-node="mo" transform="translate(3640.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 都有 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="35.528ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 15703.3 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(596,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(985,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(1625,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2291.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3347.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(3897.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4286.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5532.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(6532.4,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msub" transform="translate(7172.4,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8143.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8810.6,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(9866.4,0)"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="mo" transform="translate(10462.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(10851.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(11351.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12018.1,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(13073.9,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(13623.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(14012.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(15036.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(15425.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 这就是要证的. <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.559ex" role="img" focusable="false" viewBox="0 -689 778 689"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="25FC" d="M71 0Q59 4 55 16V346L56 676Q64 686 70 689H709Q719 681 722 674V15Q719 10 709 1L390 0H71Z"></path></g></g></g></svg></mjx-container></span></p>
<p>这意味着我们可以像最速下降法那样,
在这个下降方向上选择一个最优步长来修正牛顿法, 即下面这样的修正: <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.923ex;" xmlns="http://www.w3.org/2000/svg" width="32.798ex" height="6.978ex" role="img" focusable="false" viewBox="0 -1792 14496.6 3084.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,908.1)"><g data-mml-node="mtd"></g><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2204.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3260.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4506.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5506.5,0)"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mi" transform="translate(673,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mi" transform="translate(6597.9,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(7346.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7735.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(8759.3,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(10135,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-525.8)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mi" transform="translate(673,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1369.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2425,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(892,0)"></path></g><g data-mml-node="mo" transform="translate(3817,0)"><path data-c="2061" d=""></path></g><g data-mml-node="munder" transform="translate(3983.6,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(155.4,-637.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(640,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1418,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mi" transform="translate(5817.3,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(6367.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(6756.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8001.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(9002.1,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mi" transform="translate(9642.1,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(10391.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(10780.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msup" transform="translate(11803.5,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(13179.2,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(14107.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></g></svg></mjx-container></span> 这样就可以防止牛顿法"走弯路".</p>
<h4 id="不正定的问题-levenberg-marquardt修正">不正定的问题:
Levenberg-Marquardt修正</h4>
<p>黑塞矩阵不正定会导致的问题是,
牛顿法确定的搜索方向不是下降方向(虽然正定也可能会产生这样的问题,
不过我们在上述的修正中已经解决了), 那么我们便考虑修正先使黑塞矩阵正定,
这就有LM修正. LM修正看起来似乎有些随便粗暴: 既然 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.77ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2550.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(749,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1138,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2161.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 不正定, 它有非正的特征值,
只需要让所有特征值加上一个数让所有特征值都为正即可,
这就是LM修正(同时用步长修正保证下降特性): <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.923ex;" xmlns="http://www.w3.org/2000/svg" width="40.849ex" height="6.978ex" role="img" focusable="false" viewBox="0 -1792 18055.5 3084.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,908.1)"><g data-mml-node="mtd"></g><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2204.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3260.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4506.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(5506.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5895.5,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(6644.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7033.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8056.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8668.1,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(9668.3,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mi" transform="translate(10722.7,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="msup" transform="translate(11226.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(12602.4,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-525.8)"><g data-mml-node="mtd"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mi" transform="translate(673,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1369.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2425,0)"><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(500,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(892,0)"></path></g><g data-mml-node="mo" transform="translate(3817,0)"><path data-c="2061" d=""></path></g><g data-mml-node="munder" transform="translate(3983.6,0)"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g><g data-mml-node="TeXAtom" transform="translate(155.4,-637.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(640,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mn" transform="translate(1418,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g><g data-mml-node="mi" transform="translate(5817.3,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(6367.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(6756.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8001.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(9002.1,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(9642.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10031.1,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(10780.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(11169.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(12192.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12803.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(13804,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mi" transform="translate(14858.4,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="msup" transform="translate(15362.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(16738.1,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(17666.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></g></svg></mjx-container></span> 其中 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="21.545ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 9523 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1332.2,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mo" transform="translate(2388,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="msub" transform="translate(2666,0)"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(4510.7,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(4788.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5177.7,0)"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="TeXAtom" transform="translate(616,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(833,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1111,0)"></path></g></g></g><g data-mml-node="mo" transform="translate(7300.2,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mn" transform="translate(8356,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(8856,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9245,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span>
当然要说明一下若 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.027ex;" xmlns="http://www.w3.org/2000/svg" width="1.319ex" height="1.597ex" role="img" focusable="false" viewBox="0 -694 583 706"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g></g></g></svg></mjx-container></span> 是 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.695ex" height="1.538ex" role="img" focusable="false" viewBox="0 -680 749 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g></g></g></svg></mjx-container></span> 的特征值, 则 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="5.449ex" height="2.059ex" role="img" focusable="false" viewBox="0 -694 2408.4 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(805.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(1805.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g></g></g></svg></mjx-container></span> 是 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="6.965ex" height="2.034ex" role="img" focusable="false" viewBox="0 -683 3078.4 899"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(971.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(1971.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(2574.4,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g></g></g></svg></mjx-container></span> 的特征值: 若 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.097ex" height="1.027ex" role="img" focusable="false" viewBox="0 -443 485 454"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g></g></svg></mjx-container></span> 为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.695ex" height="1.538ex" role="img" focusable="false" viewBox="0 -680 749 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g></g></g></svg></mjx-container></span> 的一个特征向量, 那么 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="44.612ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 19718.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(1360.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2360.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(2963.4,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mo" transform="translate(3467.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(3856.4,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(4619.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(5675,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mi" transform="translate(6424,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(7131.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(8131.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(8734.4,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="mi" transform="translate(9238.4,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(10001.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(11057,0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mi" transform="translate(11640,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(12347.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(13347.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(13950.4,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(14713.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(15769,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(16158,0)"><path data-c="1D706" d="M166 673Q166 685 183 694H202Q292 691 316 644Q322 629 373 486T474 207T524 67Q531 47 537 34T546 15T551 6T555 2T556 -2T550 -11H482Q457 3 450 18T399 152L354 277L340 262Q327 246 293 207T236 141Q211 112 174 69Q123 9 111 -1T83 -12Q47 -12 47 20Q47 37 61 52T199 187Q229 216 266 252T321 306L338 322Q338 323 288 462T234 612Q214 657 183 657Q166 657 166 673Z"></path></g><g data-mml-node="mo" transform="translate(16963.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(17963.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mo" transform="translate(18566.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(18955.4,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mo" transform="translate(19440.4,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> 除此之外, 我们可以证明 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.13ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 11107.3 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1249.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(2305,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(3083,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3472,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(4221,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(4610,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(5633.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6244.6,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(7244.8,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mi" transform="translate(8299.2,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="msup" transform="translate(8803.2,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(10178.9,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></svg></mjx-container></span>
也是一个下降方向( <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.386ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 1054.4 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></svg></mjx-container></span> 足够大时),
这样才可以使用步长修正.</p>
<p><strong><em>REMARK</em></strong> : <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="7.036ex" height="1.995ex" role="img" focusable="false" viewBox="0 -666 3110 882"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1332.2,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(2610,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></span> 时LM修正接近牛顿法, <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="8.167ex" height="1.645ex" role="img" focusable="false" viewBox="0 -511 3610 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1332.2,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2610,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g></svg></mjx-container></span>
时LM修正接近步长较小的最速下降法, 因为此时 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.735ex;" xmlns="http://www.w3.org/2000/svg" width="31.415ex" height="2.732ex" role="img" focusable="false" viewBox="0 -882.5 13885.4 1207.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mi" transform="translate(673,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1091.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1480.4,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(2229.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2618.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(3641.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4253,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(5253.2,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mi" transform="translate(6307.7,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z"></path></g><g data-mml-node="msup" transform="translate(6811.7,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(8187.3,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(9393.5,0)"><path data-c="2248" d="M55 319Q55 360 72 393T114 444T163 472T205 482Q207 482 213 482T223 483Q262 483 296 468T393 413L443 381Q502 346 553 346Q609 346 649 375T694 454Q694 465 698 474T708 483Q722 483 722 452Q722 386 675 338T555 289Q514 289 468 310T388 357T308 404T224 426Q164 426 125 393T83 318Q81 289 69 289Q55 289 55 319ZM55 85Q55 126 72 159T114 210T163 238T205 248Q207 248 213 248T223 249Q262 249 296 234T393 179L443 147Q502 112 553 112Q609 112 649 141T694 220Q694 249 708 249T722 217Q722 153 675 104T555 55Q514 55 468 76T388 123T308 170T224 192Q164 192 125 159T83 84Q80 55 69 55Q55 55 55 85Z"></path></g><g data-mml-node="mi" transform="translate(10449.3,0)"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="msubsup" transform="translate(11089.3,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,411.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(636,-317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msub" transform="translate(12679,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(13607.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="2.1ex" height="1.464ex" role="img" focusable="false" viewBox="0 -442 928.4 647"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></svg></mjx-container></span>
为梯度, 于是步长为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.735ex;" xmlns="http://www.w3.org/2000/svg" width="11.345ex" height="2.732ex" role="img" focusable="false" viewBox="0 -882.5 5014.6 1207.4"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D6FC" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mi" transform="translate(673,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msubsup" transform="translate(1091.4,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="TeXAtom" transform="translate(636,411.6) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(636,-317.1) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2958.9,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4236.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" transform="translate(500,0)"></path></g></g></g></svg></mjx-container></span> 实际应用中在迭代开始时 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="2.386ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 1054.4 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="mi" transform="translate(636,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></svg></mjx-container></span> 可以选择较小的值,
并在迭代过程中使其缓慢增加直至算法出现下降特性.</p>
<h4 id="不可逆的问题">不可逆的问题</h4>
<p>黑塞矩阵不可逆时我们将不能使用牛顿法.
不过我们很少会碰到黑塞矩阵奇异的情况, 要恰好使 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="13.438ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5939.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(556,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1000,0)"></path></g><g data-mml-node="mi" transform="translate(1555.7,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(2304.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2693.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(3717.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4383.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5439.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></span> 并不是件容易的事.
当然碰到这种情况时我们在该步利用最速下降法, 或者使用类似LM修正的方法对
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="5.77ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2550.4 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(749,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1138,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2161.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 进行微扰使其可逆即可.</p>
<h3 id="牛顿法的收敛性">牛顿法的收敛性</h3>
<p>这里仅讨论未修正的牛顿法.</p>
<p><strong>定理1</strong> 函数 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="11.064ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 4890.4 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(827.8,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="msup" transform="translate(1383.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g><g data-mml-node="mi" transform="translate(755,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2890.6,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4168.4,0)"><g data-mml-node="mi"><path data-c="211D" d="M17 665Q17 672 28 683H221Q415 681 439 677Q461 673 481 667T516 654T544 639T566 623T584 607T597 592T607 578T614 565T618 554L621 548Q626 530 626 497Q626 447 613 419Q578 348 473 326L455 321Q462 310 473 292T517 226T578 141T637 72T686 35Q705 30 705 16Q705 7 693 -1H510Q503 6 404 159L306 310H268V183Q270 67 271 59Q274 42 291 38Q295 37 319 35Q344 35 353 28Q362 17 353 3L346 -1H28Q16 5 16 16Q16 35 55 35Q96 38 101 52Q106 60 106 341T101 632Q95 645 55 648Q17 648 17 665ZM241 35Q238 42 237 45T235 78T233 163T233 337V621L237 635L244 648H133Q136 641 137 638T139 603T141 517T141 341Q141 131 140 89T134 37Q133 36 133 35H241ZM457 496Q457 540 449 570T425 615T400 634T377 643Q374 643 339 648Q300 648 281 635Q271 628 270 610T268 481V346H284Q327 346 375 352Q421 364 439 392T457 496ZM492 537T492 496T488 427T478 389T469 371T464 361Q464 360 465 360Q469 360 497 370Q593 400 593 495Q593 592 477 630L457 637L461 626Q474 611 488 561Q492 537 492 496ZM464 243Q411 317 410 317Q404 317 401 315Q384 315 370 312H346L526 35H619L606 50Q553 109 464 243Z"></path></g></g></g></g></svg></mjx-container></span> 三阶连续可微,
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1008.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g></g></g></svg></mjx-container></span> 为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.299ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1900 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(550,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(939,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1511,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 的驻点且黑塞矩阵非奇异,
则对所有足够接近 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1008.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g></g></g></svg></mjx-container></span> 的点
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.911ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 1286.6 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 牛顿法收敛并且至少以阶数为
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></span> 的收敛率收敛至 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.911ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1286.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1008.6,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.559ex" role="img" focusable="false" viewBox="0 -689 778 689"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="25FB" d="M71 0Q59 4 55 16V346L56 676Q64 686 70 689H709Q719 681 722 674V15Q719 10 709 1L390 0H71ZM682 40V649H95V40H682Z"></path></g></g></g></svg></mjx-container></span></p>
<p><strong><em>PROOF</em></strong> 这里仅提供大致的思路. 只需证明 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="28.786ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 12723.6 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2649.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3649.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4658.1,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(5435.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(6491.6,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(7254.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7643.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(8143.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9389.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10389.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(11398,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(12334.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span>
即可. 对 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.183ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2733 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1772,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2344,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 在 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 1008.6 607.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container></span> 处进行Taylor展开有 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="48.819ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 21578.1 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(833,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1772,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2344,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3010.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4066.6,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(4899.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(5449.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5838.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(6847.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7458.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(8458.6,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(9207.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(9596.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(10605.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(10994.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(11383.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(12177.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(13177.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(14186.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14797.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(15797.5,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(16560.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(16949.5,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(17449.5,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(18243.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(19244,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(20252.5,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(21189.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 借助大 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.726ex" height="1.643ex" role="img" focusable="false" viewBox="0 -704 763 726"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g></g></g></svg></mjx-container></span> 记号的含义,
对于足够接近 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1008.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g></g></g></svg></mjx-container></span> 的 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="4.582ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 2025.2 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1016.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container></span> 有 <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="50.192ex" height="2.565ex" role="img" focusable="false" viewBox="0 -883.9 22184.7 1133.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(1333,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1883,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2272,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2844,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3455.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4455.4,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(5288.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(5838.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(6227.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(7236,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7847.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(8847.4,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(9596.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(9985.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(10994,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11383,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(11772,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(12566.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(13566.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(14575,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14964,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(15741.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(16797.5,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(17667.1,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(18167.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(18961.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(19961.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(20970.1,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(21906.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1008.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g></g></g></svg></mjx-container></span> 可以代入: <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="43.218ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 19102.3 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="2207" d="M46 676Q46 679 51 683H781Q786 679 786 676Q786 674 617 326T444 -26Q439 -33 416 -33T388 -26Q385 -22 216 326T46 676ZM697 596Q697 597 445 597T193 596Q195 591 319 336T445 80L697 596Z"></path></g><g data-mml-node="mi" transform="translate(1333,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1883,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2272,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(3280.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3891.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4892,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(5641,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(6030,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(7038.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7427.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7816.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(9047.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10047.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(11056.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11445.1,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(12222.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(13278.7,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(14148.2,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(14648.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(15879,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(16879.2,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(17887.8,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(18824.3,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span></p>
<p>牛顿法迭代公式两边减 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1008.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g></g></g></svg></mjx-container></span>
取范数, 且黑塞矩阵的逆矩阵连续, 有: <span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -7.054ex;" xmlns="http://www.w3.org/2000/svg" width="44.761ex" height="15.239ex" role="img" focusable="false" viewBox="0 -3617.9 19784.4 6735.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,2733.9)"><g data-mml-node="mtd"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1730.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2731,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3739.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g></g><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(1333.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(1833.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(3064.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(4064.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5295.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6295.6,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(7044.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7433.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(8442.1,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="msub" transform="translate(9817.8,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(10731.3,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,1300)"><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mo" transform="translate(1333.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(1833.6,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(2582.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(2971.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="msup" transform="translate(3980.1,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(5355.8,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(5855.8,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(6355.8,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(7104.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(7493.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(8502.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8891.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(9280.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(10511.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(11511.3,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12519.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(13131.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(14131.3,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(15044.9,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,0)"><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(1333.6,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2203.1,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mi" transform="translate(2703.1,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(3452.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(3841.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(4849.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5238.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(5627.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(6858.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7858.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(8867.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(9478.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(10478.7,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mn" transform="translate(510,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(11392.2,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-1433.9)"><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msub" transform="translate(1333.6,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="msub" transform="translate(2203.1,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mn" transform="translate(466,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(3072.7,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(3572.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(4803.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(5803.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(6812.2,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-2867.9)"><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"></g></g><g data-mml-node="mtd" transform="translate(4239.6,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1333.6,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(1766.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(2266.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(3497.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(4497.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(5506.1,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></g></g></g></svg></mjx-container></span> 由归纳法可得 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.909ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 11893.6 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2649.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3649.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4658.1,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(5435.9,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(6491.6,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(6924.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(7424.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(8670.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(9670.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(10679,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(11615.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 即 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="29.415ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 13001.6 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2649.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(3649.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4658.1,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(5435.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(6491.6,0)"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(7254.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mo" transform="translate(7643.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(8143.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9389.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(10389.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(11398,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(12334.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(12723.6,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span>
同时迭代有 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="55.086ex" height="2.753ex" role="img" focusable="false" viewBox="0 -966.7 24348.1 1216.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1745.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2745.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3754.4,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(4532.2,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="msup" transform="translate(5588,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="TeXAtom" transform="translate(466,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1278,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1778,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(2556,0)"><path data-c="22EF" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"></path></g><g data-mml-node="mo" transform="translate(3728,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(4506,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(10601.9,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(11101.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(12332.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(13332.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="msup" transform="translate(14341.5,0)"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(15875,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(16930.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17319.8,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(17752.8,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(18252.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(19483.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(20483.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(21492.3,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msup" transform="translate(21992.3,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" transform="translate(422,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(23137.1,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(23637.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(24070.1,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span>
<span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="6.961ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 3076.6 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(2076.6,0)"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g></g></svg></mjx-container></span> 时, 只有保证 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.851ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 7006.1 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1730.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2731,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3739.6,0)"><path data-c="2225" d="M133 736Q138 750 153 750Q164 750 170 739Q172 735 172 250T170 -239Q164 -250 152 -250Q144 -250 138 -244L137 -243Q133 -241 133 -179T132 250Q132 731 133 736ZM329 739Q334 750 346 750Q353 750 361 744L362 743Q366 741 366 679T367 250T367 -178T362 -243L361 -244Q355 -250 347 -250Q335 -250 329 -239Q327 -235 327 250T329 739Z"></path></g><g data-mml-node="mo" transform="translate(4517.3,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mn" transform="translate(5573.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(6073.1,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(6573.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></svg></mjx-container></span> 才可以使 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="8.746ex" height="2.004ex" role="img" focusable="false" viewBox="0 -691.8 3865.5 885.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(1301.2,0)"><path data-c="2192" d="M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"></path></g><g data-mml-node="msup" transform="translate(2579,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3587.5,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 也即对足够接近 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.59ex" role="img" focusable="false" viewBox="0 -691.8 1008.6 702.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="TeXAtom" transform="translate(605,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g></g></g></g></g></svg></mjx-container></span> 的点 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex;" xmlns="http://www.w3.org/2000/svg" width="2.282ex" height="1.375ex" role="img" focusable="false" viewBox="0 -442 1008.6 607.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></svg></mjx-container></span> <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.845ex;" xmlns="http://www.w3.org/2000/svg" width="7.644ex" height="2.542ex" role="img" focusable="false" viewBox="0 -750 3378.5 1123.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="msubsup" transform="translate(1523.4,0)"><g data-mml-node="mo"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="221E" d="M55 217Q55 305 111 373T254 442Q342 442 419 381Q457 350 493 303L507 284L514 294Q618 442 747 442Q833 442 888 374T944 214Q944 128 889 59T743 -11Q657 -11 580 50Q542 81 506 128L492 147L485 137Q381 -11 252 -11Q166 -11 111 57T55 217ZM907 217Q907 285 869 341T761 397Q740 397 720 392T682 378T648 359T619 335T594 310T574 285T559 263T548 246L543 238L574 198Q605 158 622 138T664 94T714 61T765 51Q827 51 867 100T907 217ZM92 214Q92 145 131 89T239 33Q357 33 456 193L425 233Q364 312 334 337Q285 380 233 380Q171 380 132 331T92 214Z"></path></g></g><g data-mml-node="TeXAtom" transform="translate(533,-315.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(521,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1299,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g></g></svg></mjx-container></span> 收敛. <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.76ex" height="1.559ex" role="img" focusable="false" viewBox="0 -689 778 689"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="25FC" d="M71 0Q59 4 55 16V346L56 676Q64 686 70 689H709Q719 681 722 674V15Q719 10 709 1L390 0H71Z"></path></g></g></g></svg></mjx-container></span></p>
<p><strong><em>REMARK</em></strong> : 从定理1中我们知道:</p>
<ul>
<li>收敛的牛顿法总是会收敛至驻点而不仅仅是极小点;</li>
<li>牛顿法在初值点足够接近极小点时才会有效;</li>
</ul>
<h3 id="牛顿法的优缺点">牛顿法的优缺点</h3>
<p>优点不言而喻: 收敛速度快.</p>
<p>然而虽然牛顿法在接近驻点时收敛速度至少为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></span> 阶,
但是它的两个致命的缺点是要解决计算黑塞矩阵及其逆矩阵逆矩阵,
计算黑塞矩阵至少需要求导 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="23.64ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 10449 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(1822.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2422.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2811.4,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3633.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(4633.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5133.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5522.9,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mn" transform="translate(6022.9,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(6800.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(7856.4,0)"><path data-c="398" d="M56 340Q56 423 86 494T164 610T270 680T388 705Q521 705 621 601T722 341Q722 260 693 191T617 75T510 4T388 -22T267 3T160 74T85 189T56 340ZM610 339Q610 428 590 495T535 598T463 651T384 668Q332 668 289 638T221 566Q168 485 168 339Q168 274 176 235Q189 158 228 105T324 28Q356 16 388 16Q415 16 442 24T501 54T555 111T594 205T610 339ZM223 263V422H263V388H514V422H554V263H514V297H263V263H223Z"></path></g><g data-mml-node="mo" transform="translate(8634.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(9023.4,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10060,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></span> 次, <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container></span> 比较大时运算量也比较大;
求逆矩阵方法之一是解线性方程组 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="15.475ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 6839.8 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(749,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1138,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(2161.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="msub" transform="translate(2550.4,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(553,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(3799.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mo" transform="translate(4855.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5633.4,0)"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(510,-150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g><g data-mml-node="mo" transform="translate(6561.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g></g></svg></mjx-container></span> 复杂度一般为 <span class="math inline"><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.461ex" height="2.451ex" role="img" focusable="false" viewBox="0 -833.2 2855.6 1083.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1152,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(2188.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2577.6,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g></g></g></svg></mjx-container></span>
后面的算法可以有效解决这些问题.</p>
]]></content>
      <categories>
        <category>Optimization</category>
      </categories>
  </entry>
  <entry>
    <title>组合数学（三）：容斥原理</title>
    <url>/2022/08/26/math/combinatorial-math/ex-include/</url>
    <content><![CDATA[<h2 id="容斥原理的基本形式">容斥原理的基本形式</h2>
<p>减法原理是容斥原理的最简单示例。</p>
<p><strong>定理1</strong> 设 <span
class="math inline">\(A_1,A_2,\cdots,A_n\)</span> 为集合，指标集 <span
class="math inline">\(I=\{1,2,\cdots,n\},\)</span> 则 <span
class="math display">\[
\begin{aligned}
\left\vert \bigcup_{i\in I} A_i\right\vert =\sum_{k\in
I}(-1)^{k-1}\sum_{X\subseteq I\land \vert X\vert =k}\left\vert
\bigcap_{i\in X}A_i\right\vert .
\end{aligned}\quad\quad (*)
\]</span> 它用来求一些有交集的集合的并集的元素个数。若有全集 <span
class="math inline">\(U\)</span> ，则可以有另一种表述，即 <span
class="math display">\[
\begin{equation}
\left\vert \bigcap_{i\in I} \overline{A_i}\right\vert =\vert U\vert
+\sum_{k\in I}(-1)^{k}\sum_{X\subseteq I\land \vert X\vert =k}\left\vert
\bigcap_{i\in X}A_i\right\vert .\quad\quad(**)
\end{equation}
\]</span> 这是很容易证的，利用 <span class="math inline">\(\rm
De~Morgan\)</span> 律以及 $=U-A=U-A$
即可。这个式子可用来求出不具有给定的所有性质的元素的个数。</p>
<!--more-->
<p>下面我们来证明容斥原理，这里我们证明另一种表述即式 <span
class="math inline">\(**\)</span> 。</p>
<p><strong><em>PROOF</em></strong> 设 <span class="math inline">\(x\in
A_i\)</span> 表示 <span class="math inline">\(x\)</span> 具有性质 <span
class="math inline">\(P_i,1\le i\le n.\)</span> 考虑恰好具有 <span
class="math inline">\(m\)</span> 条性质的元素 <span
class="math inline">\(x,\)</span> 我们利用 <span
class="math inline">\(x\)</span> 对式 <span
class="math inline">\(**\)</span>
每一部分的“贡献”进行证明，这个贡献的意思是，我们在计数的时候，元素 <span
class="math inline">\(x\)</span> 是否给我们的计数增加了 <span
class="math inline">\(1.\)</span> 只要 <span class="math inline">\(x\in
X,\)</span> 那么 <span class="math inline">\(x\)</span> 对 $X$
的贡献就为 <span class="math inline">\(1,\)</span> 否则为 <span
class="math inline">\(0.\)</span> 由于等式的左边计数了 <span
class="math inline">\(U\)</span>
中不具备所有性质的元素的个数，那么我们只需证明不具备任意一个性质的 <span
class="math inline">\(x\)</span> 给等式右边的贡献为 <span
class="math inline">\(1,\)</span> 具备至少一个性质的 <span
class="math inline">\(x\)</span> 给等式右边的贡献为 <span
class="math inline">\(0,\)</span> 就能说明等式右边也计数了 <span
class="math inline">\(U\)</span> 中不具备所有性质的元素的个数。</p>
<p>当 <span class="math inline">\(x\)</span> 一条性质也不具备即 <span
class="math inline">\(m=0\)</span> 时，它对等式 <span
class="math display">\[(**)\]</span> 右边的贡献为 <span
class="math inline">\(1-0+0-\cdots+(-1)^n \times0=1.\)</span> 当 <span
class="math inline">\(m\ge 1\)</span> 时，<span
class="math inline">\(x\)</span> 对 $U$ 的贡献为 <span
class="math inline">\(1=\binom{m}{0};\)</span> 对和式的第一项的贡献为
<span class="math inline">\((-1)\binom{m}{1},\)</span>
对和式的第二项的贡献为 <span
class="math inline">\((-1)^2\binom{m}{2},\)</span> 因为满足 <span
class="math inline">\(x \in A_i\cap A_j\)</span> 的集合 <span
class="math inline">\(A_i\)</span> 和 <span
class="math inline">\(A_j\)</span> 要在 <span
class="math inline">\(m\)</span> 个集合中选，数量为 <span
class="math inline">\(\binom{m}{2};\)</span> 以此类推，<span
class="math inline">\(x\)</span> 对等式 <span
class="math display">\[(**)\]</span> 右边的贡献为 <span
class="math display">\[
\binom{m}{0}+\sum_{k=1}^{n}(-1)^k\binom{m}{k}=\sum_{k=0}^n(-1)^k\binom{m}{k}
\]</span> 当 <span class="math inline">\(k&gt;m\)</span> 时 <span
class="math inline">\(\binom{m}{k}=0\)</span> 且 <span
class="math inline">\(n\ge m,\)</span> 于是 <span
class="math display">\[
\sum_{k=0}^n(-1)^k\binom{m}{k}=\sum_{k=0}^m(-1)^k\binom{m}{k}=0,
\]</span> 这表明了若 <span class="math inline">\(x\)</span>
具有至少一个性质，那么它对式 <span class="math display">\[(**)\]</span>
右边的贡献为零；若 <span class="math inline">\(x\)</span>
不具有任何一个性质，它对式 <span class="math display">\[(**)\]</span>
右边的贡献为 <span class="math inline">\(1,\)</span> 这就是要证的。<span
class="math inline">\(\square\)</span></p>
<p>倘若 $<em>{1jk} A</em>{i_j}$ 仅依赖于 <span
class="math inline">\(k\)</span> 而不依赖于在交集中使用了哪 <span
class="math inline">\(k\)</span> 个集合，那么我们可以令 <span
class="math inline">\(\alpha_k=\vert \bigcap_{1\le j\le k} A_{i_j}\vert
(1\le k\le n),\)</span> 那么容斥原理可以有下面的特殊形式： <span
class="math display">\[
\left\vert \bigcup_{i\in I} A_i\right\vert
=\sum_{k=1}^n(-1)^{k-1}\binom{n}{k}\alpha_k,\tag{***}
\]</span> 式中的组合数是和式 $<em>{XIX=k}</em>{iX}A_i$ 项的个数（即
<span class="math inline">\(I\)</span> 的 <span
class="math inline">\(k\)</span> 子集的个数），且每一项都为 <span
class="math inline">\(\alpha_k.\)</span></p>
<h2 id="容斥原理的应用1">容斥原理的应用（1）</h2>
<h3 id="多重集合的组合2">多重集合的组合（2）</h3>
<p>在多重集合的组合（1）部分，我们讨论了多重集合 <span
class="math inline">\(\mathcal{S}=\{n_1\cdot a_1,n_2\cdot
a_2,\cdots,n_k\cdot a_k\}\)</span> 在 <span class="math inline">\(n_i\ge
r(i=1,2,\cdots,k)\)</span> 时它的 <span class="math inline">\(r\)</span>
组合的个数。现在我们考虑 <span class="math inline">\(n_i&lt;r(1\le i\le
k)\)</span> 的情形，也即不定方程 <span
class="math inline">\(x_1+x_2+\cdots+x_k=r\)</span>
的部分元有上界时的非负整数解的组数。</p>
<p>我们举一个例子：</p>
<p><strong>例1</strong> 求集合 <span class="math inline">\(\{3\cdot
a,4\cdot b,5\cdot c\}\)</span> 的 <span
class="math inline">\(10\)</span> 组合数目。</p>
<p><strong><em>SOL</em></strong> 设 <span
class="math inline">\(T=\{\infty\cdot a,\infty \cdot b,\infty\cdot
c\}\)</span> 的 <span class="math inline">\(10\)</span> 组合的集合为
<span class="math inline">\(S,\)</span> <span
class="math inline">\(T\)</span> 的 <span
class="math inline">\(10\)</span> 组合中 <span
class="math inline">\(a\)</span> 的个数至少为 <span
class="math inline">\(4\)</span> 的那部分的集合记作 <span
class="math inline">\(A,\)</span> <span class="math inline">\(b\)</span>
的个数至少为 <span class="math inline">\(5\)</span> 的那部分的集合记作
<span class="math inline">\(B,\)</span> <span
class="math inline">\(c\)</span> 的个数至少为 <span
class="math inline">\(6\)</span> 的那部分的集合记作 <span
class="math inline">\(C,\)</span> 则问题转化为求 <span
class="math inline">\(\vert \overline{A}\cap \overline{B}\cap
\overline{C}\vert .\)</span> 由容斥原理得 <span class="math display">\[
\vert \overline{A}\cap \overline{B}\cap \overline{C}\vert =\vert S\vert
-\sum\vert A\vert +\sum\vert A\cap B\vert -\vert A\cap B\cap C\vert
\tag{i}
\]</span> 且由已知结论得 <span class="math inline">\(\vert S\vert
=\binom{10+3-1}{3-1}=\binom{12}{2}=66.\)</span> 对于 <span
class="math inline">\(A,\)</span> 容易发现它是 <span
class="math inline">\(T\)</span> 的 <span
class="math inline">\(6\)</span> 组合的集合（倘若我们取出 <span
class="math inline">\(A\)</span> 中的任意一个元素并去掉其中的 <span
class="math inline">\(4\)</span> 个 <span
class="math inline">\(a,\)</span> 那么就得到了 <span
class="math inline">\(T\)</span> 的一个 <span
class="math inline">\(6\)</span> 组合；若在 <span
class="math inline">\(T\)</span> 的某个 <span
class="math inline">\(6\)</span> 组合加入 <span
class="math inline">\(4\)</span> 个 <span
class="math inline">\(a,\)</span> 便又得到了 <span
class="math inline">\(A\)</span> 中的一个元素），于是 <span
class="math inline">\(\vert A\vert
=\binom{6+3-1}{3-1}=\binom{8}{2}=28.\)</span> 同理有 <span
class="math inline">\(\vert B\vert =\binom{7}{2}=21,\vert C\vert
=\binom{6}{2}=15.\)</span> 对于 <span class="math inline">\(\vert A\cap
B\vert ,\)</span> 按照上述的分析思路，可以发现它是 <span
class="math inline">\(T\)</span> 的 <span
class="math inline">\(1\)</span> 组合数目，于是 <span
class="math inline">\(\vert A\cap B\vert =\binom{3}{2}=3,\)</span>
同理有 <span class="math inline">\(\vert B\cap C\vert =0,\vert A\cap
C\vert =\binom{0+3-1}{0}=1,\vert A\cap B\cap C\vert =0.\)</span> 代入
<span class="math inline">\(\rm i\)</span> 计算得 <span
class="math inline">\(\vert \overline{A}\cap \overline{B}\cap
\overline{C}\vert =6.\)</span> 于是 <span class="math inline">\(\{3\cdot
a,4\cdot b,5\cdot c\}\)</span> 的 <span
class="math inline">\(10\)</span> 组合有 <span
class="math inline">\(6\)</span> 个。<span
class="math inline">\(\square\)</span></p>
<p>如果没有直接设出 <span class="math inline">\(A,B,C\)</span>
而是直接设出它们在 <span class="math inline">\(S\)</span>
中的补集，像下面这样：</p>
<blockquote>
<p><span class="math inline">\(\{3\cdot a,\infty \cdot b,\infty\cdot
c\}\)</span> 的 <span class="math inline">\(10\)</span> 组合的集合为
<span class="math inline">\(A_1,\)</span> <span
class="math inline">\(\{\infty\cdot a,4 \cdot b,\infty\cdot c\}\)</span>
的 <span class="math inline">\(10\)</span> 组合的集合为 <span
class="math inline">\(A_2,\)</span> <span
class="math inline">\(\{\infty\cdot a,\infty \cdot b,5\cdot c\}\)</span>
的 <span class="math inline">\(10\)</span> 组合的集合为 <span
class="math inline">\(A_3,\)</span> 那么问题转化为求 <span
class="math inline">\(\vert A_1\cap A_2\cap A_3\vert .\)</span>
且由容斥原理得</p>
<p><span class="math display">\[
   \vert A_1\cap A_2\cap A_3\vert =\vert A_1\cup A_2\cup A_3\vert
-\sum\vert A_i\vert +\sum\vert A_i\cap A_j\vert \\=\vert A\vert
-\sum\vert A_i\vert +\sum\vert A_i\cap A_j\vert
   \]</span></p>
<p>且 <span class="math inline">\(\vert A\vert
=\binom{10+3-1}{3-1}=\binom{12}{2}=66.\)</span></p>
<p><span class="math display">\[
   \begin{aligned}
   \vert A_1\vert =\sum_{0\le i\le 3}\binom{10-i+2-1}{2-1}=\sum_{0\le
i\le 3}\binom{11-i}{1}=38\\
   \vert A_2\vert =\sum_{0\le i\le 4}\binom{10-i+2-1}{2-1}=\sum_{0\le
i\le 4}\binom{11-i}{1}=45\\
   \vert A_3\vert =\sum_{0\le i\le 5}\binom{10-i+2-1}{2-1}=\sum_{0\le
i\le 5}\binom{11-i}{1}=51
   \end{aligned}
   \]</span></p>
</blockquote>
<p>求 $A_1,A_2,A_3$ 还算简单，但是 $A_iA_j$
计算起来就略有些麻烦，更不要说多重集合的元素更多的题目了。</p>
<h3 id="错位排列">错位排列</h3>
<p>错位排列的意思是，将给定的没有重复元素的字符串进行重新排列，使得每一个元素都不在原来的位置上。比如对于
<span class="math inline">\(123,\)</span> 它的一个错位排列就是 <span
class="math inline">\(312.\)</span> 设含有 <span
class="math inline">\(n\)</span> 个不重复元素的字符串的错位排列的数目为
<span class="math inline">\(D_n,\)</span> 下面给出 <span
class="math inline">\(D_n\)</span> 的通项公式。</p>
<p><strong><em>SOL</em></strong> 记第 <span
class="math inline">\(\ell(1\le \ell\le n)\)</span> 个元素在第 <span
class="math inline">\(\ell\)</span>
个位置（即它原来的位置）的排列的集合为 <span
class="math inline">\(A_{\ell},\)</span> 那么问题就转化为求 <span
class="math inline">\(\left\vert \bigcap_{i\in I}
\overline{A_i}\right\vert ,\)</span> 从而可以直接使用容斥原理。注意到
<span class="math inline">\(\left\vert \bigcap_{i\in X}A_i\right\vert
(X\subseteq I\land \vert X\vert =k)\)</span> 仅仅依赖于 <span
class="math inline">\(k\)</span> 而不依赖于在交集中使用了哪 <span
class="math inline">\(k\)</span>
个集合，此时是我们在上面介绍过的容斥原理的特殊形式，且 <span
class="math inline">\(\alpha_k=(n-k) !,\)</span> 于是直接使用式 <span
class="math inline">\((***),\)</span> 得 <span class="math display">\[
\begin{aligned}
D_n=n!-\left\vert \bigcup_{i\in I} A_i\right\vert
&amp;=n!-\sum_{k=1}^n(-1)^{k-1}\binom{n}{k}\alpha_k\\
&amp;=n!+\sum_{k=1}^n(-1)^{k}\frac{n!}{k!(n-k)!}\cdot(n-k)!\\
&amp;=n!\sum_{k=0}^{n}\frac{(-1)^{k}}{k!}\\
&amp;=n!\left(1-\frac{1}{1!}+\frac{1}{2!}-\frac{1}{3!}-\cdots+(-1)^{n}\frac{1}{n!}\right)
\end{aligned}
\]</span> <span class="math inline">\(\square\)</span></p>
<p>于是给出下面的定理：</p>
<p><strong>定理2</strong> 对于 <span class="math inline">\(n\ge
1,\)</span> 有 <span class="math display">\[
D_n=n!\sum_{k=0}^{n}\frac{(-1)^{k}}{k!}.
\]</span> 若从 <span class="math inline">\(\{1,2,\cdots,n\}\)</span>
的排列中中任意取出一个排列，则它是错位排列的概率 <span
class="math inline">\(P_n=D_n/n!,\)</span> 且 <span
class="math display">\[
\lim_{n\to\infty}
P_n=\sum_{k=0}^{\infty}\frac{(-1)^k}{k!}=\frac{1}{\mathrm{e}}.
\]</span> 这可对 <span class="math inline">\(D_n\)</span>
作估计。实际上， <span class="math inline">\(D_n\)</span> 是最接近 <span
class="math inline">\(n!/\mathrm{e}\)</span> 的整数。</p>
<p>除了利用容斥原理求出 <span class="math inline">\(D_n\)</span>
的方法，还有一种利用递推公式求通项公式的方法。</p>
<p><strong><em>SOL</em></strong> 注意到 <span
class="math inline">\(\{1,2,\cdots,n\}\)</span> 的 <span
class="math inline">\(D_n\)</span> 个错位排列按照第一个位置为 <span
class="math inline">\(2,3,\cdots,n\)</span> 这 <span
class="math inline">\(n-1\)</span> 中的一个可划分为 <span
class="math inline">\(n-1\)</span> 个部分，且这 <span
class="math inline">\(n-1\)</span> 个部分每一部分的数量都相等，设为
<span class="math inline">\(d_n,\)</span> 有 <span
class="math inline">\(D_n=(n-1)d_n.\)</span> 考虑 <span
class="math inline">\(2\)</span> 在第一个位置的错位排列 <span
class="math inline">\(2i_2i_3\cdots i_n,\)</span> 它又可以根据 <span
class="math inline">\(i_2=1\)</span> 和 <span
class="math inline">\(i_2\ne 1\)</span> 划分为两个子部分，设 <span
class="math inline">\(i_2=1\)</span> 的部分的数目为 <span
class="math inline">\(d_n&#39;,\)</span> <span
class="math inline">\(i_2\ne 1\)</span> 的部分的数目为 <span
class="math inline">\(d_n&#39;&#39;.\)</span> 对于 <span
class="math inline">\(d_n&#39;,\)</span> 它等于 <span
class="math inline">\(\{3,4,\cdots,n\}\)</span> 的错位排列数目，即 <span
class="math inline">\(d_n&#39;=D_{n-1};\)</span> 而对于 <span
class="math inline">\(d_n&#39;&#39;,\)</span> 不考虑最左边的 <span
class="math inline">\(2,\)</span> 这相当于 <span
class="math inline">\(1\)</span>
不能在第一个位置，剩下的数字不能在各自原来的位置，于是它是 <span
class="math inline">\(\{1,3,4,\cdots,n\}\)</span> 共 <span
class="math inline">\(n-1\)</span> 个数字的错位排列数目，即 <span
class="math inline">\(d_n&#39;&#39;=D_{n-1},\)</span> 这就得到了 <span
class="math inline">\(D_n=(n-1)(D_{n-1}+D_{n-2})(n\ge 3).\)</span></p>
<p>若设 <span
class="math inline">\(D_n+(An+B)D_{n-1}=C(D_{n-1}+(A(n-1)+B)D_{n-2}),\)</span>
则可以求出 <span class="math inline">\(A=-1,B=0,C=-1,\)</span> 于是就有
<span
class="math inline">\(D_n-nD_{n-1}=-(D_{n-1}-(n-1)D_{n-2})=\cdots=(-1)^{n-2}(D_2-2D_1)=(-1)^n,\)</span>
即 <span class="math inline">\(D_n=nD_{n-1}+(-1)^n.\)</span>
两边同时除以 <span class="math inline">\(n!,\)</span> 有 <span
class="math inline">\(D_n/n!=D_{n-1}/(n-1)!+(-1)^n/n!,\)</span>
再利用迭代即得通项公式。<span class="math inline">\(\square\)</span></p>
<p>这是不借助容斥原理求出错位排列通项公式的做法。想起来了做过的一道类似借助等式两边除以阶乘的求通项公式的题目：</p>
<blockquote>
<p>数列 <span class="math inline">\(\{a_n\}\)</span> 满足 <span
class="math display">\[
a_{n+2}=\frac{2}{n+2}a_{n+1}-\frac{1}{(n+2)(n+1)}a_n,n\ge 0,
\]</span> 且 <span class="math inline">\(a_0=1,a_1=2,\)</span>
求其通项公式。</p>
<p><strong><em>SOL</em></strong> <span class="math display">\[
\begin{aligned}
&amp;a_{n+2}=\frac{2}{n+2}a_{n+1}-\frac{1}{(n+2)(n+1)}a_n\\
&amp;(n+2)(n+1)a_{n+2}-(n+1)a_{n+1}=(n+1)a_{n+1}-a_n\\
&amp;\frac{(n+2)!}{n!}a_{n+2}-\frac{(n+1)!}{n!}a_{n+1}=\frac{(n+1)!}{n!}a_{n+1}-a_n\\
&amp;(n+2)!a_{n+2}-(n+1)!a_{n+1}=(n+1)!a_{n+1}-n!a_{n}=a_1-a_0=1
\end{aligned}
\]</span> 于是 <span class="math inline">\(n!a_n=n+1,\)</span> 即 <span
class="math display">\[
a_n=\frac{n+1}{n!}.
\]</span></p>
</blockquote>
<p>倘若还有数列 <span class="math inline">\(\{a_n\}\)</span> 满足 <span
class="math inline">\(a_n=(n-1)(a_{n-1}+a_{n-2})\)</span> 且 <span
class="math inline">\(a_1=1,a_2=2,\)</span> 那么就有 <span
class="math inline">\(a_n=n a_{n-1},\)</span> 则显然有 <span
class="math inline">\(a_n=n!.\)</span> 即 <span
class="math inline">\(n!=(n-1)((n-1)!+(n-2)!),\)</span>
看上去似乎没那么显然。</p>
<h2 id="莫比乌斯反演">莫比乌斯反演</h2>
<p>我们在这里讨论更一般的容斥原理。<strong>容斥原理是莫比乌斯反演（Möbius
Inversion）在有限偏序集上的一个实例。</strong>
为了给莫比乌斯反演的一般性设置一个好的平台，我们先讨论某种程度上更具有一般性的容斥原理。</p>
<h3 id="引子偏序集-mathscrpx_nsubseteq">引子：偏序集 <span
class="math inline">\((\mathscr{P}(X_n),\subseteq)\)</span></h3>
<p>设 <span class="math inline">\(n\)</span> 为正整数且 <span
class="math inline">\(X_n=\{1,2,\cdots,n\},\)</span> 以及偏序集 <span
class="math inline">\((\mathscr{P}(X_n),\subseteq).\)</span>
定义实值函数 <span class="math inline">\(F:\mathscr{P}(X_n)\to
\mathbb{R},\)</span> 其中 <span
class="math inline">\(\mathscr{P}(X_n)\)</span> 为 <span
class="math inline">\(X_n\)</span> 的幂集。同时利用 <span
class="math inline">\(F\)</span> 定义实值函数 $G:(X_n) $ 且 <span
class="math display">\[
G(K)=\sum_{L\subseteq K}F(L),K\subseteq X_n.
\]</span> 上式中，<span class="math inline">\(K\)</span> 是 <span
class="math inline">\(X_n\)</span> 的一个子集，<span
class="math inline">\(G(K)\)</span> 是函数 <span
class="math inline">\(F\)</span> 在 <span
class="math inline">\(K\)</span> 的所有子集 <span
class="math inline">\(L\)</span> 处的函数值的和。若已知函数 <span
class="math inline">\(G,\)</span> 莫比乌斯反演可求出函数 <span
class="math inline">\(F,\)</span> 由下面的关系式确定： <span
class="math display">\[
F(K)=\sum_{L\subseteq K}(-1)^{\vert K\vert -\vert L\vert
}G(L),K\subseteq X_n.\tag{ii}
\]</span> 其中二元函数 <span class="math inline">\(f(A,B)=(-1)^{\vert
A\vert -\vert B\vert }\)</span> 称为偏序集 <span
class="math inline">\((\mathscr{P}(X_n),\subseteq)\)</span>
上的莫比乌斯函数，等式 <span class="math inline">\((\rm ii)\)</span>
即为偏序集 <span
class="math inline">\((\mathscr{P}(X_n),\subseteq)\)</span>
上的莫比乌斯反演公式，我们会在后面给出这个式子的证明。</p>
<p>现在我们给出 <span class="math inline">\(F\)</span>
的更确切的定义，并借助等式 <span class="math inline">\((\rm ii)\)</span>
推导出更一般的容斥原理 。设 <span
class="math inline">\(A_1,A_2,\cdots,A_n\)</span> 是有限集 <span
class="math inline">\(S\)</span> 的子集，对于 <span
class="math inline">\(K\subseteq X_n,\)</span> 我们定义 <span
class="math display">\[
\begin{aligned}
F(K)&amp;=\#\{x\in S\mid \forall i\notin K,x\in A_i\land \forall j\in
K,x\notin A_j\}\\
&amp;=\#\left\{x\in S\mid x\in\bigcap_{i\notin K} A_i\land x\notin
\bigcup_{j\in K}A_j \right \}\\
\end{aligned}
\]</span> 其中对于集合 <span class="math inline">\(S\)</span> 有 <span
class="math display">\[\# S=\vert S\vert ,\]</span> 上面 <span
class="math inline">\(F\)</span> 的定义用语言描述就是：<strong><span
class="math inline">\(F(K)\)</span> 为 <span
class="math inline">\(S\)</span> 中<em>恰好</em> 属于所有 <span
class="math inline">\(i\notin K\)</span> 的集合 <span
class="math inline">\(A_i\)</span> 的元素的个数</strong>。若 <span
class="math inline">\(x\in A_i\)</span> 表明 <span
class="math inline">\(x\)</span> 具有性质 <span
class="math inline">\(P_i,\)</span> 则 <span
class="math inline">\(F(K)\)</span> 计数了<strong>恰好具有</strong>
$n-K$ 个性质的元素的个数，且这 $n-K$ 个性质为 <span
class="math inline">\(P_i,i\notin K.\)</span> 下面我们证明 <span
class="math inline">\(G(K)=\left\vert \bigcap_{i\notin K} A_i\right\vert
.\)</span> 为了体现证明的思想，我们先举一个实例。</p>
<blockquote>
<p>假设 <span class="math inline">\(X_4\)</span> 以及 <span
class="math inline">\(K=\{1,2\},\)</span> 那么 <span
class="math inline">\(F(K)\)</span> 为属于 <span
class="math inline">\(A_3,A_4\)</span> 且不属于 <span
class="math inline">\(A_1,A_2\)</span> 的元素的个数，即 <span
class="math inline">\(F(K)\)</span> 计数了恰好具有 <span
class="math inline">\(P_3,P_4\)</span> 这两条性质的元素。<span
class="math inline">\(L=\emptyset\)</span> 时，<span
class="math inline">\(F(L)\)</span> 计数了恰好具有 <span
class="math inline">\(P_1,P_2,P_3,P_4\)</span> 这四条性质的元素；<span
class="math inline">\(L=\{1\}\)</span> 时，<span
class="math inline">\(F(L)\)</span> 计数了恰好具有 <span
class="math inline">\(P_2,P_3,P_4\)</span> 这三条性质的元素；<span
class="math inline">\(L=\{2\}\)</span> 时，<span
class="math inline">\(F(L)\)</span> 计数了恰好具有 <span
class="math inline">\(P_1,P_3,P_4\)</span> 这三条性质的元素；<span
class="math inline">\(L=\{1,2\}\)</span> 时，<span
class="math inline">\(F(L)\)</span> 计数了恰好具有 <span
class="math inline">\(P_3,P_4\)</span> 这两条性质的元素。 在具有 <span
class="math inline">\(P_3,P_4\)</span>
这两条性质的元素中，根据它们是否具有性质 <span
class="math inline">\(P_1,P_2\)</span>
可以划分为四部分，这刚好是上面的四个 <span
class="math inline">\(F(L),\)</span> 于是 <span
class="math inline">\(G(K)\)</span> 计数了 <span
class="math inline">\(A_3\cap A_4\)</span> 中的元素的个数。</p>
</blockquote>
<p>对于 <span class="math inline">\(X_n\)</span> 的情况，设 <span
class="math inline">\(K=\{i_1,i_2,\cdots,i_s\},X_n-K=\{j_1,j_2,\cdots,j_t\},s+t=n.\)</span>
在同时具有 <span
class="math inline">\(P_{j_1},P_{j_2},\cdots,P_{j_t}\)</span> 这 <span
class="math inline">\(s\)</span> 个性质的元素中，根据它们是否具有性质
$P_{i_1},P_{i_2},,P_{i_s} $ 可以划分为 <span
class="math inline">\(2^s\)</span> 个部分，这恰好是 <span
class="math inline">\(L\subseteq K\)</span>
的个数，且每一部分的元素所具有的性质的指标集恰好与这 <span
class="math inline">\(2^s\)</span> 个 <span
class="math inline">\(K\)</span> 的子集一一对应，而 <span
class="math inline">\(G(K)\)</span> 将这 <span
class="math inline">\(2^s\)</span> 个 <span
class="math inline">\(F(L)\)</span> 进行求和，所得到的刚好是具备 <span
class="math inline">\(P_{j_1},P_{j_2},\cdots,P_{j_t}\)</span> 这 <span
class="math inline">\(s\)</span> 个性质的元素的个数，这就表明了 <span
class="math display">\[
G(K)=\left\vert \bigcap_{1\le \ell\le s}A_{j_{\ell}}\right\vert
=\left\vert \bigcap_{i\in X_n-K}A_i\right\vert =\left\vert
\bigcap_{i\notin K}A_i\right\vert .
\]</span> 现在我们用式 <span class="math inline">\(\rm (ii)\)</span>
来得到更一般的容斥原理。将 <span class="math inline">\(X_n\)</span>
代入式 <span class="math inline">\(\rm (ii)\)</span> 得 <span
class="math display">\[
F(X_n)=\sum_{L\subseteq X_n}(-1)^{n-\vert L\vert }G(L)=\sum_{L\subseteq
X_n}(-1)^{n-\vert L\vert }\left\vert \bigcap_{i\notin L}A_i\right\vert
=\sum_{J\subseteq X_n}(-1)^{\vert J\vert }\left\vert \bigcap_{i\in
J}A_i\right\vert
\]</span> 其中 <span class="math inline">\(J\)</span> 是 <span
class="math inline">\(L\)</span> 在 <span
class="math inline">\(X_n\)</span>
中的补集，最后两个和式之间可以一一对应。而 <span
class="math inline">\(F(X_n)\)</span> 计数了恰好具有 <span
class="math inline">\(0\)</span>
个性质的元素的个数即不具备所有性质的元素的个数，于是 <span
class="math display">\[
F(X_n)=\left\vert \bigcap_{i\in X_n} \overline{A_i}\right\vert
=\sum_{J\subseteq X_n}(-1)^{\vert J\vert }\left\vert \bigcap_{i\in
J}A_i\right\vert .\tag{iii}
\]</span> 式 <span class="math inline">\(\rm(iii)\)</span> 与式 <span
class="math display">\[(**)\]</span>
显然是等价的。这就是更为一般的容斥原理。</p>
<h3 id="更一般的偏序集-xpreccurlyeq-的莫比乌斯反演公式">更一般的偏序集
<span class="math inline">\((X,\preccurlyeq)\)</span>
的莫比乌斯反演公式</h3>
<p>现在我们讨论更一般的偏序集 <span
class="math inline">\((X,\preccurlyeq).\)</span> 设所有只要满足 <span
class="math inline">\(x\succ y(x,y\in X)\)</span> 就有 <span
class="math inline">\(f(x,y)=0\)</span> 的实值函数 <span
class="math inline">\(f:X\times X\to\mathbb{R}\)</span> 的集合为 <span
class="math inline">\(\mathcal{F}.\)</span> 若 <span
class="math inline">\(f,g\in\mathcal{F},\)</span> 定义 <span
class="math inline">\(f\)</span> 和 <span
class="math inline">\(g\)</span> 的卷积为 <span class="math display">\[
h(x,y)=(f*g)(x,y)=
\begin{cases}
\displaystyle \sum_{x\preccurlyeq z \preccurlyeq
y}f(x,z)f(z,y),&amp;x\preccurlyeq y,\\
0,&amp;\text{otherwise.}
\end{cases}
\]</span> 卷积运算不具有交换律，但是它具有结合律：</p>
<p><strong>定理3</strong> 卷积满足结合律 <span
class="math display">\[f*(g*h)=(f*g)*h.\]</span></p>
<p>我们关注 <span class="math inline">\(\mathcal{F}\)</span>
里的三种特殊函数。</p>
<p><strong>Kronecker delta function <span
class="math inline">\(\delta(x,y):\)</span></strong> <span
class="math display">\[
\delta (x,y)=
\begin{cases}
1,&amp;x=y,\\
0,&amp;\text{otherwise.}
\end{cases}
\]</span> <strong>zeta function <span
class="math inline">\(\zeta(x,y):\)</span> </strong> <span
class="math display">\[
\zeta (x,y)=
\begin{cases}
1,&amp;x\preccurlyeq y\\
0,&amp;\text{otherwise.}
\end{cases}
\]</span> 在介绍第三种函数之前，我们先根据 <span
class="math inline">\(\delta\)</span>
函数的特殊性质给出一些新的定义。对于 <span
class="math inline">\(\delta(x,y)\)</span> 函数而言，我们可以验证它满足
<span class="math inline">\(\forall f\in\mathcal{F},\)</span> 都有 <span
class="math display">\[f*\delta=\delta*f=f.\]</span>
这表明对于卷积运算而言，<span class="math inline">\(\delta\)</span>
是一个恒等函数，它是一个<strong>恒等元（Identity）</strong>。于是借助恒等元，我们可以定义<strong>逆元</strong>。即对于函数
<span class="math inline">\(f\in\mathcal{F},\)</span> 若存在 <span
class="math inline">\(g\in \mathcal{F}\)</span> 使得 <span
class="math display">\[g*f=\delta,\]</span> 我们称 <span
class="math inline">\(g\)</span> 是 <span
class="math inline">\(f\)</span>
的左逆函数；同理可以定义右逆函数。有下面的定理：</p>
<p><strong>定理4</strong> <span class="math inline">\(\forall
f\in\mathcal{F}\land \forall y\in X,f(y,y)\ne 0,\)</span> <span
class="math inline">\(f\)</span> 都存在左逆函数 <span
class="math inline">\(g\)</span> 和右逆函数 <span
class="math inline">\(h,\)</span> 并且 <span
class="math inline">\(g=h.\)</span></p>
<p>于是对于满足定理4条件的函数 <span class="math inline">\(f,\)</span>
它都有<strong>逆函数</strong> <span class="math inline">\(g\)</span>
满足 <span class="math display">\[f*g=g*f=\delta.\]</span> 由于 <span
class="math inline">\(\zeta\)</span> 函数满足 <span
class="math inline">\(\forall x\in X,\zeta(x,x)\ne 0,\)</span>
则它有逆函数，我们定义 <span class="math inline">\(\zeta\)</span>
函数的逆函数为 <span class="math inline">\(\mu,\)</span> 即 <span
class="math display">\[\mu * \zeta =\delta.\]</span> 这就是
<strong>Möbius function <span
class="math inline">\(\mu(x,y).\)</span></strong> 因此 <span
class="math display">\[
\mu*\zeta=\sum_{x\preccurlyeq z \preccurlyeq
y}\mu(x,z)\zeta(z,y)=\sum_{x\preccurlyeq z \preccurlyeq
y}\mu(x,z)=\delta(x,y)(x\preccurlyeq y).
\]</span> 所以 <span class="math inline">\(\forall x\in
X,\mu(x,x)=1.\)</span> 当 <span class="math inline">\(x\prec y\)</span>
时， <span class="math display">\[
\sum_{x\preccurlyeq z \preccurlyeq y}\mu(x,z)=\sum_{x\preccurlyeq z
\prec y}\mu(x,z)+\mu(x,y)=\delta(x,y)=0\Rightarrow
\mu(x,y)=-\sum_{x\preccurlyeq z \prec y}\mu(x,z).
\]</span></p>
<p><strong>例2</strong> 我们现在来求偏序集 <span
class="math inline">\((\mathscr{P}(X_n),\subseteq)\)</span>
上的莫比乌斯函数。</p>
<p><strong>例3</strong> 求全序集 <span
class="math inline">\((X_n,\le)\)</span> 的莫比乌斯函数。</p>
<p>铺垫了那么多，现在我们可以给出并证明定义在有限偏序集上的莫比乌斯反演公式了。</p>
<p><strong>定理5（Möbius Inversion Formula）</strong> 设偏序集 <span
class="math inline">\((X,\preccurlyeq)\)</span> 有最小元，记作 <span
class="math inline">\(0.\)</span> 设 <span
class="math inline">\(\mu\)</span> 是它的莫比乌斯函数，并设 <span
class="math inline">\(F:X\to \mathbb{R}\)</span> 是定义在 <span
class="math inline">\(X\)</span> 上的实值函数，同时定义 <span
class="math inline">\(G:X\to\mathbb{R}\)</span> 满足 <span
class="math display">\[
G(x)=\sum_{z\preccurlyeq x}F(z),x\in X.
\]</span> 那么就有 <span class="math display">\[
F(x)=\sum_{y\preccurlyeq x}\mu(y,x)G(y),x\in X.
\]</span></p>
<blockquote>
<p>待更新。</p>
</blockquote>
<p><span class="math inline">\(\square\)</span></p>
<p><strong>例4</strong> 求偏序集 <span
class="math inline">\((X_n,\mid)\)</span>
的莫比乌斯函数，并给出最经典的数论上的莫比乌斯反演公式。</p>
<h2 id="其他的反演">其他的反演</h2>
<h3 id="二项式反演">二项式反演</h3>
<h3 id="min-max-反演"><span class="math inline">\(\min-\max\)</span>
反演</h3>
<blockquote>
<p>待更新。</p>
</blockquote>
<p><span class="math inline">\(\rm Stirling\)</span>
反演在组合数学（四）：特殊的计数序列中会提到。</p>
<blockquote>
<p>待更新的内容还有容斥原理求 <span
class="math inline">\(\varphi(n),\pi(x),\)</span>
以及相关的经典练习题与算法题。</p>
</blockquote>
]]></content>
      <categories>
        <category>Math</category>
        <category>Combinatorial Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>组合数学（二）：鸽巢原理</title>
    <url>/2022/08/26/math/combinatorial-math/pigeonhole/</url>
    <content><![CDATA[<p>鸽巢原理又称为 <span class="math inline">\(\rm Dirichlet\)</span>
抽屉原理，它的描述十分简单，却能推出一些不那么显然的结论。</p>
<h2 id="简单形式">简单形式</h2>
<p><strong>定理1</strong> 把 <span class="math inline">\(n+1\)</span>
个物体放入 <span class="math inline">\(n\)</span>
个盒子中，至少有一个盒子包含两个或两个以上的物体。</p>
<p><strong><em>PROOF</em></strong>
考虑反证法。假设所有盒子的物体都不超过 <span
class="math inline">\(1\)</span> 个，那么总的物体数量就 <span
class="math inline">\(\le n,\)</span> 这显然与条件矛盾，于是原命题成立。
<span class="math inline">\(\square\)</span></p>
<!--more-->
<p>对于鸽巢原理而言，我们只能用它来断定有盒子里面有两个或两个以上的物体，而对于寻找这样的盒子则无任何帮助。下面是与鸽巢原理相关的两个简单的定理。</p>
<p><strong>定理2</strong> 把 <span class="math inline">\(n\)</span>
个物体放入 <span class="math inline">\(n\)</span>
个盒子里并保证没有盒子是空的或者没有盒子被放入了多余 <span
class="math inline">\(1\)</span>
个的物体，那么每个盒子里恰好有一个物体。</p>
<p>鸽巢原理的形式较为显然，我们看一些例子。</p>
<p><strong>例1</strong> 给定 <span class="math inline">\(m\)</span>
个整数 <span class="math inline">\(a_1,a_2,\cdots,a_m,\)</span>
证明存在满足 <span class="math inline">\(0\le k&lt;l\le m\)</span>
的整数 <span class="math inline">\(k,l\)</span> 使得 <span
class="math inline">\(m\mid (a_{k+1}+a_{k+2}+\cdots+a_{l}).\)</span></p>
<p><strong><em>PROOF</em></strong> 考察下面 <span
class="math inline">\(m\)</span> 个和式： <span class="math display">\[
a_1,a_1+a_2,\cdots,a_1+a_2+\cdots+a_m,
\]</span> 若其中某个和能整除 <span class="math inline">\(m,\)</span>
那么结论成立；假设这 <span class="math inline">\(m\)</span> 个数和不整除
<span class="math inline">\(m,\)</span> 那么由鸽巢原理（余数最多有 <span
class="math inline">\(m-1\)</span> 种而一共有 <span
class="math inline">\(m\)</span> 个数 ）知存在 <span
class="math inline">\(0&lt;k&lt;l\le m\)</span> 使得 <span
class="math display">\[
a_1+a_2+\cdots+a_k\equiv a_1+a_2+\cdots+a_l(\bmod m),
\]</span> 这就表明了存在 <span class="math inline">\(0&lt;k&lt;l\le
m\)</span> 使得 <span class="math display">\[
m\mid\left(a_1+a_2+\cdots+a_l-(a_1+a_2+\cdots+a_k)\right)\Rightarrow
m\mid (a_{k+1}+\cdots+a_{l}),
\]</span> 综合两种情况结论得证。<span
class="math inline">\(\square\)</span></p>
<p><strong>例2</strong> 某人有 <span class="math inline">\(11\)</span>
周的时间备战一场比赛，他决定每天至少练习一次，但是为了不使自己过于疲劳他还决定任意连续的
<span class="math inline">\(7\)</span> 天内练习次数不能超过 <span
class="math inline">\(12\)</span>
次。证明存在连续的若干天，在这些天里这个人恰好练习了 <span
class="math inline">\(21\)</span> 次。</p>
<p><strong><em>PROOF</em></strong> 设 <span
class="math inline">\(a_n\)</span> 是他从第一天到第 <span
class="math inline">\(n\)</span> 天这 <span
class="math inline">\(n\)</span>
天练习的总次数，由于每天至少练习一次，因此数列 <span
class="math inline">\(\{a_n\}_{n=1}^{77}\)</span>
严格单调递增。由于任意连续的 <span class="math inline">\(7\)</span>
天内练习次数不能超过 <span class="math inline">\(12\)</span> 次，因此
<span class="math inline">\(1\le a_1&lt;\cdots&lt;a_{77}\le
12\times11=132.\)</span> 于是 <span class="math inline">\(22\le
a_1+21&lt;\cdots&lt;a_{77}+21\le 132+21=153.\)</span>
那么对于下面这不大于 <span class="math inline">\(153\)</span> 的 <span
class="math inline">\(154\)</span> 个数： <span class="math display">\[
a_1,a_2,\cdots,a_{77},a_1+21,a_2+21,\cdots,a_{77}+21
\]</span> 由鸽巢原理知其中至少有两个数相等，而 <span
class="math inline">\(a_i(1\le i\le 77)\)</span> 之间互不相等，<span
class="math inline">\(a_j+21(1\le j\le 77)\)</span>
之间也互不相等，于是存在 <span class="math inline">\(1\le j&lt;i\le
77\)</span> 使得 <span class="math inline">\(a_i=a_j+22,\)</span>
因此在第 <span class="math inline">\(j+1\)</span> 天到第 <span
class="math inline">\(i\)</span> 天内，这个人练习次数恰好为 <span
class="math inline">\(21.\)</span> <span
class="math inline">\(\square\)</span></p>
<p><strong>例3</strong> 从整数 <span
class="math inline">\(1,2,\cdots,2n\)</span> 中选出 <span
class="math inline">\(n+1\)</span> 个整数，证明在所选的整数中存在 <span
class="math inline">\(p,q\)</span> 使得 <span
class="math inline">\(p\mid q.\)</span></p>
<p><strong><em>PROOF</em></strong> 这个问题可以转化为：从 <span
class="math inline">\(n\)</span> 对夫妻中选出 <span
class="math inline">\(n+1\)</span> 个人，这 <span
class="math inline">\(n+1\)</span>
个人中至少有一对为夫妻，而这由鸽巢原理知显然成立（若再煞有介事的证明一下的话，可以这样：将这
<span class="math inline">\(n\)</span> 对夫妻与 <span
class="math inline">\(n\)</span> 个盒子对应，再把取出的 <span
class="math inline">\(n+1\)</span>
个人放到对应的盒子里，显然有一个盒子有两个人，这两个人是夫妻）。于是在这些整数中，可以把
<span class="math inline">\(k,2k(1\le k\le n)\)</span>
看作一对夫妻，于是原命题显然成立。<span
class="math inline">\(\square\)</span></p>
<p>另一种证明方法：这 <span class="math inline">\(2n\)</span>
个整数都可以写成 <span class="math inline">\(2^{k}\times a(k\ge
0)\)</span> 的形式，显然 <span class="math inline">\(a\)</span>
一定是奇数且 <span class="math inline">\(a\le 2n-1,\)</span> 也即一共有
<span class="math inline">\(n\)</span> 个奇数，那么由鸽巢原理知取出的
<span class="math inline">\(n+1\)</span> 个整数中一定有两个数的 <span
class="math inline">\(a\)</span> 是相等的，设这两个数为 <span
class="math inline">\(2^s\times a,2^{t}\times a(s\ne t),\)</span>
显然两者其中一个可以整除另一个。<span
class="math inline">\(\square\)</span></p>
<p><strong>例4</strong> 证明 <span
class="math inline">\(a/b(a,b\in\mathbb{N}_+,\gcd(a,b)=1)\)</span>
总可以写成十进制循环小数。</p>
<p><strong><em>PROOF</em></strong> 只需要考虑 <span
class="math inline">\(a&lt;b\)</span> 的情况（<span
class="math inline">\(a\ge b\)</span> 时化为真分数即可）。把 <span
class="math inline">\(a/b\)</span>
写成十进制小数的过程实际上为下面的带余除法： <span
class="math display">\[
10a=q_1b+r_1\\
10r_1=q_2b+r_2\\
10r_2=q_3b+r_3\\
\cdots
\]</span> 其中 <span class="math inline">\(0\le q_k\le 9,\)</span>
得到的小数是 <span class="math inline">\(0.q_1q_2q_3\cdots\)</span>
下面证明从某个 <span class="math inline">\(m\)</span> 开始，<span
class="math inline">\(\{q_n\}_{n=m}^{\infty}\)</span>
为循环数列。由于余数 <span class="math inline">\(r_k\)</span> 满足 <span
class="math inline">\(0\le r_k&lt;b,\)</span> 则由鸽巢原理知在 <span
class="math inline">\(r_1,r_2,\cdots,r_{b+1}\)</span> 中存在 <span
class="math inline">\(1\le s&lt;t\le b+1\)</span> 使得 <span
class="math inline">\(r_s=r_t,\)</span> 于是 <span
class="math inline">\(r_{s+1}=10r_s\bmod b=10r_{t}\bmod
b=r_{t+1},\)</span> 这表明了 <span class="math inline">\(\forall \ell\ge
0,\)</span> 都有 <span
class="math inline">\(r_{\ell+s}=r_{\ell+t}=r_{\ell+s+t-s}\Rightarrow
\forall n\ge s,r_{n}=r_{n+T},T=t-s\)</span> 因此 <span
class="math inline">\(\{r_n\}_{n=s}^{\infty}\)</span> 是周期为 <span
class="math inline">\(T\)</span> 的循环数列，且 <span
class="math inline">\(\forall n\ge
s,q_{n+1+T}=(10r_{n+T}-r_{n+1+T})/b=(10r_n-r_{n+1})/b=q_{n+1},\)</span>
于是 <span class="math inline">\(\{q_n\}_{n=s+1}^{\infty}\)</span>
也为周期为 <span class="math inline">\(T\)</span> 的循环数列，这就证得了
<span class="math inline">\(a/b\)</span> 总可以写成十进制循环小数。<span
class="math inline">\(\square\)</span></p>
<h2 id="加强形式">加强形式</h2>
<p><strong>定理3</strong> 设 <span
class="math inline">\(q_1,q_2,\cdots,q_n\)</span> 是正整数，若将 <span
class="math inline">\(q_1+q_1+\cdots+q_n-n+1\)</span> 个物体放入 <span
class="math inline">\(n\)</span> 个盒子中，那么对于所有的条件 <span
class="math inline">\(k(k=1,2,\cdots,n):\)</span> 第 <span
class="math inline">\(k\)</span> 个盒子至少存在 <span
class="math inline">\(q_k\)</span> 个物体，它们之中至少有一个成立。</p>
<p><strong><em>PROOF</em></strong> 仍然考虑反证法。假设对每个 <span
class="math inline">\(k(1\le k\le n),\)</span> 第 <span
class="math inline">\(k\)</span> 个盒子含有的物体数目小于 <span
class="math inline">\(q_k,\)</span> 那么所有物体数便不超过 <span
class="math inline">\(q_1-1+q_2-1+\cdots+q_n-1=q_1+\cdots+q_n-n,\)</span>
这与题设条件矛盾，于是原命题成立。<span
class="math inline">\(\square\)</span></p>
<p>令 <span class="math inline">\(q_1=q_2=\cdots=q_n=2\)</span>
即可得到简单形式的鸽巢原理。</p>
<p><strong>推论1</strong> 若把 <span
class="math inline">\(n(r-1)+1\)</span> 个物体放入 <span
class="math inline">\(n\)</span>
个盒子中，那么至少存在一个盒子，它里面至少有 <span
class="math inline">\(r\)</span> 个物体。</p>
<p><strong><em>PROOF</em></strong> <span
class="math inline">\(q_1=q_2=\cdots=q_n=r-1\)</span> 即得。<span
class="math inline">\(\square\)</span></p>
<p>换种表述方式：若 <span class="math inline">\(n\)</span>
个非负整数的平均数大于 <span class="math inline">\(r-1,\)</span>
那么至少有一个整数大于 <span class="math inline">\(r-1.\)</span></p>
<p><strong>例6</strong> 证明实数序列 <span
class="math inline">\(\{a_k\}_{1\le k\le n^2+1}\)</span> 要么含有长度为
<span class="math inline">\(n+1\)</span> 的递增子列，要么含有长度为
<span class="math inline">\(n+1\)</span> 的递减子列。</p>
<p><strong><em>PROOF</em></strong> 假设它不含有长度为 <span
class="math inline">\(n+1\)</span> 的递增子列，我们来证明它存在长度为
<span class="math inline">\(n+1\)</span> 的递减子列。对任意 <span
class="math inline">\(k=1,2,\cdots,n^2+1,\)</span> 设 <span
class="math inline">\(l_k\)</span> 是从 <span
class="math inline">\(a_k\)</span>
开始的最长的递增子列的长度，则在假设的条件下有 <span
class="math inline">\(1\le l_k\le n,\)</span> 数列 <span
class="math inline">\(\{l_k\}_{1\le k\le n^2+1}\)</span> 共有 <span
class="math inline">\(n^2+1\)</span> 项，于是由推论 <span
class="math inline">\(1\)</span> 知道存在 <span
class="math inline">\(n+1\)</span> 个数 <span class="math inline">\(1\le
i_1&lt;i_2&lt;\cdots&lt;i_{n+1}\le n^2+1\)</span> 使得 <span
class="math inline">\(l_{i_1}=l_{i_2}=\cdots=l_{i_{n+1}},\)</span>
下面我们证明 <span class="math inline">\(a_{i_1}\ge a_{i_2}\ge \cdots\ge
a_{i_{n+1}}.\)</span> 考虑反证法，假设存在某个 <span
class="math inline">\(j(1\le j\le n)\)</span> 使得 <span
class="math inline">\(a_{i_j}&lt;a_{i_NaN},\)</span>
那么以 <span class="math inline">\(a_{i_j}\)</span>
开始的最长的自增子列的长度 <span
class="math inline">\(l_{i_j}=l_{i_{j+1}}+1&gt;l_{i_{j+1}},\)</span>
这与 <span class="math inline">\(l_{i_j}=l_{i_{j+1}}\)</span> 矛盾，于是
<span class="math inline">\(a_{i_1}\ge a_{i_2}\ge \cdots\ge
a_{i_{n+1}},\)</span> 因此子序列 <span
class="math inline">\(\{a_{i_j}\}_{1\le j\le n+1}\)</span>
就是我们要找的长度为 <span class="math inline">\(n+1\)</span>
的递减子列。而另一种情况同理。<span
class="math inline">\(\square\)</span></p>
<h2 id="mathrmramsey-定理"><span
class="math inline">\(\mathrm{Ramsey}\)</span> 定理</h2>
<p>这是鸽巢原理的一个扩展。</p>
<p><strong>定理4 （<span class="math inline">\(\mathrm{Ramsey}\)</span>
定理）</strong> 给定 <span class="math inline">\(m,n\ge 2,\)</span>
则存在一个无向完全图 <span class="math inline">\(K_p,\)</span> 使得在给
<span class="math inline">\(K_p\)</span>
的各边用红色和蓝色进行着色后，能找到一个一个 <span
class="math inline">\(K_m\)</span> 子图或一个 <span
class="math inline">\(K_n\)</span>
子图，这个子图的所有边同时为蓝色或红色，这简记为 <span
class="math inline">\(K_p\to K_m,K_n.\)</span></p>
<p>在给出这个定理的证明之前，我们先证明 <span
class="math inline">\(K_6\to K_3,K_3\)</span> 的情形。</p>
<p><strong><em>PROOF</em></strong> 在涂过色的 <span
class="math inline">\(K_6\)</span> 中取一顶点 <span
class="math inline">\(v_0,\)</span> 由鸽巢原理知与 <span
class="math inline">\(v_0\)</span> 相连的 <span
class="math inline">\(5\)</span> 条边中，至少有 <span
class="math inline">\(3\)</span> 条边是同一种颜色，不妨设边 <span
class="math inline">\(\{v_0,v_1\},\{v_0,v_2\},\{v_0,v_3\}\)</span>
是红色（蓝色同理），若 <span
class="math inline">\(\{v_1,v_2\},\{v_2,v_3\},\{v_1,v_3\}\)</span>
存在红色的边，不妨设为 <span class="math inline">\(\{v_1,v_2\},\)</span>
那么以 <span class="math inline">\(v_0,v_1,v_2\)</span> 为顶点的 <span
class="math inline">\(K_3\)</span> 的所有边都为红色；若边 <span
class="math inline">\(\{v_1,v_2\},\{v_2,v_3\},\{v_1,v_3\}\)</span>
都为蓝色，那么以 <span class="math inline">\(v_1,v_2,v_3\)</span>
为顶点的 <span class="math inline">\(K_3\)</span>
的所有边都为蓝色。这两种情况就表明了存在三边同色的 <span
class="math inline">\(K_3\)</span> 子图。<span
class="math inline">\(\square\)</span></p>
<p><span class="math inline">\(K_6\to K_3,K_3\)</span>
描述得更通俗一点就是：在认识关系为双向的前提下（这确保了关系图是无向的），六个人中一定存在三个人互不认识或存在三个人互相认识。</p>
<p>下面我们来证明 <span class="math inline">\(\rm Ramsey\)</span>
定理。</p>
<p><strong><em>PROOF</em></strong> 考虑对变量 <span
class="math inline">\(m,n\)</span> 使用双重归纳法。</p>
<p>首先证明 <span class="math inline">\(r(2,n)\)</span> 与 <span
class="math inline">\(r(m,2)\)</span> 存在。</p>
<p><span class="math inline">\(\square\)</span></p>
<p><span class="math inline">\(\rm Ramsey\)</span> 定理中，使 <span
class="math inline">\(K_p\to K_m,K_n\)</span> 成立的最小的数 <span
class="math inline">\(p\)</span> 称作 <span class="math inline">\(\rm
Ramsey\)</span> 数，记作 <span class="math inline">\(r(m,n).\)</span>
在上述证明过程中，我们得到了 <span class="math inline">\(r(m,n)\le
r(m-1,n)+r(m,n-1).\)</span></p>
<h2 id="练习">练习</h2>
<p>1：证明：若从集合 <span
class="math inline">\(\{1,2,\cdots,kn\}(k\in\mathbb{N}_+)\)</span>
中选择 <span class="math inline">\(n+1\)</span>
个整数，那么总存在两个整数，它们之间最多差 <span
class="math inline">\(k-1.\)</span></p>
<p>2：证明对任意给定的 <span class="math inline">\(52\)</span>
个整数，存在两个整数使得两者的和或差可以被 <span
class="math inline">\(100\)</span> 整除。</p>
<p>3：若从 <span class="math inline">\(1,2,\cdots,200\)</span> 中选择
<span class="math inline">\(100\)</span>
个整数，且所选的这些整数中有一个小于 <span
class="math inline">\(16,\)</span> 那么在这些整数中存在 <span
class="math inline">\(p,q\)</span> 使得 <span
class="math inline">\(p\mid q.\)</span></p>
<p>4：证明对任意 <span class="math inline">\(n+1\)</span> 个整数 <span
class="math inline">\(a_1,a_2,\cdots,a_{n+1},\)</span> 存在两个整数
<span class="math inline">\(a_i,a_j(i\ne j)\)</span> 使得 <span
class="math inline">\(n\mid (a_i-a_j).\)</span></p>
<p>5：在边长为 <span class="math inline">\(2\)</span> 的正方形内任意选
<span class="math inline">\(5\)</span>
个点，证明存在两个点，它们之间的距离至多为 <span
class="math inline">\(\sqrt{2}.\)</span></p>
]]></content>
      <categories>
        <category>Math</category>
        <category>Combinatorial Mathematics</category>
      </categories>
  </entry>
  <entry>
    <title>图匹配</title>
    <url>/2023/08/15/math/graph/graph-matching/</url>
    <content><![CDATA[<h1 id="二分图最大匹配">二分图最大匹配</h1>
<h2 id="匈牙利算法">匈牙利算法</h2>
<p>匈牙利算法用来求解二分图的最大匹配.</p>
<p>对于一个匹配为 <span class="math inline">\(M\)</span> 的二分图 <span
class="math inline">\(G=(V,E)\)</span>, 顶点集被划分为 <span
class="math inline">\(V_1,V_2\)</span>, 若 <span
class="math inline">\(v\in V\)</span> 满足某个以 <span
class="math inline">\(v\)</span> 为端点的边在 <span
class="math inline">\(M\)</span> 中, 则称 <span
class="math inline">\(v\)</span> 被匹配, 否则称其未被匹配; 若 <span
class="math inline">\(e\in M\)</span> 则称边 <span
class="math inline">\(e\)</span> 为匹配边, 否则称为未匹配边.
定义交替路如下:</p>
<p><strong>定义1 (交替路)</strong> 交替路是一段 path <span
class="math inline">\(v_1,\cdots,v_k\)</span>, 满足 <span
class="math inline">\(v_1\)</span>
未被匹配且路径上的边是未匹配边和匹配边交错的, 即 <span
class="math inline">\((v_{2i-1},v_{2i})\not\in M,(v_{2i},v_{2i+1})\in
M\)</span>. <span class="math inline">\(\square\)</span></p>
<p>在交替路的基础上给出增广路的定义:</p>
<p><strong>定义2 (增广路)</strong> 增广路是一条交替路,
满足其终点未被匹配. <span class="math inline">\(\square\)</span></p>
<p>显然增广路中, 未匹配边比匹配边多一条,
于是可以<strong>将匹配边变成未匹配边,
而未匹配边变成匹配边</strong>(即匹配边和未匹配边进行对调),
这不会违反匹配的要求, 于是得到新的匹配 <span
class="math inline">\(M&#39;\)</span>, 且满足 <span
class="math inline">\(|M&#39;|=|M|+1\)</span>,
这样的一次操作使匹配的条数增加了 <span class="math inline">\(1\)</span>.
于是自然就有下面的思路:</p>
<p>通过搜索不断地发现增广路, 每次找到一条增广路就做如上述的操作,
直到找不到增广路为止.</p>
<blockquote>
<p>每个未被匹配的点只需要枚举一次.</p>
</blockquote>
<h3 id="dfs">DFS</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://www.luogu.com.cn/problem/P3386</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">500</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn2=<span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> from,to;</span><br><span class="line">    _edge(<span class="type">int</span> _from, <span class="type">int</span> _to):<span class="built_in">from</span>(_from),<span class="built_in">to</span>(_to)&#123;&#125;</span><br><span class="line">&#125;Edge; <span class="comment">// 边结构体, 存起点和终点</span></span><br><span class="line">vector&lt;Edge&gt;edge; </span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// g[i]为从顶点i出发的边的编号</span></span><br><span class="line"><span class="type">int</span> mate[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// 存每个点的配偶, 初始化为-1, 同时可以判断是否被匹配了</span></span><br><span class="line"><span class="type">int</span> check[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// 记录点是否在交替路中, 防止重复访问</span></span><br><span class="line"><span class="type">int</span> n,m,e;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> s)</span></span>&#123; <span class="comment">// 以s为起点, 返回是否能找到增广路 </span></span><br><span class="line">    <span class="keyword">for</span>(vector&lt;<span class="type">int</span>&gt;::iterator it=g[s].<span class="built_in">begin</span>();it!=g[s].<span class="built_in">end</span>();++it)&#123;</span><br><span class="line">        <span class="type">int</span> v=edge[*it].to;</span><br><span class="line">        <span class="keyword">if</span>(!check[v])&#123;</span><br><span class="line">            check[v]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(mate[v]==<span class="number">-1</span>||<span class="built_in">dfs</span>(mate[v]))&#123;</span><br><span class="line">                mate[v]=s;</span><br><span class="line">                mate[s]=v;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">matching</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(mate,<span class="number">-1</span>,<span class="built_in">sizeof</span>(mate));</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mate[i]==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">memset</span>(check,<span class="number">0</span>,<span class="built_in">sizeof</span>(check));</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">dfs</span>(i))ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> isv[<span class="number">2</span>*maxn+<span class="number">5</span>][<span class="number">2</span>*maxn+<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;e;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;e;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(!isv[a][b+n])&#123;</span><br><span class="line">            edge.<span class="built_in">push_back</span>(<span class="built_in">Edge</span>(a,b+n));</span><br><span class="line">            g[a].<span class="built_in">push_back</span>(cnt++);</span><br><span class="line">            isv[a][b+n]=isv[b+n][a]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">matching</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="bfs">BFS</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// https://www.luogu.com.cn/problem/P3386</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">500</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn2=<span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">_edge</span>&#123;</span><br><span class="line">    <span class="type">int</span> from,to;</span><br><span class="line">    _edge(<span class="type">int</span> _from, <span class="type">int</span> _to):<span class="built_in">from</span>(_from),<span class="built_in">to</span>(_to)&#123;&#125;</span><br><span class="line">&#125;Edge; <span class="comment">// 边结构体, 存起点和终点</span></span><br><span class="line">vector&lt;Edge&gt;edge; </span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// g[i]为从顶点i出发的边的编号</span></span><br><span class="line"><span class="type">int</span> mate[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// 存每个点的配偶, 初始化为-1, 同时可以判断是否被匹配了</span></span><br><span class="line"><span class="type">int</span> pre[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// 存路径, 起点的值为-1, prev[v]存v的前置结点</span></span><br><span class="line"><span class="type">int</span> check[<span class="number">2</span>*maxn+<span class="number">5</span>]; <span class="comment">// 记录点是否在交替路中, 值为当前所在交替路的起点, 防止重复入队</span></span><br><span class="line">queue&lt;<span class="type">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">matching</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(mate,<span class="number">-1</span>,<span class="built_in">sizeof</span>(mate));</span><br><span class="line">    <span class="built_in">memset</span>(check,<span class="number">-1</span>,<span class="built_in">sizeof</span>(check));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123; </span><br><span class="line">        <span class="keyword">if</span>(mate[i]==<span class="number">-1</span>)&#123; <span class="comment">// 找到未被匹配的点, 以该点为起点搜索增广路</span></span><br><span class="line">            <span class="keyword">while</span>(!Q.<span class="built_in">empty</span>()) Q.<span class="built_in">pop</span>(); <span class="comment">// 每一轮搜索都需要空队列</span></span><br><span class="line">            <span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="built_in">sizeof</span>(pre));</span><br><span class="line">            Q.<span class="built_in">push</span>(i);</span><br><span class="line">            pre[i]=<span class="number">-1</span>; <span class="comment">// 记录起点</span></span><br><span class="line">            <span class="type">int</span> flag=<span class="number">0</span>; <span class="comment">// 用于判断增广路是否找到了</span></span><br><span class="line">            <span class="keyword">while</span> (!Q.<span class="built_in">empty</span>()&amp;&amp;!flag) <span class="comment">// 广搜, 结束条件为队列为空或者找到增广路</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> v=Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">for</span>(vector&lt;<span class="type">int</span>&gt;::iterator it=g[v].<span class="built_in">begin</span>();it!=g[v].<span class="built_in">end</span>()&amp;&amp;!flag;++it)&#123; <span class="comment">// 满足交错路条件的临界点加入队列</span></span><br><span class="line">                    <span class="type">int</span> u=edge[*it].to; <span class="comment">// u为v的邻接点</span></span><br><span class="line">                    <span class="keyword">if</span>(check[u]!=i)&#123; <span class="comment">// 如果起点不是当前的起点i</span></span><br><span class="line">                        check[u]=i;</span><br><span class="line">                        Q.<span class="built_in">push</span>(mate[u]); <span class="comment">// u的配偶入队, 这里为什么不需要邻接点u入队呢?</span></span><br><span class="line">                        <span class="keyword">if</span>(mate[u]&gt;=<span class="number">0</span>)&#123; <span class="comment">// 如果有配偶, 表明仍然满足交替路的条件, 则记录路径</span></span><br><span class="line">                            pre[u]=v; <span class="comment">// 记录前置结点</span></span><br><span class="line">                            pre[mate[u]]=u;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span>&#123; <span class="comment">// 没有配偶, 表明找到了一条增广路, 进行匹配边和非匹配边的转换</span></span><br><span class="line">                            pre[u]=v; <span class="comment">// 记录前置结点</span></span><br><span class="line">                            flag=<span class="number">1</span>;</span><br><span class="line">                            <span class="type">int</span> x=u;</span><br><span class="line">                            <span class="keyword">while</span>(x!=<span class="number">-1</span>)&#123;</span><br><span class="line">                                <span class="type">int</span> y=pre[x];</span><br><span class="line">                                mate[x]=y;</span><br><span class="line">                                mate[y]=x;</span><br><span class="line">                                x=pre[y];</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mate[i]!=<span class="number">-1</span>) ans++; <span class="comment">// 如果经过上述搜索, 起点成功有了配偶, 则匹配数目加1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> isv[<span class="number">2</span>*maxn+<span class="number">5</span>][<span class="number">2</span>*maxn+<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,e;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;e;</span><br><span class="line">    <span class="type">int</span> a,b;</span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;e;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(!isv[a][b+n])&#123;</span><br><span class="line">            edge.<span class="built_in">push_back</span>(<span class="built_in">Edge</span>(a,b+n));</span><br><span class="line">            g[a].<span class="built_in">push_back</span>(cnt++);</span><br><span class="line">            isv[a][b+n]=isv[b+n][a]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">matching</span>(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>用BFS实现时, 需要注意在将点待搜索点放入队列时, 需要放的点是当前点
<span class="math inline">\(u\)</span> 的邻接点 <span
class="math inline">\(v\)</span> 的配偶, 这样相当于一次搜索跳了两步,
包括非匹配边 <span class="math inline">\((u,v)\)</span> 和匹配边 <span
class="math inline">\((v,\mathrm{mate}(v))\)</span>,
效率比深度一次只增加一层要高一些并且不用额外判断是否满足交替路的条件.</p>
<p>和网络流的FF算法和EK算法一样, 使用 BFS 的匈牙利算法要比使用 DFS
的效率高一些(稀疏图尤甚), 虽然时间复杂度都为 <span
class="math inline">\(O(|V||E|)\)</span>. (枚举 <span
class="math inline">\(n=O(|V|)\)</span> 个点, 每个点找增广路需要 <span
class="math inline">\(O(|E|)\)</span> 的时间.)</p>
<h2 id="转化为网络流">转化为网络流</h2>
<h1 id="一般图最大匹配">一般图最大匹配</h1>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>机器学习前沿 课程介绍与基础</title>
    <url>/2023/08/28/junior_first_semester/machine-learning-frontier/course1/</url>
    <content><![CDATA[<p>这堂课的内容主要是<strong>基于深度神经网络的小样本学习</strong>。</p>
<p>机器学习和深度学习的区别之一: 机器学习将特征提取和学习分为两部分进行,
但是深度学习将这两部分糅合在一起进行.</p>
<p>半监督学习: 少量的有标签样本和大量的无标签样本.</p>
<h1 id="semi-supervised-learning">Semi-supervised Learning</h1>
<p>The training data set is composed of labeled data <span
class="math inline">\(\{(x^r,\hat{y}^r\}_{1\le r\le R}\)</span> and
unlabeled data <span class="math inline">\(\{x^u\}_{R\le u\le
R+U}\)</span>, and usually <span class="math inline">\(U\gg R\)</span>
since <strong>labeling is expensive</strong>.</p>
<h2 id="transductive-learning-and-inductive-learning">Transductive
Learning and Inductive Learning</h2>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309041729703.png" /></p>
<p>Transductive Learning: 没有标签的数据充当 test data. 在上面的例子中,
先将所有的数据分为 3 个 cluster, 然后再通过 cluster 内的 labeled data
预测 unlabelled data.</p>
<p>Inductive Learning: 与 transductive learning 相反. 在上面的例子中,
直接使用kNN 根据有标签的五个点预测 unlabelled data.</p>
<h1 id="semi-supervised-learning-for-generative-model">Semi-supervised
Learning for Generative Model</h1>
<p>首先是 supervised generative model, 给定有标签的训练数据集 <span
class="math inline">\(x^r\in C_1,C_2\)</span> (二分类), 估计出两个正态,
根据两个正态求出 decision boundary, 或者说求出似然.</p>
<p>对于 Semi-supervised Learning for Generative Model ,
使用的是下面的算法:</p>
<ol type="1">
<li><p>初始化 <span
class="math inline">\(\theta=\{P(C_1),P(C_2),\mu^1,\mu^2,\Sigma\}\)</span>.</p></li>
<li><p>计算 unlabelled data 的后验 <span
class="math inline">\(P_{\theta}(C_1|x^u)\)</span>.</p></li>
<li><p>用参数估计更新模型 <span class="math display">\[
P(C_1)=\frac{N_1+\sum_{x^u}P(C_1|x^{u})}{N}
\]</span> 以及 <span class="math display">\[
\mu^1=\frac{1}{N_1}\sum_{x^r\in
C_1}x^r+\frac{1}{\sum_{x^u}P(C_1|x^u)}\sum_{x^u}P(C_1|x^u)x^u
\]</span> 更新完毕转到 2.</p></li>
</ol>
<h1 id="self-training">Self-training</h1>
<h1 id="smoothness-assumption">Smoothness Assumption</h1>
<p>In a high density area, if <span
class="math inline">\(\|x^{(1)}-x^{(2)}\|&lt;\varepsilon\)</span>, them
<span class="math inline">\(y^{(1)}=y^{(2)}\)</span>.</p>
<p>神经网络中, 什么是 bias ?</p>
<p>梯度消失: 在反向传播过程中, 输入层的梯度很小, 导致学习特征的速度很慢,
甚至可能无法学到任何的东西, 直到现在也没有很好的解决方案.</p>
<p>Maxout is the special case of ReLU.</p>
<h1 id="第二周">第二周</h1>
<p>周一晚: SVM</p>
<p>周三晚: CNN, 矩阵分解, manifold learning, 主成分分析</p>
<h3 id="manifold-learning">Manifold Learning</h3>
<h4 id="lle">LLE</h4>
<p><span class="math inline">\(w_{ij}\)</span> 表示 <span
class="math inline">\(x^i,x^j\)</span> 之间的 relation, <span
class="math display">\[
\mathrm{minimize} \sum\left\|\right\|
\]</span></p>
<p>t-SNE</p>
<h1 id="matrix-factorization">Matrix Factorization</h1>
<p>在推荐系统中, 矩阵分解算法将 <span class="math inline">\(m\times
n\)</span> 维的矩阵 <span class="math inline">\(R\)</span> 分解为 <span
class="math inline">\(m×k\)</span> 的用户矩阵 <span
class="math inline">\(U\)</span> 和 <span
class="math inline">\(k×n\)</span> 维的物品矩阵 <span
class="math inline">\(S\)</span>, 即 <span
class="math inline">\(R=US\)</span>, <span
class="math inline">\(m\)</span> 为用户的数量, <span
class="math inline">\(n\)</span> 为物品的数量，<span
class="math inline">\(k\)</span> 为<strong>隐向量（Latent
Factor）</strong>的维度。 k
的大小决定了隐向量表达能力的强弱，实际应用中，其取值要经过多次的实验来确定。在得到了
用户矩阵U和物品矩阵 S
后，将两个矩阵相乘，就可以得到一个满秩的矩阵。那么，我们就对未被评价过的物品，有了一个预测评分。接下来，可以将评分进行排序，推荐给用户。这就是矩阵分解对于推荐系统最基本的用途。</p>
<p>矩阵分解的<strong>目的</strong>就是通过分解之后的两矩阵内积，来填补缺失的数据，用来做预测评分。矩阵分解的<strong>核心</strong>是将矩阵分解为两个低秩的矩阵的乘积，分别以
k维的隐因子向量表示，用户向量和物品向量的内积则是用户对物品的偏好度，即预测评分。值得注意的是k的选取是通过实验和经验而来的，因此矩阵分解的可解释性不强。</p>
<h2 id="svd">SVD</h2>
<h2 id="simon-funk-svd">Simon Funk SVD</h2>
<p>Simon Funk SVD 的提出是为了解决 SVD 的两个问题:</p>
<ul>
<li>SVD 将一个矩阵分解为三个矩阵, 要计算三个矩阵, 开销稍微有点大</li>
<li>SVD 无法处理稀疏矩阵</li>
</ul>
<p>Funk SVD 做如下分解: <span class="math inline">\(R=Q^TP\)</span>,
满足 <span class="math display">\[
\text{minimize } \sum_{i,j}(r_{ij}-q_j^Tp_i)^2+(\|p_i\|+\|q_j\|)^2
\]</span> 后面的范数为正则化项. 实际上是使矩阵 <span
class="math inline">\(R-Q^TP\)</span> 的范数尽可能小,
这需要矩阵范数的定义.</p>
<p>Funk-SVD 的缺点其实也类似与 SVD, 由于要用迭代求解优化问题,
它也很耗时, 而且可解释性也不强.</p>
<h1 id="dl-with-few-data">DL with Few Data</h1>
<h1 id="gnn">GNN</h1>
<p>GNN 的输入是一个图数据 <span class="math inline">\(G=(A,X)\)</span>,
其中 <span class="math inline">\(A\in\mathbb{R}^{N\times N}\)</span>
表示邻接矩阵, <span class="math inline">\(X\in\mathbb{R}^{N\times
F}\)</span> 表示特征矩阵, <span class="math inline">\(N\)</span>
表示结点个数, <span class="math inline">\(F\)</span>
为每个结点表示的向量的维数.</p>
<p>主要思想是在结点之间传递信息.</p>
<h2 id="gcns">GCNs</h2>
<p><span class="math display">\[
h^{(l+1)}_{i}=\sigma\left(h_i^{(l)}W_1^{(l)}+\sum_{j\in
N_i}\frac{1}{c_{ij}}h^{(l)}_jW_1^{(l)}\right)
\]</span></p>
<p>Embedding way and GCNs</p>
<p>Pipeline for GCNs</p>
<p><span class="math inline">\(\rm GCN\in GNN\)</span></p>
<p>GNNs with Attention <span class="math display">\[
h_i&#39;=\sigma\left(\frac{1}{K}\sum\sum\alpha_{ij}^kW^kh_j\right)
\]</span></p>
<p><span class="math display">\[
\alpha_{ij}=\frac{\exp}{}
\]</span></p>
<p>为什么不能直接用 CNN 直接处理 graph?</p>
<p>CNN 用来处理 grid, RNN 用来处理序列, 对应 graph 中的 link, graph
本身结构复杂得多.</p>
<p>如何让网络自动学习权重矩阵 <span
class="math inline">\(\mathbf{W}\)</span>?</p>
<p>最理想的方式: adaptively learn an optimal graph structure and the
learning models.</p>
<p>通过数据分布学习</p>
<p>什么是特征选择 feature selection</p>
<blockquote>
<p>特征选择是在机器学习中的一个重要步骤，它的目的是从给定的特征集合中选择出最具有预测能力的特征子集。简单来说，特征选择就是从众多特征中挑选出对目标变量有最大影响力的特征，以便用于构建高效的预测模型。</p>
<p>为什么要进行特征选择呢？原因有两个。首先，特征选择可以提高模型的性能。通过去除无关或冗余的特征，可以减少模型的复杂性，避免过拟合，提高模型的泛化能力。其次，特征选择可以降低模型的计算成本和存储需求。在大规模数据集中，特征选择可以减少特征的数量，从而减少计算和存储的负担。</p>
<p>特征选择的方法有很多，常见的包括过滤法、包装法和嵌入法。过滤法是根据特征与目标变量之间的相关性进行评估和排序，然后选择得分最高的特征。包装法是通过在特征子集上训练模型，并根据模型的性能来评估特征的重要性，然后选择最佳的特征子集。嵌入法是将特征选择嵌入到模型的训练过程中，通过优化模型的目标函数来选择特征。</p>
<p>总之，特征选择是一种重要的数据预处理技术，它可以提高模型的性能和效率。通过选择最具有预测能力的特征子集，可以构建更加准确和高效的机器学习模型。</p>
</blockquote>
<p>什么是子空间学习 subspace learning</p>
<blockquote>
<p>子空间学习是一种机器学习方法，它的目标是从高维数据中提取出具有特定结构的低维子空间。在高维数据中，存在着许多不相关的特征，而子空间学习旨在通过降维的方式，找到最能代表数据的低维子空间。通过这种方式，我们可以减少数据的维度，提高模型的效率，并且更好地理解和处理数据。</p>
<p>子空间学习的过程可以分为两个步骤。首先，我们需要选择一个合适的子空间模型，例如线性子空间模型或非线性子空间模型。然后，我们使用训练数据来学习这个子空间模型，即寻找最能代表数据的低维子空间。学习的过程通常涉及到优化算法，以最小化数据在低维子空间中的重构误差或者最大化数据在子空间中的可分性。</p>
<p>子空间学习在许多领域都有广泛的应用，例如图像处理、计算机视觉、模式识别等。通过子空间学习，我们可以发现数据的潜在结构和关系，从而提取出有用的特征，进行分类、聚类等任务。这样可以帮助我们更好地理解和利用高维数据，提高机器学习算法的性能。</p>
</blockquote>
<p><span class="math display">\[
\min \phi_1\left( \left\Vert{\mathbf{X}-\mathbf{WZ}}\right\Vert_F
\right)+
\]</span></p>
<h1 id="强化学习">强化学习</h1>
<h2 id="q-learning"><span class="math inline">\(Q\)</span>-learning</h2>
<h2 id="deep-q-network">Deep <span
class="math inline">\(Q\)</span>-Network</h2>
<p>估计网络和目标网络的结构是一样的.</p>
<p>反向传播更新估计网络, 每隔一段时间复制参数给目标网络.</p>
<p>DQN 算法的步骤:</p>
<ol type="1">
<li>初始化:</li>
<li>选择动作</li>
<li>执行动作并观察回报</li>
<li>存储经验</li>
</ol>
<h1 id="google-colaboratory-使用">Google Colaboratory 使用</h1>
<p><em>1.</em> 切换 GPU 模式. 在
<code>Edit</code>-<code>Notebook Settings</code> 中可以找到. 运行查看
GPU信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!/opt/bin/nvidia-smi</span><br></pre></td></tr></table></figure>
<p>如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tue Sep 12 09:40:40 2023       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 525.105.17   Driver Version: 525.105.17   CUDA Version: 12.0     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |</span><br><span class="line">| N/A   58C    P8     9W /  70W |      0MiB / 15360MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>
<p>运行 Linux 命令需要加上 <code>!</code>. 不跑代码建议 disconnect,
如果长时间不跑也会提示并且会自动断开连接, 多次长时间连接 GPU
并且不运行代码可能会限制使用.</p>
<p>下面的代码连接 Google Drive, 可以更方便地读数据存结果之类的:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> google.colab <span class="keyword">import</span> drive </span><br><span class="line">drive.mount(<span class="string">&#x27;/content/drive/&#x27;</span>) </span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>典型图论问题</title>
    <url>/2023/07/27/math/graph/graph-problems/</url>
    <content><![CDATA[<p>对典型的图论问题的描述做一下汇总,
仅仅介绍问题的基本描述和问题之间的联系, 下面所有问题都是在图 <span
class="math inline">\(G=(V,E)\)</span> 的基础上描述的, 默认为无向图.</p>
<p>1: <strong>匹配</strong>. 图 <span class="math inline">\(G\)</span>
的一个匹配 <span class="math inline">\(M\)</span> 是 <span
class="math inline">\(E\)</span> 的子集, 满足 <span
class="math inline">\(M\)</span> 中的任意两条边都没有公共的顶点.
<strong>最大匹配问题</strong>要求找到满足最大的满足条件的 <span
class="math inline">\(M\)</span>.</p>
<p>2: <strong>覆盖</strong>. 图 <span class="math inline">\(G\)</span>
的一个覆盖 <span class="math inline">\(R\)</span> 是顶点 <span
class="math inline">\(V\)</span> 的子集, 满足 <span
class="math inline">\(E\)</span> 中的任意一条边中的某个端点在 <span
class="math inline">\(R\)</span> 中.
最小覆盖问题要求找到最小的满足条件的 <span
class="math inline">\(R\)</span>.</p>
<p>3: <strong>集合覆盖(Set Cover)</strong>. 对于给定的集合 <span
class="math inline">\(U\)</span> 和集合<span
class="math inline">\(\mathcal{S}\subset \mathcal{P}(U)\)</span>, 若
<span class="math inline">\(\mathcal{S}&#39;\subset \mathcal{S}\)</span>
满足 <span class="math inline">\(\bigcup_{S\subset
\mathcal{S}&#39;}S=U\)</span>, 则称 <span
class="math inline">\(\mathcal{S}&#39;\)</span> 覆盖集合 <span
class="math inline">\(U\)</span>.
最小集合覆盖(MSC)问题要求找到最小的满足条件的 <span
class="math inline">\(\mathcal{S}&#39;\)</span>.</p>
<p>4: <strong>独立集(Independent Set)</strong>. 图 <span
class="math inline">\(G\)</span> 的独立集 <span
class="math inline">\(I\)</span> 是顶点集 <span
class="math inline">\(V\)</span> 的子集, 满足 <span
class="math inline">\(I\)</span> 中的任意一对顶点都不相邻.
最大独立集(MIS)问题要求找到最大的满足条件的 <span
class="math inline">\(I\)</span>, 同时将最大的 <span
class="math inline">\(|I|\)</span> 记作图 <span
class="math inline">\(G\)</span> 的独立数 <span
class="math inline">\(\alpha(G)\)</span>.</p>
<p>5: <strong>支配集(Dominant Set)</strong>. 图 <span
class="math inline">\(G\)</span> 的支配集 <span
class="math inline">\(D\)</span> 是顶点集 <span
class="math inline">\(V\)</span> 的子集, 满足 <span
class="math inline">\(V\)</span> 可以被划分为 <span
class="math inline">\(D\)</span> 和 <span
class="math inline">\(N(D)=\bigcup_{v\in D}N(v)\)</span>.
最小支配集(MDS)问题要求找到最小的满足条件的 <span
class="math inline">\(D\)</span>, 同时将最小的 <span
class="math inline">\(|D|\)</span> 记作图 <span
class="math inline">\(G\)</span> 的支配数 <span
class="math inline">\(\gamma(G)\)</span>.</p>
<p>6: <strong>染色(Graph Coloring)</strong>. 无向图 <span
class="math inline">\(G\)</span> 的 <span
class="math inline">\(k\)</span>-coloring <span
class="math inline">\(c:V\to [k]\)</span> 满足 <span
class="math inline">\(\forall\{u,v\}\in E,c(u)\ne c(v)\)</span>, 即使用
<span class="math inline">\(k\)</span> 种颜色给图 <span
class="math inline">\(G\)</span> 的每个顶点都分配一种颜色,
使得相邻顶点的颜色都不相同. 最小的能给 <span
class="math inline">\(G\)</span> 进行上述染色过程的 <span
class="math inline">\(k\)</span> 称为图 <span
class="math inline">\(G\)</span> 的色数, 记作 <span
class="math inline">\(\chi(G)\)</span>, <span
class="math inline">\(c:V\to [\chi(G)]\)</span> 称为最优染色(optimal
coloring). 染色问题要求找到图 <span class="math inline">\(G\)</span>
的色数 <span class="math inline">\(\chi(G)\)</span> 或者更进一步地,
最优的染色方案 <span class="math inline">\(c\)</span>.</p>
<p>7: 最优树(最短路, 最小生成树, Steiner Tree)</p>
<p>8: 网络流(最大流, 最小费用流, 最小割)</p>
]]></content>
      <categories>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>知识表示与推理 课程概述</title>
    <url>/2023/08/30/junior_first_semester/knowledge-representation/introduction/</url>
    <content><![CDATA[<blockquote>
<p>Knowledge is justified true belief. —— Plato</p>
</blockquote>
<p>成绩构成：</p>
<ul>
<li>期末 <span class="math inline">\(50\%\)</span></li>
<li>项目 <span class="math inline">\(35\%\)</span></li>
<li>作业 <span class="math inline">\(10\%\)</span></li>
<li>课堂表现 <span class="math inline">\(5\%\)</span></li>
</ul>
<p>期末考试形式:</p>
<ul>
<li><strong>闭卷</strong></li>
<li>一页纸开卷</li>
<li>不上网的开卷</li>
</ul>
<p>要求:</p>
<ul>
<li>不要作弊</li>
<li>不要交白卷</li>
<li>不要抄作业, 若参考则需搞懂</li>
<li>课堂上可以带电脑</li>
<li>玩手机要静音</li>
<li>上课说话不要打扰周围人</li>
<li>有听课的老师来的时候不要睡觉💤</li>
</ul>
<h1 id="basic-concepts">BASIC CONCEPTS</h1>
<h2 id="什么是知识">什么是知识</h2>
<p>flourish(涌现): 模型在复杂到一定程度以后,
出现了一些我们原本以为该模型不可能具备的能力.</p>
<h2 id="什么是推理">什么是推理</h2>
<p>针对各种事务进行分析和决策, 从一直的知识出发,
通过一系列思考,找出蕴含的事实, 或者归纳出新的事实.</p>
<p>知识表示: 对知识的一种描述和约定,
采用计算机可以接受的、用于描述知识的数据结构.</p>
<p>知识推理: 基于现有知识, 基于一定方法, 发现新知识的过程.</p>
<p>推理包括包括:</p>
<ul>
<li>演绎 (deduction) 法</li>
<li>归纳 (induction) 证明</li>
<li>不确定推理</li>
<li>知识, 统计, 直觉</li>
</ul>
<p>总结为下面的图片:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309011453073.png" /></p>
<p>知识表示的形式: 客观事物的机器标识, 约定和模型, 推理的理论基础,
数据结构, 机器语言</p>
<p>非单调推理: 在推理过程中, 外界会不断提供线索甚至是新的知识.
比如<strong>三门问题</strong>.</p>
<h1 id="基于逻辑的知识推理">基于逻辑的知识推理</h1>
<p>用一套符号系统表示人类的逻辑, 并使用这一套符号来进行推理.</p>
<p>1: 命题: 具有真假意义的陈述句.</p>
<p>2: 公理: 默认正确的命题.</p>
<p>3: 定理: 仅从公理通过推演出来得到的命题.</p>
<p>4: 谓词: <span class="math inline">\(P:D\to
\{\mathbb{T,F}\}\)</span>, <span class="math inline">\(D\)</span>
中的元素称为个体.</p>
<p>5: 全称量词 <span class="math inline">\((\forall x)P(x)\)</span>,
存在量词 <span class="math inline">\((\exists x)P(x)\)</span>.</p>
<p>6: <span class="math inline">\(p\to q \equiv \neg p\lor
q\)</span></p>
<h2 id="谓词逻辑的永真蕴含性">谓词逻辑的永真蕴含性</h2>
<p>与量词有关的四条重要推理规则 US, UG, ES, EG.</p>
<h1 id="问题归约法">问题归约法</h1>
<p>归约就是 reduction, 将问题分解为子问题, 解决较小的问题.</p>
<p><strong>分解</strong>: 如果一个问题 <span
class="math inline">\(P\)</span> 可以规约为一组子问题 <span
class="math inline">\(P_1,\cdots,P_n\)</span>, 并且只有 <span
class="math inline">\(\forall i,P_i\)</span> 有解 <span
class="math inline">\(\to\)</span> <span
class="math inline">\(P\)</span> 有解, <span
class="math inline">\(\exists i,P_i\)</span> 无解 <span
class="math inline">\(\to\)</span> <span
class="math inline">\(P\)</span> 无解, 则称此种规约方式为问题的分解.</p>
<p><strong>等价变化</strong>: 若 <span class="math inline">\(P\)</span>
归约为为 <span class="math inline">\(P_1,\cdots,P_n\)</span>, 且 <span
class="math inline">\(\exists i,P_i\)</span> 有解 <span
class="math inline">\(\to\)</span> <span
class="math inline">\(P\)</span> 有解, <span
class="math inline">\(\forall i,P_i\)</span> 无解 <span
class="math inline">\(\to\)</span> <span
class="math inline">\(P\)</span> 无解, 则称此种归约方式为问题的等价变换,
简称变换.</p>
<p>用<strong>似图结构</strong>把问题规约为后继问题的替换集合,
这似图结构称为与或图. 与或图中两个没见过的定义:</p>
<ul>
<li><p>or vertex: 某个 <span class="math inline">\(x\)</span> 解决则
<span class="math inline">\(\mathrm{fa}(x)\)</span> 解决,
比如下面或图中的 <span class="math inline">\(B,C\)</span></p></li>
<li><p>and vertex: 所有 <span class="math inline">\(x\)</span> 解决
<span class="math inline">\(\mathrm{fa}(x)\)</span> 才解决</p></li>
</ul>
<p>比如:</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309130904533.png" alt="与图" style="zoom:50%;" /></p>
<p>以及</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309130906381.png" alt="或图" style="zoom:50%;" /></p>
<p>规范的与或图要求每个点的后继节点只能是 or vertex 或者 and vertex
的一种, 可以增加附加节点使与或图规范化, 如下图所示:</p>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309130928871.png"
alt="与或图的规范化" />
<figcaption aria-hidden="true">与或图的规范化</figcaption>
</figure>
<p><strong>可解节点</strong>: 这是一个递归的定义. 叶节点是可解的; 若
<span class="math inline">\(\mathrm{son}(x)\)</span> 为 or vertex,
则某一个 <span class="math inline">\(\mathrm{son}(x)\)</span> 可解 <span
class="math inline">\(\to\)</span> <span
class="math inline">\(x\)</span> 可解; 若 <span
class="math inline">\(\mathrm{son}(x)\)</span> 为 and vertex, 则所有
<span class="math inline">\(\mathrm{son}(x)\)</span> 可解 <span
class="math inline">\(\to\)</span> <span
class="math inline">\(x\)</span> 可解;</p>
<p><strong>解树</strong>:
由若干可解结点组成且由可解节点能<strong>推出</strong>初始节点可解的子树称为解树.</p>
<h1 id="演绎推理">演绎推理</h1>
<p>演绎推理: 在已知一组为真的事实条件下,
直接运用命题和谓词逻辑的一系列基本规则或定律来推出结论.</p>
<p>表达式的置换: 表达式 <span class="math inline">\(E\)</span>
的定义域为 <span class="math inline">\(D\)</span>, 置换写做 <span
class="math inline">\(S=\{x/y\},y\in D\)</span>, 表示用 <span
class="math inline">\(x\)</span> 替换 <span
class="math inline">\(E\)</span> 中的 <span
class="math inline">\(y\)</span> . <span
class="math inline">\(E\)</span> 用置换 <span
class="math inline">\(S\)</span> 得到表达式的置换, 记作 <span
class="math inline">\(ES\)</span>. 有 <span
class="math inline">\(E(S_1S_2)=(ES_1)S_2\)</span>, 但是没有交换律:
<span class="math inline">\(ES_1S_2\ne ES_2S_1\)</span>.</p>
<p><strong>置换的合成</strong> 设 <span
class="math inline">\(\theta=\{t_1/x_1,\cdots,t_n/x_n\},\)</span> <span
class="math inline">\(\lambda=\{u_1/y_1,\cdots,u_m/y_m\}\)</span>,
则两者的<strong>合成</strong> <span
class="math inline">\(\theta\lambda\)</span> 也是一个置换. <span
class="math inline">\(\theta\lambda\)</span> 的定义是, 对集合 <span
class="math inline">\(\{(t_1\lambda)/x_1,\cdots,(t_n\lambda)/x_n,u_1/y_1,\cdots,u_m/y_m\}\)</span>
做如下删除操作得到的结果:</p>
<ul>
<li>去闭环的置换: <span class="math inline">\(t_i\lambda=x_i\)</span>
时, 删去 <span class="math inline">\((t_i\lambda)/x_i\)</span>,
这相当于用 <span class="math inline">\(x_i\)</span> 替换 <span
class="math inline">\(x_i\)</span> 了</li>
<li>去重复的元素: 若 <span
class="math inline">\(y_j\in\{x_1,\cdots,x_n\}\)</span>, 删去 <span
class="math inline">\(u_j/y_j\)</span>, ?</li>
</ul>
<p>其中 <span class="math inline">\(t_i\lambda\)</span> 表示对 <span
class="math inline">\(t_i\)</span> 应用置换规则 <span
class="math inline">\(\lambda\)</span>, 因为 <span
class="math inline">\(t_i\)</span> 本身也是表达式.</p>
<p><strong>合一 (Unification)</strong> 对于表达式集 <span
class="math inline">\(\mathcal{E}\)</span>, 将置换 <span
class="math inline">\(S\)</span> 作用在 <span class="math inline">\(\cal
E\)</span> 中的每一个元素得到 <span
class="math inline">\(\mathcal{E}S\)</span>, 若置换后 <span
class="math inline">\(\mathcal{E}S\)</span> 中只有一个元素(置换 <span
class="math inline">\(S\)</span> 使多个表达式<strong>一致</strong>),
则称寻找这样的 <span class="math inline">\(S\)</span>
达到此目的的操作为<strong>合一</strong>. 若存在 <span
class="math inline">\(S\)</span> 使 <span
class="math inline">\(\mathcal{E}S\)</span> 中只有一个元素, 称 <span
class="math inline">\(\mathcal{E}\)</span> 是<strong>可合一的</strong>,
<span class="math inline">\(S\)</span> 称为 <span
class="math inline">\(\mathcal{E}\)</span>
的<strong>合一者</strong>.</p>
<p><strong>最通用的合一者 (most general unifier, mgu)</strong> 若对
<span class="math inline">\(\mathcal{E}\)</span> 的任一合一者 <span
class="math inline">\(S\)</span>, 都存在 <span
class="math inline">\(S&#39;\)</span> 使 <span
class="math inline">\(\mathcal{E}S=\mathcal{E}gS&#39;\)</span>, 则称
<span class="math inline">\(g\)</span> 为 <span
class="math inline">\(\mathcal{E}\)</span>
的<strong>最通用合一者</strong>.</p>
<p><strong>前束范式</strong> 如果公式 <span
class="math inline">\(A\)</span> 的一切量词都位于该公式的最左边,
且这些量词的辖域都延伸到公式的末端, 则称 <span
class="math inline">\(A\)</span> 是一个前束范式, 其一般形式为 <span
class="math inline">\((Q_1x_1)\cdots(Q_nx_n)M(x_1,\cdots,x_n)\)</span>,
其中 <span class="math inline">\(Q_i\in\{\forall ,\exists\}\)</span>,
<span class="math inline">\(M\)</span> 称为 <span
class="math inline">\(A\)</span> 的<strong>母式/基式</strong>, <span
class="math inline">\(M\)</span> 中不含有量词.</p>
<p>谓词逻辑的人一共是都可以化成与其等值的前束范式,
但其前述凡是不唯一.</p>
<p>例子: 求 <span class="math display">\[
\neg(\forall x\exists yP(a,x,y)\to\exists x(\neg(\forall yQ(y,b))\to
R(x)))
\]</span> 的前束范式.</p>
<blockquote>
<p>反复用 De Morgan law 以及 <span class="math inline">\(\to\)</span> 与
<span class="math inline">\(\lor\)</span> 的转化即可.</p>
</blockquote>
<p><strong>Skolem 标准形</strong> 只保留全称量词的前束范式.</p>
<p>例: 求 <span class="math inline">\(\exists x\forall y\forall z\exists
u\forall v \exists w P(x,y,z,u,v,w)\)</span> 的 Skolem 标准形.</p>
<p>在前束范式的基础之上, 要求只保留全称量词而消去存在量词,
所有存在量词都在全称量词之左</p>
<h1 id="归结推理">归结推理</h1>
<p>合取: <span class="math inline">\(\land\)</span></p>
<p>析取: <span class="math inline">\(\lor\)</span></p>
<p>归结推理方法可以看作是反证法的具体应用.</p>
<p>在推导过程中使用的推理规则序列成为了定理的一个证明</p>
<p>任何一个谓词公式都可以化为一个 clause 的集合(子句集).</p>
<p>将谓词公式化为字句集合的过程:</p>
<ul>
<li>消去 <span class="math inline">\(\to\)</span> 和 <span
class="math inline">\(\iff\)</span></li>
</ul>
<p>将 <span class="math display">\[
\forall x[(\neg P(x)\lor \neg Q(x))\to \exists y(S(x,y)\land Q(x))]\land
\forall x (P(x)\lor B(x))
\]</span> 化为子句集.</p>
<p>图灵停机问题</p>
<p>设有谓词公式 <span class="math inline">\(\mathcal{P}\)</span>,
其标准子句集为 <span class="math inline">\(\mathcal{C}\)</span>, 则
<span class="math inline">\(\mathcal{P}\)</span> 不可满足的充要条件是
<span class="math inline">\(\mathcal{C}\)</span> 不可满足.</p>
<p>定义 <span class="math inline">\(H\)</span> 域: 设 <span
class="math inline">\(G\)</span> 是谓词公式, 定义在论域 <span
class="math inline">\(D\)</span> 上, 设 <span
class="math inline">\(H_0\)</span> 是 <span
class="math inline">\(G\)</span> 中所有出现的常量的集合, 若</p>
<p><strong>Herbrand 定理</strong></p>
<p><strong>Robinson 归结原理</strong></p>
<p>设 <span class="math inline">\(C_1,C_2\in\mathcal{C}\)</span>, 若
<span class="math inline">\(L_1\in C_1\)</span> 与 <span
class="math inline">\(L_2\in C_2\)</span> 互补, 则从 <span
class="math inline">\(C_1,C_2\)</span> 中可以分别消去 <span
class="math inline">\(L_1,L_2\)</span>
且将剩余部分做<strong>析取</strong>构成一个新的字句 <span
class="math inline">\(C_{12}\)</span>, 称这一过程为归结, <span
class="math inline">\(C_{12}\)</span> 为 <span
class="math inline">\(C_1,C_2\)</span> 的归结式, <span
class="math inline">\(C_1,C_2\)</span> 为 <span
class="math inline">\(C_{12}\)</span> 的亲本子句.</p>
]]></content>
  </entry>
  <entry>
    <title>常见的神经网络</title>
    <url>/2023/08/31/junior_first_semester/statistical-learning/cnn/</url>
    <content><![CDATA[<!-- 本课程的内容：

- 复习传统机器学习算法
- 统计学习理论高级内容: 《统计学习方法》第 9, 10, 11, 15, 16, 19, 20, 21 章的内容.
- 神经网络的概述, 各种特点和注意事项
- CV: CNN, ResNet
- NLP: Transformer 和 Attention, Bert
- GNN
- GAN
- RL
- XGBoost

# 神经网络常见的优化器


## 不同优化器的可视化表现

<img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309041757448.gif" style="zoom:50%;" />

<img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309041758123.gif" style="zoom:50%;" />

## SGD, BGD, MBGD



## 动量算法: Nesterov Accelerated Gradient 



## 自适应学习率算法

### Adagrad

### Adadelta

### RMSprop

### Adam

### Adamax

### Nadam -->
<h1 id="gradient-vanish-and-explosion">Gradient Vanish and
Explosion</h1>
<h1 id="cnn">CNN</h1>
<p>图像可以看作是一个 <span class="math inline">\(H\times W\)</span>
的矩阵, 每个元素都是图像的一个像素, 表示图像上的一个点.
考虑到图像的通道, 是一个 <span class="math inline">\(H\times W\times
C\)</span> 的三维张量, 其中 <span class="math inline">\(H,W\)</span>
为图片的长与宽, <span class="math inline">\(C\)</span> 为图像的通道数,
对于彩色图像而言, <span class="math inline">\(C=3\)</span>, 即 RGB
(红绿蓝), 每个像素的每个通道的数值都是 <span
class="math inline">\([0,255]\)</span> 之间的一个整数.</p>
<p>灰度图像只有一个通道, 每个像素的值表示灰度级别, 也是 <span
class="math inline">\([0,255]\)</span> 之间的一个整数.</p>
<blockquote>
<p>图像的通道指的是图像中颜色信息的分量.</p>
</blockquote>
<h2 id="convolution-convolutional-kernel">Convolution &amp;
Convolutional Kernel</h2>
<p>卷积核和图像的格式保持一致, 具有<strong>长,
宽和通道数</strong>的概念, 且卷积核的通道数与输入数据的通道数需要相等.
常使用的卷积核的尺寸为 <span class="math inline">\(3\times
3,5\times5,7\times7\)</span>.</p>
<p>在将卷积核与图像做卷积操作之前, 需要确定两个参数:</p>
<p>1: padding (填充). 即在原始图像周围填充一圈 0,
得到一张尺寸更大的图片. 这样做是因为卷积操作会缩小原图尺寸,
进行填充后可以保证原图尺寸不变.</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309181559086.png" alt="padding=1的情形" style="zoom:50%;" /></p>
<p>2: stride (步长).
步长表示卷积核在图像上滑动的过程中两个卷积核之间的距离,
同样会影响卷积后的图像大小, 上图是 stride=2的情形.</p>
<p>确定 padding 为 <span class="math inline">\(p\)</span> 且 stride 为
<span class="math inline">\(s\)</span> 后, 卷积核的尺寸为 <span
class="math inline">\(h_{\mathrm{k}}\times w_{\mathrm{k}}\times
c_{\mathrm{in}}\)</span>, 卷积操作输出的图片的尺寸为 <span
class="math display">\[
\begin{aligned}
h_{\mathrm{out}}=\frac{h_{\mathrm{in}}-h_{\mathrm{k}}+2p}{s}+1
\newline{}
w_{\mathrm{out}}=\frac{w_{\mathrm{in}}-w_{\mathrm{k}}+2p}{s}+1
\end{aligned}
\]</span> 输出通道 <span class="math inline">\(c_{\mathrm{out}}\)</span>
<strong>取决于卷积核的个数</strong>, 因为<strong>每一个 kernel
将图片的3个通道压缩为了一个通道</strong>, 将做过卷积操作得到的图像称为
Feature Maps.</p>
<blockquote>
<p>卷积核的三个通道分别与图像的三个通道做卷积,
得到三个矩阵(或者说得到一张通道数为3的新图片),
将三个矩阵对应位置的元素<strong>加起来</strong>得到了通道数为1的feature
map, 除此之外, 卷积操作也会有 bias 的存在, 即最终结果再加上 bias.</p>
</blockquote>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309181555971.png"
alt="How to Calculate Convolutional Layer Size" />
<figcaption aria-hidden="true">How to Calculate Convolutional Layer
Size</figcaption>
</figure>
<h3 id="times-1-kernel"><span class="math inline">\(1\times 1\)</span>
kernel</h3>
<p>相当于 fc ?</p>
<h3 id="为什么卷积操作可以提取特征">为什么卷积操作可以提取特征?</h3>
<p>卷积操作能够提取的特征包括 边缘/纹理/颜色/形状 等.</p>
<p>怎么做到的呢? 有没有什么本质上的原因?</p>
<h2 id="max-pooling">Max Pooling</h2>
<p>池化操作就是将卷积后的图的尺寸进一步缩小并保留原有特征. 思想很简单,
类似于卷积核的滑动, 将固定大小的池化窗口以一定的 stride 滑动,
每个窗口内取最大值作为输出, 得到一个新的图像.</p>
<p>除了 max pooling 还有 average pooling, 但是 max pooling
使用的更多.</p>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309181626904.png"
alt="Max Pooling" />
<figcaption aria-hidden="true">Max Pooling</figcaption>
</figure>
<h2 id="the-whole-cnn">The Whole CNN</h2>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309181628800.png"
alt="整个CNN的结构" />
<figcaption aria-hidden="true">整个CNN的结构</figcaption>
</figure>
<p>原始图片可以经过多次卷积和池化, 当卷积和池化操作完成后,
图片的尺寸大幅度减小, 此时直接将图片 flatten
展平为向量作为全连接层的输入即可.</p>
<p>整个 CNN 在做的就是, 在尽可能保留图像的特征的前提下,
尽可能使图像的尺寸减少, 即<strong>特征提取</strong>, 略去冗余无用的信息,
以减少网络的参数的数量, 减少训练时间并降低过拟合的程度.</p>
<p>CNN 学习的参数包括卷积核的权重和全连接层的权重, 除此之外可能还有一些
bias(也是卷积操作过程中或者全连接层的).</p>
<h2 id="cnn-with-pytorch">CNN with Pytorch</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__() </span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">3</span>, <span class="number">32</span>, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">32</span>, <span class="number">32</span>, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.conv3 = nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.conv4 = nn.Conv2d(<span class="number">64</span>, <span class="number">64</span>, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.conv5 = nn.Conv2d(<span class="number">64</span>, <span class="number">128</span>, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.conv6 = nn.Conv2d(<span class="number">128</span>, <span class="number">128</span>, <span class="number">3</span>, padding=<span class="number">1</span>)</span><br><span class="line">        self.pool = nn.MaxPool2d(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">128</span> * <span class="number">4</span> * <span class="number">4</span>, <span class="number">512</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">512</span>, <span class="number">256</span>)</span><br><span class="line">        self.fc3 = nn.Linear(<span class="number">256</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = F.relu(self.conv1(x))</span><br><span class="line">        x = F.relu(self.conv2(x))</span><br><span class="line">        x = self.pool(x)</span><br><span class="line">        x = F.relu(self.conv3(x))</span><br><span class="line">        x = F.relu(self.conv4(x))</span><br><span class="line">        x = self.pool(x)</span><br><span class="line">        x = F.relu(self.conv5(x))</span><br><span class="line">        x = F.relu(self.conv6(x))</span><br><span class="line">        x = self.pool(x)</span><br><span class="line">        x = x.view(-<span class="number">1</span>, <span class="number">128</span> * <span class="number">4</span> * <span class="number">4</span>)</span><br><span class="line">        x = F.relu(self.fc1(x))</span><br><span class="line">        x = F.dropout(x, p=<span class="number">0.5</span>)</span><br><span class="line">        x = F.relu(self.fc2(x))</span><br><span class="line">        x = F.dropout(x, p=<span class="number">0.5</span>)</span><br><span class="line">        x = self.fc3(x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure>
<h1 id="resnet">ResNet</h1>
<hr />
<h1 id="rnn">RNN</h1>
<p>Recurrent Neural Network.</p>
<h2 id="why-rnn">Why RNN?</h2>
<p>考虑到语言中词汇序列的<strong>时序关系</strong>以及<strong>上下文</strong>,
RNN 能够顾及到前面的输入和后面的输入的关系,
同时也能模拟人脑的记忆功能.</p>
<h2 id="the-structure-of-rnn">The Structure of RNN</h2>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191506125.png"
alt="RNN结构" />
<figcaption aria-hidden="true">RNN结构</figcaption>
</figure>
<p>本质上是一个简单的有一层隐藏层的全连接神经网络. 设输入向量为 <span
class="math inline">\(x\)</span>, 隐藏层向量为 <span
class="math inline">\(h\)</span>, 输出向量为 <span
class="math inline">\(o\)</span>, 输入层和隐藏层的参数矩阵为 <span
class="math inline">\(U\)</span>, 激活函数为 <span
class="math inline">\(f\)</span>, 隐藏层和输出层的参数矩阵为 <span
class="math inline">\(W\)</span>, 激活函数为 <span
class="math inline">\(g\)</span>.</p>
<p>考虑到序列模型, 可以让 <span class="math inline">\(h\)</span>
不只取决于 <span class="math inline">\(x\)</span>,
还与上一个<strong>时刻</strong>的 <span class="math inline">\(h\)</span>
有关, 那么这样输入层/隐藏层/输出层都是时间的序列: <span
class="math inline">\(\{x_t\},\{h_t\},\{o_t\}\)</span>,
设两个时刻之间的隐藏层向量 <span
class="math inline">\(h_{t-1},h_t\)</span> 的参数矩阵为 <span
class="math inline">\(V\)</span>, 那么 <span class="math display">\[
\boxed{
\begin{aligned}
&amp;h_t=f(Ux_t+Vh_{t-1})\newline{}
&amp;o_t=g(Wh_t)
\end{aligned}
}
\]</span></p>
<p>未考虑 bias.</p>
<h2 id="different-types-of-rnn">Different Types of RNN</h2>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191518635.png"
alt="根据输入与输出的数量不同, RNN的不同种类" />
<figcaption aria-hidden="true">根据输入与输出的数量不同,
RNN的不同种类</figcaption>
</figure>
<p>不同种类的 RNN 被设计来完成不同的任务:</p>
<ul>
<li>one2one: 应该不能把这个看作 RNN, 就是普通的神经网络</li>
<li>one2many: 根据一个输入生成句子, 比如输入图片给图片做描述等.</li>
<li>many2one: 根据句子输出一个 label, 比如情感分析.</li>
<li>many2many 位置不对应: 翻译.</li>
<li>many2many 位置一一对应: 将视频的每个帧输出label.</li>
</ul>
<h1 id="lstm">LSTM</h1>
<p>Long Short Term Memory.</p>
<h2 id="why-lstm">Why LSTM?</h2>
<p>因为 RNN 缺点: 梯度消失或梯度爆炸导致无法处理处理长序列,
或者是相距很远的上下文对应关系.</p>
<p>LSTM 的思想就是选择性记忆, 而不像 RNN 那样不论有没有用都去记忆.</p>
<h2 id="the-structure-of-lstm">The Structure of LSTM</h2>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191602076.png"
alt="RNN和LSTM的对比" />
<figcaption aria-hidden="true">RNN和LSTM的对比</figcaption>
</figure>
<p>LSTM 采用了门电路的思想, 设计了 forget gate, input gate 和 output
gate用来控制 input value, memory value 和 output value. 使用 sigmoid
将数值控制在 <span class="math inline">\((0,1)\)</span> 之间,
对应了门的开闭状态.</p>
<p>每个 cell 中, <span class="math inline">\(\times\)</span>
表示将两个向量做 <a
href="https://en.wikipedia.org/wiki/Hadamard_product_(matrices)">Hadamard
product</a>, 用符号 <span class="math inline">\(\odot\)</span> 表示,
<span class="math inline">\(+\)</span> 表示将两个向量做相加操作.</p>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191609779.png"
alt="LSTM cell 结构" />
<figcaption aria-hidden="true">LSTM cell 结构</figcaption>
</figure>
<p>根据数据的流向, 很容易就能够写出公式: <span class="math display">\[
\boxed{
\begin{aligned}
&amp; f_t=\sigma(U^fx_t+V^fh_{t-1})\text{ forget gate}\newline{}
&amp; i_t=\sigma(U^ix_t+V^ih_{t-1})\text{ input gate}\newline{}
&amp; o_t=\sigma(U^ix_t+V^ih_{t-1})\text{ output gate}\newline{}
&amp; \tilde{C}_t=\tanh(U^gx_t+V^gh_{t-1})\newline{}
&amp; C_t=f_t\odot C_{t-1}+i_t\odot \tilde{C}_t\newline{}
&amp; h_t=o_t\odot \tanh(C_t)
\end{aligned}
}
\]</span> 未考虑 bias.</p>
<h1 id="gru">GRU</h1>
<p>Gate Recurrent Unit.</p>
<h2 id="why-gru">Why GRU?</h2>
<p>LSTM 的 cell 引入了三个门, 参数量比较大, GRU 在 LSTM
的基础上进行了简化, 只设计了两个门, update gate 和 reset gate.</p>
<h2 id="the-structure-of-gru">The Structure of GRU</h2>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191652320.png"
alt="LSTM 与 GRU 对比" />
<figcaption aria-hidden="true">LSTM 与 GRU 对比</figcaption>
</figure>
<p>The difference between LSTM and GRU:</p>
<ol type="1">
<li><p>GRU does not possess any internal memory, they don’t have an
output gate that is present in LSTM</p></li>
<li><p>In LSTM the input gate and target gate are coupled by an update
gate, and in GRU reset gate is applied directly to the previous hidden
state</p></li>
<li><p>In LSTM the responsibility of reset gate is taken by the two
gates i.e., input and target</p></li>
</ol>
<p>下面是更清晰的结构:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191704057.png" /></p>
<p>根据数据流向写出下面的公式: <span class="math display">\[
\boxed{
\begin{aligned}
&amp; r_t=\sigma(U^rx_t+V^rh_{t-1})\newline{}
&amp; z_t=\sigma(U^zx_t+V^zh_{t-1})\newline{}
&amp; \hat{h}_t=\tanh(U^h x_t+(V^hh_{t-1})\odot r_t)\newline{}
&amp; h_t=(1-z_t)\odot h_{t-1}+z_t\odot \hat{h}_t
\end{aligned}
}
\]</span> 关于权重矩阵 <span class="math inline">\(V^h\)</span>, wiki
上的版本为 <span class="math inline">\(V^h(h_{t-1}\odot r_t)\)</span>,
还有版本是, 上文求 <span
class="math inline">\(r_t,z_t,\hat{h}_t\)</span> 的过程中,
用的不是相加操作而是拼接操作, 如下所示:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309191747716.png" /></p>
<h1 id="为什么-rnn-及其变种中采用了激活函数-tanh">为什么 RNN
及其变种中采用了激活函数 <span class="math inline">\(\tanh\)</span>
?</h1>
<p><span class="math inline">\(\tanh\)</span> 的二阶导不为零的区间较大,
改善了梯度消失的问题, 收敛快, 且计算开销小.</p>
<p><strong>Ref</strong> <a
href="https://stackoverflow.com/questions/40761185/what-is-the-intuition-of-using-tanh-in-lstm">machine
learning - What is the intuition of using tanh in LSTM? - Stack
Overflow</a></p>
<hr />
<h1 id="transformer">Transformer</h1>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309061405066.png" alt="Transformer结构图" style="zoom: 33%;" />
<span class="math display">\[
\boxed{\mathrm{Attention}(Q,K,V)=\mathrm{softmax}\left(\frac{QK^T}{\sqrt{d_k}}\right)V}
\]</span></p>
<hr />
<p>神经网络的输入总是一个向量, 对于不同形式的“自然语言”,
可以通过如下处理来使其变为向量:</p>
<ul>
<li><p>声音: 使用<strong>可重叠的滑窗</strong>在一段声音中不断滑动,
获取若干元素形成一个向量, 比如可以让 25ms 为一个帧, 每两个帧的开始时间隔
10ms.</p>
<p>问题: 每个滑窗内的声音信号是如何变成向量的一个元素的?</p></li>
<li><p>文本数据.</p>
<p><span class="math inline">\(\it (1)\)</span> 使用 <strong>one-hot
encoding (独热编码)</strong>, 设有 <span
class="math inline">\(n\)</span> 个单词, 则用向量 <span
class="math inline">\([0,\cdots,0,\underbrace{1}_{第i个},0,\cdots,0]\)</span>
表示第 <span class="math inline">\(i\)</span> 个单词. 这种方法比较简单,
但是缺点很明显: <strong>维度灾难</strong>(当单词数目非常多的时候,
向量的维度就会非常大,
数据形成的矩阵相当稀疏)和<strong>语义鸿沟</strong>(不同单词之间没有显著的差异,
无法进行相似度计算).</p>
<p><span class="math inline">\(\it (2)\)</span> <strong>Word Embedding
(词嵌入)</strong>: 将每个单词或词组映射为低维空间上的向量,
对于语义相近的单词, 可以通过距离来衡量其相似程度, 两种主流的 word
embedding 算法是 word2vec 和 GloVe. 如下图所示:</p></li>
</ul>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309060926273.png" style="zoom: 50%;" /></p>
<p>使用滑窗的缺点是无法顾及整体, 也就是可能无法考虑到上下文的影响,
因此引入 self-attention.</p>
<h2 id="self-attention">self-attention</h2>
<p>每个向量得到 query, key, value.</p>
<blockquote>
<p>太难了, 看不懂</p>
</blockquote>
<h3 id="self-attention-for-speech-image-and-graph">self-attention for
speech, image and graph</h3>
<hr />
<h1 id="restromer">Restromer</h1>
<figure>
<img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202309181718897.png"
alt="Architecture of Restormer" />
<figcaption aria-hidden="true">Architecture of Restormer</figcaption>
</figure>
]]></content>
  </entry>
  <entry>
    <title>概率论(1): 基本概念</title>
    <url>/2022/09/05/math/prob/prob-basic/</url>
    <content><![CDATA[<p><em>参考书目：《概率论与数理统计》陈希孺</em>
以及本校的教材和中科大的教材, 并以前两者为主.</p>
<blockquote>
<p>概率论与数理统计是研究随机现象的统计规律性的数学学科。</p>
</blockquote>
<h2 id="序言-概率论的起源">序言: 概率论的起源</h2>
<blockquote>
<p>无论哪个年代, 人们开始关注概率论初步研究的原因, 一定都是基于赌博.</p>
<p>——吐得哈特《概率论史》</p>
</blockquote>
<h3 id="引子">引子</h3>
<h4 id="section">1</h4>
<blockquote>
<p>A 和 B 两人公平地进行轮流投掷硬币。正面先出现 3 次的话就是 A
的胜利，反面 先出现 3 次的话就是 B
的胜利，胜利者可以获得全部的奖金。但当正面出现 2 次， 反面出现 1
次时，投硬币游戏因为某种原因不得不中止。请问此时，从公平的角度来看，要按什么比例分配奖金？</p>
</blockquote>
<p>直观上来想, 在这个条件下, 获胜概率越大的人应该能拿走更多的奖金.
Pascal和Fermat给出了两种不同的解法:</p>
<p>Pascal解法： <span class="math display">\[
\begin{cases}
A:\frac{1}{2}\times 1+\frac{1}{2}\times \frac{1}{2}=\frac{3}{4}\\
B:\frac{1}{2}\times 0+\frac{1}{2}\times\frac{1}{2}=\frac{1}{4}.
\end{cases}
\]</span> 于是为 <span class="math inline">\(3:1.\)</span>
Pascal实际上就是在求概率.</p>
<p>Fermat解法: 由于再投两次比赛必定结束, 且所有可能的结果为:
正正、正反、反正、反反，其中的三种情况能使 <span
class="math inline">\(A\)</span> 胜, 只有一种情况能使 <span
class="math inline">\(B\)</span> 胜, 自然是 <span
class="math inline">\(3:1.\)</span> 这实际上是古典概型的想法.</p>
<h4 id="伯川德悖论">2: 伯川德悖论</h4>
<blockquote>
<p>在单位圆内随机取一条弦, 求其长度超过该圆内接等边三角形边长的概率.</p>
</blockquote>
<p>这道题之所以被称为悖论, 是因为"随机取一条弦"不够具体,
我们不清楚是何种随机, 不同的 "等可能性" 假定导致了不同的样本空间.
若取得弦的中点在一条直径上均匀分布, 直径上的点为样本空间, 则 <span
class="math inline">\(p=1/2;\)</span> 若取得的弦的端点在圆周上均匀分布,
圆周上的点为样本空间, 则 <span class="math inline">\(p=1/3;\)</span>
若取得的弦的中点在圆内均匀分布, 圆内的点为样本空间, 则 <span
class="math inline">\(p=1/4.\)</span></p>
<h2 id="一些定义">一些定义</h2>
<p>概率是表示某种情况（事件）出现的可能性大小的一种数量指标.</p>
<p>自然界的现象一般分为:</p>
<ul>
<li>确定现象: 条件决定结果, 研究工具为分析/几何/代数等;</li>
<li>随机现象: 条件不能完全决定结果, 研究工具为概率论/数理统计.</li>
<li>模糊现象: 事物本身的含义不确定的现象.</li>
</ul>
<p><strong>定义1（随机试验）</strong>
满足以下条件的试验称为随机试验：</p>
<ul>
<li>它可在相同条件下重复进行;</li>
<li>试验的全部可能结果，在试验前就明确知道;</li>
<li>一次试验结束之前，不能准确预知哪一个结果将会出现.</li>
</ul>
<p><span class="math inline">\(\square\)</span></p>
<p>重复进行试验时所需要的"相同条件"</p>
<p><strong>定义2 (基本事件与复合事件)</strong> 称在随机试验 <span
class="math inline">\(E\)</span>
中必发生一个且仅发生一个的最简单事件为事件 <span
class="math inline">\(E\)</span> 的基本事件,
由若干基本事件组合而成的事件称为复合事件. <span
class="math inline">\(\square\)</span></p>
<p>比如掷骰子, 掷出 <span class="math inline">\(1,2,3,4,5,6\)</span>
点是六个基本事件, 掷出合数点是一个复合事件, 它是掷出 <span
class="math inline">\(4,6\)</span> 点这两个基本试验的复合.
一个随机试验的基本事件可能有无穷个.</p>
<p><strong>定义3</strong> 用集合表示事件. 对于随机试验 <span
class="math inline">\(E\)</span> 的每一个基本事件, 用一个只包含元素
<span class="math inline">\(\omega\)</span> 的集合 <span
class="math inline">\(\mathcal{E}=\{\omega\}\)</span> 表示, 并称 <span
class="math inline">\(\omega\)</span> 为基本事件 <span
class="math inline">\(\cal E\)</span> 对应的元素 ;
对于由若干基本事件组成的复合事件, 则用对应的若干个元素所组成的集合表示;
由全体基本试验所对应的全部元素组成的集合, 称为随机试验 <span
class="math inline">\(E\)</span> 的<strong>样本空间</strong>, 用 <span
class="math inline">\(\Omega\)</span> 表示. <em>样本空间的每一个元素
<span class="math inline">\(\omega\)</span> 为<strong>样本点,</strong>
对于事件 <span class="math inline">\(A,\)</span> 若我们观测到样本点
<span class="math inline">\(\omega\in A,\)</span> 则表示事件 <span
class="math inline">\(A\)</span> 发生.</em> <span
class="math inline">\(\square\)</span></p>
<p><span class="math inline">\(\Omega\)</span>
<strong>即一个随机试验结束时所有可能的结果构成的集合. 事件即为 <span
class="math inline">\(\Omega\)</span> 的子集. 特别地, <span
class="math inline">\(\Omega\)</span> 称为必然事件, <span
class="math inline">\(\emptyset\)</span> 称为不可能事件.</strong></p>
<p><strong><em>REMARK</em></strong> 1) 根据基本事件与复合事件的定义,
<span class="math inline">\(\emptyset\)</span> 是基本事件还是复合事件?
答案是<strong>复合事件</strong>, 因为 <span
class="math inline">\(\emptyset\)</span> 不满足基本事件的定义,
即<strong>必发生一个且仅发生一个的最简单事件</strong>, 而 <span
class="math inline">\(\emptyset\)</span> 在一次试验中是不可能发生的.</p>
<ol start="2" type="1">
<li>基本事件是<strong>试验结束时</strong>的结果,
不同基本事件发生的概率并不一定相等. 比如试验:
抛硬币直到抛出正面结束试验, 其样本空间为 <span
class="math inline">\(\Omega=\{T,FT,FFT,\cdots\},\)</span> 其中 <span
class="math inline">\(F\)</span> 为反面, <span
class="math inline">\(T\)</span> 为正面, <span
class="math inline">\(P(T)=1/2\ne P(FT)=1/4.\)</span></li>
</ol>
<h2 id="事件的运算">事件的运算</h2>
<p>事件是基本事件所对应元素的集合，它仍然可以进行集合的运算，同时这些运算也有对应的实际意义。</p>
<p><strong>事件的包含关系</strong>
设<strong>同一试验下</strong>的两个事件为 <span
class="math inline">\(A,B,\)</span> 若 <span
class="math inline">\(A\)</span> 发生可以推出 <span
class="math inline">\(B\)</span> 一定发生，我们称 <span
class="math inline">\(A\)</span> 蕴含 <span
class="math inline">\(B,\)</span> 或 <span
class="math inline">\(B\)</span> 包含 <span
class="math inline">\(A,\)</span> 记作 <span
class="math inline">\(A\subset B.\)</span> <span
class="math inline">\(\square\)</span></p>
<p>从集合的角度来考虑, 事件 <span class="math inline">\(A\)</span>
发生表明做试验的结果是某个基本事件 <span class="math inline">\(\omega\in
A,\)</span> 由于 <span class="math inline">\(B\)</span> 也发生了，这表明
<span class="math inline">\(\omega \in B,\)</span> 即 <span
class="math inline">\(\forall \omega \in A,\omega \in B,\)</span>
这正表明了 <span class="math inline">\(A\subset B.\)</span></p>
<p>若 <span class="math inline">\(A,B\)</span>
互相蕴含，则称两事件相等，记作 <span class="math inline">\(A=B.\)</span>
“两<strong>事件相等”的意思就是两个事件由<em>完全相同的试验结果</em>构成，它不过是同一件事表面上看起来不同的两种描述而已。</strong></p>
<p>根据子事件的定义, <span class="math inline">\(\emptyset\sub
A\)</span> 表明了"不可能事件的发生会导致 <span
class="math inline">\(A\)</span>" 的发生, 这看起来有些荒诞,
但是既然不可能事件都发生了, 我们为什么没有理由认为 <span
class="math inline">\(A\)</span> 不发生呢?
这实际上是错误的前提可以推出任意的结果, 即当 <span
class="math inline">\(p_1\)</span> 为真 <span
class="math inline">\(p_2\)</span> 为真或 <span
class="math inline">\(p_1\)</span> 为假时 <span
class="math inline">\(p_1\to p_2\)</span> 为真.</p>
<p><strong>事件的和 (并) </strong> 设有两个事件 <span
class="math inline">\(A,B,\)</span> 定义事件 <span
class="math inline">\(C=\{A,B~至少发生一个\}\)</span> 为事件 <span
class="math inline">\(A\)</span> 与事件 <span
class="math inline">\(B\)</span> 的和或并，记作 <span
class="math display">\[
C=A+B\text{ or }C=A\cup B.
\]</span> <span class="math inline">\(\square\)</span></p>
<p>我们可以借助事件的并给并联电路建模: 任意支路工作, 整个系统工作.</p>
<p><strong>事件的积（交）</strong> 设有两个事件 <span
class="math inline">\(A,B,\)</span> 定义事件 <span
class="math inline">\(C=\{A,B~同时发生\}.\)</span> 当 <span
class="math inline">\(A,B\)</span> 都发生时 <span
class="math inline">\(C\)</span> 发生，当 <span
class="math inline">\(A,B\)</span> 两者有一个不发生时 <span
class="math inline">\(C\)</span> 不发生。这样定义的事件称为事件 <span
class="math inline">\(A\)</span> 和事件 <span
class="math inline">\(B\)</span> 的积或交，记作 <span
class="math display">\[
C=AB\text{ or }C=A\cap B.
\]</span> 我们可以借助事件的交给串联电路建模.</p>
<p><span class="math inline">\(\square\)</span></p>
<p>上面定义了事件的积，需要两个事件同时发生，但是两个事件不总是能同时发生，比如掷一枚骰子这个试验，设掷到奇数点为事件
<span class="math inline">\(A,\)</span> 掷到偶数点为事件 <span
class="math inline">\(B,\)</span> 显然 <span
class="math inline">\(A,B\)</span>
不可能同时发生，于是我们引申出互斥事件的概念。</p>
<p><strong>事件的互斥和对立</strong> 若两事件 <span
class="math inline">\(A,B\)</span>
不能再同一次实验中都发生，则称它们是互斥的。</p>
<p>互斥事件的一个重要情况是对立事件：若 <span
class="math inline">\(A\)</span> 为一事件，则 <span
class="math inline">\(B=\{A不发生\}\)</span> 称为 <span
class="math inline">\(A\)</span> 的对立事件，记作 <span
class="math inline">\(\overline{A}.\)</span></p>
<p>对立事件对应了集合的补集运算。<span
class="math inline">\(\square\)</span></p>
<p><span class="math inline">\(\emptyset\)</span> 与任何事件都互斥,
且同一试验的基本事件之间两两互斥.</p>
<p><strong>事件的差</strong> 设 <span class="math inline">\(A,B\)</span>
为两个事件，定义事件 <span
class="math inline">\(C=\{A发生,B不发生\}\)</span> 为事件 <span
class="math inline">\(A,B\)</span> 的和或差，记作 <span
class="math display">\[
C=A-B.
\]</span> 注意到 <span class="math inline">\(B\)</span>
不发生可以用其互斥事件表示，于是有等式 <span class="math display">\[
A-B=A\overline{B}
\]</span> 成立。这正对应了集合之间的差集运算。<span
class="math inline">\(\square\)</span></p>
<p>注意: <span class="math display">\[
\emptyset -\Omega=\emptyset, A-\Omega=\emptyset.
\]</span>
由于事件的运算对应了集合的运算,因此集合的运算性质在事件的运算中仍然适用.
这里只列出<strong>吸收率</strong>: 若 <span
class="math inline">\(A\subset B,\)</span> 则 <span
class="math inline">\(AB=A,A\cup B=B.\)</span></p>
<p>此外, 上述事件的运算均可推广至多个事件之间的运算.</p>
<h3 id="常用公式">常用公式</h3>
<p><span class="math display">\[
P(A\overline{B})=P(A(\Omega -B))=P(A\Omega-AB)=P(A-AB)=P(A)-P(AB)
\]</span></p>
<p>即 <span class="math display">\[
\boxed{P(A\overline{B})=P(A)-P(AB)}.
\]</span> 当然, 直观上也很容易理解 <span
class="math inline">\(A-B=A-AB,\)</span> "去掉两个集合的公共元素".</p>
<p>用容斥原理可以得到另一个式子: <span class="math display">\[
P(A\overline{B})=1-P(\overline{A}\cup
B)=1-P(\overline{A})-P(B)+P(\overline{A}B)=P(A)-P(B)+P(\overline{A}B),
\]</span> 借助上个式子整理即得: <span class="math display">\[
\boxed{P(A\overline{B})-P(\overline{A}B)=P(A)-P(B)}
\]</span></p>
<h2 id="古典概率">古典概率</h2>
<blockquote>
<p>设某个试验有有限个可能的结果 <span
class="math inline">\(e_1,e_2,\cdots,e_N,\)</span>
若从该试验的条件以及实施方法上去分析，我们找不到任何理由认为其中的某个结果
<span class="math inline">\(e_i\)</span> 要比另一个事件 <span
class="math inline">\(e_j(j\ne i)\)</span>
”更容易“发生，那么我们便认为所有的结果有同等的可能出现，这样的试验结果称作”等可能的“.</p>
</blockquote>
<p><strong>定义4</strong> 设 <span class="math inline">\(E\)</span>
是一个随机试验, 若它满足: (1) 仅有有限个基本事件; (2)
每个基本事件发生的可能性相等, 则称 <span
class="math inline">\(E\)</span> 为<strong>古典概型</strong>试验.</p>
<p>显然有 <span
class="math inline">\(|\Omega(E)|&lt;\infty.\)</span></p>
<p><strong>定义5</strong><a href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a> 设一个试验有 <span
class="math inline">\(N\)</span> 个等可能的结果（即基本事件），而事件
<span class="math inline">\(A\)</span> 恰好包含其中的 <span
class="math inline">\(M\)</span> 个结果，则事件 <span
class="math inline">\(E\)</span> 的概率，记为 <span
class="math inline">\(P(E),\)</span> 定义为 <span
class="math display">\[
P(A)=\frac{M}{N}.
\]</span> <strong>性质1</strong> 设 <span
class="math inline">\(A_1,A_2,\cdots,A_n\)</span> 互斥，则 <span
class="math display">\[
P\left(\bigcup_{k=1}^nA_k\right)=\sum_{k= 1}^nP(A_k).
\]</span></p>
<h3 id="计算举例">计算举例</h3>
<p>按照古典概率的定义，古典概率的计算归结到 <span
class="math inline">\(M,N\)</span>
的计算，而这往往涉及到排列组合。排列和组合的前置知识： <a
href="https://baoduoxu.github.io/2022/08/19/组合数学（1）：一些问题-排列与组合/">组合数学（一）：一些问题&amp;排列与组合</a>。</p>
<p><strong>例1</strong> 从有 <span class="math inline">\(M\)</span>
个废品的 <span class="math inline">\(N(N\ge M)\)</span> 个产品中随机抽出
<span class="math inline">\(n\)</span> 个产品，求里面恰好有 <span
class="math inline">\(m(m\le n)\)</span> 个废品的概率。</p>
<p><strong><em>SOL</em></strong> 显然为 <span class="math display">\[
P=\frac{\binom{N-M}{n-m}\binom{M}{m}}{\binom{N}{n}}.
\]</span> <strong>例2</strong> <span class="math inline">\(n\)</span>
个男孩 <span class="math inline">\(m\)</span>
个女孩排队，求所有女孩两两不相邻的概率，以及他们排列成一个圆时所有女孩两两不相邻的概率。</p>
<p><strong><em>SOL</em></strong>
显然是插空法，先排男孩，再把女孩插入空隙即可。排列成直线时， <span
class="math display">\[
P=\frac{n!\binom{n+1}{m}m!}{(m+n)!}=\frac{\binom{n+1}{m}}{\binom{m+n}{m}}.
\]</span>
排列成圆时，直接套用圆排列公式即可，注意女孩插入空隙时并不是圆排列：
<span class="math display">\[
P=\frac{\frac{n!}{n}\binom{n}{m}m!}{\frac{(m+n)!}{m+n}}=\frac{(n-1)!\binom{n}{m}m!}{(m+n-1)!}=\frac{\binom{n}{m}}{\binom{m+n-1}{m}}.
\]</span> <strong>例3</strong> 某人在口袋里放了两盒火柴，每盒有 <span
class="math inline">\(n\)</span>
支火柴，他每次抽烟时会随机拿出来一盒用掉其中一支。某次他拿出一盒发现该盒是空的，那么此时另一盒还剩
<span class="math inline">\(m\)</span> 支火柴的概率是多少？</p>
<p><strong><em>SOL</em></strong> 拿到空盒是第 <span
class="math inline">\(2n+1-m\)</span> 次去火柴盒,于是这 <span
class="math inline">\(2n+1-m\)</span> 次的取法总数为 <span
class="math inline">\(2^{2n+1-m}\)</span> 次; 至于前 <span
class="math inline">\(2n-m\)</span> 词,
要保证一盒火柴用完，另一盒火柴还剩 <span
class="math inline">\(m\)</span> 支，则有 <span
class="math inline">\(n\)</span> 次取了同一盒火柴, 即 <span
class="math inline">\(\binom{2n-m}{n},\)</span> 一共有两盒火柴,
取法应该是 <span class="math inline">\(2\binom{2n-m}{n},\)</span> 于是
<span class="math display">\[
P=\frac{2\binom{2n-m}{n}}{2^{2n+1-m}}=\frac{\binom{2n-m}{n}}{2^{2n-m}}.
\]</span> <span class="math inline">\(\square\)</span></p>
<h3 id="几何概率">几何概率</h3>
<h2 id="概率的统计定义">概率的统计定义</h2>
<p>从实用的角度来看，概率的统计定义是一种同归实验去估计事件概率的方法。如果我们无法通过理论分析某个事件
<span class="math inline">\(E\)</span>
发生的概率有多大，我们可以做多次<strong>同样的</strong>实验（即同样条件下），假如为
<span class="math inline">\(n\)</span> 次，并设这 <span
class="math inline">\(n\)</span> 次试验中事件 <span
class="math inline">\(E\)</span> 发生的次数为 <span
class="math inline">\(m,\)</span> 那么我们称 <span
class="math inline">\(m/n\)</span> 是事件 <span
class="math inline">\(E\)</span> 在这 <span
class="math inline">\(n\)</span>
次试验中的<strong>频率</strong>，<strong>概率的统计定义即让这个频率作为事件
<span class="math inline">\(E\)</span> 概率 <span
class="math inline">\(P(E)\)</span>
的估计</strong>。它的直观背景很简单：<strong>一件事出现的可能性大小应该由它在多次重复试验中出现的<em>频繁程度</em>去刻画</strong>。</p>
<p>事实上，概率的统计定义的重要性不在于它是否提出了一种概率的定义，而是提出了一种<strong>估计概率的方法</strong>以及<strong>检验理论是否正确的方法</strong>，</p>
<h2 id="概率的公理化定义">概率的公理化定义</h2>
<p><strong>定义5</strong> 设随机试验 <span
class="math inline">\(E\)</span> 的样本空间为 <span
class="math inline">\(\Omega,\)</span> 定义事件的集合 <span
class="math inline">\(\cal F\)</span> 满足 <span
class="math inline">\(\{\Omega,\emptyset\}\subset \mathcal{F}\subset
\mathscr{P}(\Omega),\)</span> 定义概率为函数 <span
class="math inline">\(P:\cal F\to \mathbb{R},\)</span>
它满足三条性质:</p>
<p>1: (非负性) <span class="math inline">\(\forall A\in\cal F,\)</span>
<span class="math inline">\(0\le P(A)\le 1;\)</span></p>
<p>2: (规范性) <span class="math inline">\(P(\Omega)=1;\)</span></p>
<p>3: (可列可加性) 对 <span class="math inline">\(E\)</span>
的两两互斥的事件列<a href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a> <span
class="math inline">\(A_1,A_2,\cdots\in \cal F,\)</span> 有 <span
class="math display">\[
P\left(\bigcup_{k\ge 1}A_k\right)=\sum_{k\ge 1}P(A_k).
\]</span> <strong>性质2</strong> 1: <span
class="math inline">\(P(\emptyset)=0;\)</span></p>
<p>2: (有限可加性) 对 <span class="math inline">\(E\)</span>
的两两互斥的事件 <span
class="math inline">\(A_1,A_2,\cdots,A_n,\)</span> 有 <span
class="math display">\[
P\left(\bigcup_{k=1}^nA_k\right)=\sum_{k= 1}^nP(A_k);
\]</span> 3: <span class="math inline">\(\forall A\in\cal F,\)</span>
<span class="math inline">\(P(A)+P(\overline{A})=1.\)</span></p>
<p>4: (单调性) <span class="math inline">\(\forall
A,B\in\mathcal{F}\land A\subset B,\)</span> 有 <span
class="math inline">\(P(A)\le P(B)\)</span> 且 <span
class="math inline">\(P(B-A)=P(B)-P(A).\)</span> <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 性质2.1: 显然 <span
class="math inline">\(\emptyset\)</span> 与 <span
class="math inline">\(\emptyset\)</span> 互斥, 考虑事件列 <span
class="math inline">\(\emptyset,\emptyset,\cdots,\)</span>
利用可列可加性有 <span
class="math inline">\(P(\emptyset)=P(\emptyset)+P(\emptyset)+\cdots,\)</span>
显然 <span class="math inline">\(P(\emptyset)=0.\)</span></p>
<p>性质2.2: 只需要置两两互斥的事件列中的 <span
class="math inline">\(A_{n+1},A_{n+2},\cdots\)</span> 为 <span
class="math inline">\(\emptyset\)</span>
并利用可列可加性与性质2.1即可得出.</p>
<p>性质2.3: 借助有限可加性有 <span
class="math inline">\(P(\Omega)=P(A\cup
\overline{A})=P(A)+P(\overline{A})=1.\)</span></p>
<p>性质2.4: 注意到 <span class="math inline">\(A(B-A)=\emptyset\)</span>
且 <span class="math inline">\(A\cup(B-A)=B,\)</span> 于是 <span
class="math inline">\(P(A\cup(B-A))=\)</span> <span
class="math inline">\(P(A)+P(B-A)=P(B),\)</span> 这就证得了 <span
class="math inline">\(P(B-A)=P(B)-P(A),\)</span> 且 <span
class="math inline">\(P(B-A)\ge 0,\)</span> 于是 $P(B)P(A.) $ <span
class="math inline">\(\blacksquare\)</span></p>
<p><strong>性质3 (概率的加法定理)</strong></p>
<p>设 <span class="math inline">\(A_1,A_2,\cdots,A_n\in \cal F,\)</span>
则有 <span class="math display">\[
P\left(\bigcup_{k=1}^n A_k\right)=\sum_{k\in I}(-1)^{k-1}\sum_{X\subset
I\land |X|=k}P\left(\prod_{\ell \in X}A_\ell\right).
\]</span> 当 <span class="math inline">\(A_1,A_2,\cdots,A_n\)</span>
两两互斥时，上式变为 <span class="math display">\[
P\left(\bigcup_{k=1}^n A_k\right)=\sum_{k=1}^nP(A_k).
\]</span> <span class="math inline">\(\square\)</span></p>
<p>这本质上就是<a
href="https://baoduoxu.github.io/2022/08/26/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/">容斥原理</a>，因为
<span class="math inline">\(P(A)=|A|/|\Omega|,\)</span> 即 <span
class="math inline">\(P(A)\)</span> 与 <span
class="math inline">\(|A|\)</span> 之间是一一对应的<a href="#fn3"
class="footnote-ref" id="fnref3"
role="doc-noteref"><sup>3</sup></a>。</p>
<p>从这里也可以推出: <span class="math display">\[
P(A)+P(\overline{A})=1.
\]</span> 我们常用的是 <span class="math inline">\(n=2\)</span>
的情况，即 <span class="math display">\[
P(A\cup B)=P(A)+P(B)-P(AB).
\]</span></p>
<h2 id="条件概率">条件概率</h2>
<p>条件概率，顾名思义就是在附加一定条件之下所计算的概率。在概率论中，若除了试验的那些基础条件之外不再加入其他条件或假设，则算出的概率就叫做“无条件概率”；当说到条件概率时，我们总是指另外附加的条件，通常的形式为：在某件事已经发生的条件下计算另一件事情发生的概率。比如，掷一枚骰子，在掷出奇数点的条件下，掷出素数点的概率为
<span class="math inline">\(2/3,\)</span> 因为奇数点 <span
class="math inline">\(1,3,5\)</span> 中的 <span
class="math inline">\(3,5\)</span> 为素数。我们把在事件 <span
class="math inline">\(B\)</span> 发生的条件下事件 <span
class="math inline">\(A\)</span> 发生的概率记作 <span
class="math inline">\(P(A|B).\)</span> 竖线表明 <span
class="math inline">\(B\)</span> 已经发生或假想它已经发生。</p>
<p>考虑更一般的情况，设一个事件有 <span class="math inline">\(N\)</span>
个等可能的结果，事件 <span class="math inline">\(A,B\)</span>
分别包含其中的 <span class="math inline">\(M_1,M_2(M_1,M_2\le
N)\)</span> 个结果，且它们有 <span class="math inline">\(M\)</span>
个公共的结果，即事件 <span class="math inline">\(AB\)</span>
包含的结果数为 <span class="math inline">\(M\)</span> 个。若要在事件
<span class="math inline">\(B\)</span> 发生的条件下计算事件 <span
class="math inline">\(A\)</span> 发生的概率，则全部可能的结果由原先的
<span class="math inline">\(N\)</span> 个变为了 <span
class="math inline">\(M_2\)</span> 个，而其中的 <span
class="math inline">\(M\)</span> 个结果发生可以推出事件 <span
class="math inline">\(A\)</span> 发生，这表明 <span
class="math display">\[
P(A|B)=\frac{M}{M_2}=\frac{M/N}{M_2/N}=\frac{P(AB)}{P(B)}.
\]</span> 这就是条件概率的定义，其中要限制 <span
class="math inline">\(P(B)\ne 0,\)</span> 对于 <span
class="math inline">\(P(B)=0\)</span>
的个别情况，我们可以用极限去处理。</p>
<p><strong><em>REMARK</em></strong>
计算条件概率不一定要用上面的公式，比如在前面举的掷骰子的例子，我们直接从加入条件后改变了的情况去算更为方便。</p>
<p>定义条件概率后，
我们希望这是一个合法的概率模型，也即该概率模型是符合公理化定义的，现在我们来验证条件概率符合概率的三个性质。</p>
<p><strong>性质4</strong> 设随机试验 <span
class="math inline">\(E\)</span> 的样本空间为 <span
class="math inline">\(\Omega,\)</span> 设 <span
class="math inline">\(A,B,A_1,A_2,\cdots\in\cal F,\)</span> 且 <span
class="math inline">\(P(B)&gt;0,\)</span> 则</p>
<p>1: （非负性）<span class="math inline">\(\forall
A\in\mathcal{F},P(A|B)\in[0,1];\)</span></p>
<p>2: （规范性）<span class="math inline">\(P(\Omega|B)=1;\)</span></p>
<p>3: （可列可加性）若 <span
class="math inline">\(A_1,A_2\cdots\)</span> 两两互斥, 则 <span
class="math display">\[
P\left(\left.\bigcup_{k\ge 1}A_k\right| B\right)=\sum_{k\ge 1}P(A_k|B).
\]</span> <span class="math inline">\(\square\)</span></p>
<p>这里只证明性质4.3.</p>
<p><strong><em>PROOF</em></strong> 首先若 <span
class="math inline">\(A_1,A_2,\cdots\)</span> 两两互斥，则 <span
class="math inline">\(A_1B,A_2B,\cdots\)</span>
也是两两互斥的，这是显然的，因为对于互斥的事件列而言，它们的子集也是两两互斥的。
<span class="math display">\[
\begin{aligned}P\left(\left.\bigcup_{k\ge 1}A_k\right|
B\right)&amp;=\frac{P(B\bigcup_{k\ge
1}A_k)}{P(B)}\\&amp;=\frac{P(\bigcup_{k\ge
1}A_kB))}{P(B)}\\&amp;=\frac{1}{P(B)}\sum_{k\ge
1}P(A_kB)\\&amp;=\sum_{k\ge 1}P(A_k|B).\end{aligned}
\]</span> <span class="math inline">\(\blacksquare\)</span></p>
<p>这就表明了条件概率是一个合法的概率模型，于是概率满足的其他性质条件概率都是满足的。</p>
<p><strong>定理1 乘法公式</strong> 设 <span
class="math inline">\(A_1,A_2,\cdots,A_n\)</span> 是试验 <span
class="math inline">\(E\)</span> 的若干事件, 且 <span
class="math inline">\(P(A_1,\cdots,A_n)&gt;0,\)</span> 则 <span
class="math display">\[
P\left(\prod_{k=1}^n
A_k\right)=\prod_{k=1}^{n}P\left(A_k\left|\prod_{j=1}^{k-1}A_j\right.\right).
\]</span> <span class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF</em></strong> 从最后一个用乘法公式 <span
class="math inline">\(P(AB)=P(B)P(A|B)\)</span> 逐步展开: <span
class="math display">\[
\begin{aligned}P\left(\prod_{k=1}^n A_k\right)&amp;=P(A_1\cdots
A_{n-1})P(A_n|A_1\cdots A_{n-1})\\&amp;=P(A_1\cdots
A_{n-2})P(A_{n-1}|A_1\cdots A_{n-2})P(A_n|A_1\cdots
A_{n-1})\\&amp;=\cdots\\&amp;=\prod_{k=1}^{n}P\left(A_k\left|\prod_{j=1}^{k-1}A_j\right.\right).\end{aligned}
\]</span> <span class="math inline">\(\blacksquare\)</span></p>
<h2 id="独立性">独立性</h2>
<p>在条件概率中举的掷骰子的例子中，我们计算出了 <span
class="math inline">\(P(A|B)=2/3,\)</span>
若无“掷出奇数点”这一条件，掷出素数点的概率为 <span
class="math inline">\(P(A)=1/2&lt;2/3,\)</span> 这表明事件 <span
class="math inline">\(B\)</span> 的发生对事件 <span
class="math inline">\(A\)</span> 的发生起了“促进作用”，<span
class="math inline">\(B\)</span> 影响到了 <span
class="math inline">\(A\)</span> 的发生，这反映了 <span
class="math inline">\(A,B\)</span>
之间存在着一定关系。于是自然的，若事件 <span
class="math inline">\(B\)</span> 的发生对事件 <span
class="math inline">\(A\)</span> 的发生无任何影响，应该有 <span
class="math inline">\(P(A|B)=P(A),\)</span> 这意味着事件 <span
class="math inline">\(A,B\)</span>
之间互不影响（因为我们很容易从该式中推出 <span
class="math inline">\(P(B|A)=P(B)\)</span> ）, 我们称 <span
class="math inline">\(A,B\)</span> 两事件独立,同时可以推出 <span
class="math display">\[
P(AB)=P(A)P(B).
\]</span> 上式被称为"<strong>概率的乘法定理</strong>",
用它来刻画独立性要比用 <span class="math inline">\(P(A|B)=P(A)\)</span>
更胜一筹, 因为使用后者还需要考虑 <span
class="math inline">\(P(B)\)</span> 是否为零的问题. 它可以推广:
若从若干事件 <span class="math inline">\(A_1,A_2,\cdots\)</span>
中<strong>任意取出</strong> <span class="math inline">\(n\)</span> 个
(有限个) 事件 <span
class="math inline">\(A_{k_1},A_{k_2},\cdots,A_{k_n},\)</span>
且它们满足 <span class="math display">\[
P\left(\prod_{i=1}^{n}A_{k_i}\right)=\prod_{i=1}^nP(A_{k_i}),
\]</span> 则称 <span class="math inline">\(A_1,A_2,\cdots\)</span>
<strong>相互独立</strong>.</p>
<p>若要验证 <span class="math inline">\(n\)</span> 个事件相互独立,
则要验证 <span class="math inline">\(2^n-n-1\)</span> 个等式成立.
这一结果来自于下面的式子: <span class="math display">\[
\sum_{k=2}^n\binom{n}{k},
\]</span> 即要满足任意的 <span class="math inline">\(k(k\ge 2)\)</span>
个事件相互独立.</p>
<p><strong>推论1</strong> 用一个A简单的例子来说明推论1: 设 <span
class="math inline">\(A_1,\cdots,A_6\)</span> 相互独立, 则 <span
class="math inline">\(B_1=A_1+A_2,B_2=A_3A_4A_5\)</span> 也相互独立.
<span class="math inline">\(\square\)</span></p>
<p><strong>推论2 (置换原理)</strong> 若事件 <span
class="math inline">\(A_1,A_2,\cdots,A_n\)</span> 相互独立,
则把其中任意事件改为其对立事件后得到的这 <span
class="math inline">\(n\)</span> 个事件仍然相互独立. <span
class="math inline">\(\square\)</span></p>
<p>推论2证明起来思路比较简单, 但是比较繁琐, 在此不作证明. 推论2是在说,
若两个事件相互独立,
那么其中一个事件发生与否对另一个事件的发生都<strong><em>没有影响</em></strong>.</p>
<p><strong>推论3</strong> 若 <span
class="math inline">\(0&lt;P(A),P(\bar{A})&lt;1,\)</span> 且 <span
class="math inline">\(P(B|A)=P(B|\bar{A}),\)</span> 则 <span
class="math inline">\(A,B\)</span> 相互独立. <span
class="math inline">\(\square\)</span></p>
<p>推论3直观理解起来比较简单, 即 <span class="math inline">\(A\)</span>
是否发生对 <span class="math inline">\(B\)</span> 的发生没有影响,
可以推知 <span class="math inline">\(A,B\)</span> 相互独立.
若要做数学推导也比较简单, 把 <span
class="math inline">\(\bar{A}\)</span> 都换掉就好了: <span
class="math display">\[
P(AB)/P(A)=P(B\bar{A})/P(\bar{A})\Rightarrow
P(AB)(1-P(A))=(P(B)-P(BA))P(A)
\]</span> 整理即得答案. <span
class="math inline">\(\blacksquare\)</span></p>
<p><strong><em>REMARK</em></strong> 1) 一般情况下, 若 <span
class="math inline">\(A,B\)</span> 相互独立, 在另一个事件 <span
class="math inline">\(C\)</span> 发生的条件下 <span
class="math inline">\(A,B\)</span> 就不一定相互独立了, 比如在 <span
class="math inline">\(C\)</span> 发生的条件下 <span
class="math inline">\(A,B\)</span> 互斥, 此时满足 <span
class="math inline">\(C(AB)=\emptyset.\)</span></p>
<ol start="2" type="1">
<li><p><strong><em>(相互独立与两两独立)</em></strong> 两两独立的定义是,
在一些事件 <span class="math inline">\(A_1,A_2,\cdots\)</span> 中,
若任意两个事件都独立, 则称它们两两独立.需要注意的是,
相互独立是两两独立的充分不必要条件. 举个例子, 对于抛掷甲乙两枚四面标有
<span class="math inline">\(1,2,3,4\)</span> 的正四面体骰子这一实验, 记
<span class="math inline">\(A=\{甲向下的一面是偶数\},\)</span> <span
class="math inline">\(B=\{乙向下的一面是奇数\},\)</span> <span
class="math inline">\(C=\{甲乙向下的一面奇偶性相同\},\)</span>
直观上考虑, <span class="math inline">\(A,B,C\)</span> 是两两独立的,
因为甲朝下那一面不会对乙朝下那一面产生什么影响,
甲乙向下的那一面奇偶性是否相同也不会影响甲朝下那一面的奇偶性等等.
利用古典概型也很容易求出 <span
class="math inline">\(P(A)=P(B)=P(C)=1/2,\)</span> <span
class="math inline">\(P(AB)=P(BC)=P(AC)=1/4,\)</span>
这验证了我们的直觉. 但是显然 <span
class="math inline">\(P(ABC)=P(\emptyset)=0\ne
P(A)P(B)P(C).\)</span></p></li>
<li><p>(<strong><em>独立与无关</em></strong>)
两个事件相互独立是概率意义上的陈述, 并不意味着两个事件"无关". 当然,
若两个事件无关, 那么两个事件相互独立, 但是反过来不能这么说. 举个例子:
连续抛掷两枚硬币, 对于事件 <span class="math inline">\(A\)</span>
"第一次出现正面"和事件 <span class="math inline">\(B\)</span>
"至少出现一次正面", 经过计算可以得到 <span
class="math inline">\(P(A)=P(B)=1/2,P(AB)=1/4,\)</span>
这意味着两个事件相互独立, 但显然两个事件是有关联的.</p></li>
<li><p>互斥的两个事件不能相互独立, 除非这两个事件的一个概率为 <span
class="math inline">\(1,\)</span> 另一个为 <span
class="math inline">\(0.\)</span></p></li>
</ol>
<p><strong>例4</strong> 甲乙进行比赛. 设任意一局比赛甲赢的概率为 <span
class="math inline">\(a,\)</span> 乙赢的概率为 <span
class="math inline">\(b,\)</span> 不考虑平局出现的可能性, 即 <span
class="math inline">\(a+b=1,\)</span> 且有 <span
class="math inline">\(a&gt;b.\)</span> 规定甲赢的条件为:
甲连续胜三局且在此之前乙从未连续胜过两局; 乙赢的条件为:
乙连胜两局且在此之前甲从未连胜过三局. 求甲,
乙分别赢得最终的比赛的概率.</p>
<p><strong><em>SOL</em></strong> 记每一局甲胜为事件 <span
class="math inline">\(X,\)</span> 乙胜为事件 <span
class="math inline">\(Y,\)</span> <span
class="math inline">\(X,Y\)</span> 相互独立. 我们先考虑甲赢得最终比赛,
记为事件 <span class="math inline">\(A\)</span>. 此时有两种情况,
第一局甲胜或第一局乙胜, 记为子事件 <span
class="math inline">\(A_1,A_2\)</span>. 当第一局是甲胜时,
则比赛结果必然是由若干 <span class="math inline">\(XY,XXY\)</span>
以及一个 <span class="math inline">\(XXX\)</span> 组成的,
每个阶段相互独立; 且 <span
class="math inline">\(P(XY)=ab=p_1,P(XYY)=ab^2=p_2,\)</span>
设除了最后一个阶段 <span class="math inline">\(XXX\)</span> 外有 <span
class="math inline">\(n\)</span> 个阶段, 则 <span
class="math display">\[
P_n=a^3\sum_{k=0}^n\binom{n}{k}
p_1^kp_2^{n-k}=a^3(p_1+p_2)^n=a^3(ab+ab^2)^n
\]</span> 显然 <span class="math inline">\(n\)</span> 可以从 <span
class="math inline">\(0\)</span> 取到 <span
class="math inline">\(+\infty,\)</span> 且 <span
class="math inline">\(ab+ab^2&lt;\frac{3}{4}a&lt;1,\)</span> 于是 <span
class="math display">\[
P(A_1)=\sum_{n=0}^{\infty}P_n=\frac{a^3}{1-ab-ab^2}.
\]</span> 而第一局是乙胜时, 比赛结果必然是由若干 <span
class="math inline">\(YX,YXX\)</span> 以及一个 <span
class="math inline">\(YXXX\)</span> 组成的, 每个阶段相互独立,
求解类似上述过程, 有 <span class="math display">\[
P(A_2)=\frac{a^3b}{1-ab-a^2b}.
\]</span> 两者相加即可. 对于乙分析也类似, 但实际上可以直接用 <span
class="math inline">\(P(B)=1-P(A)\)</span> 来求. <span
class="math inline">\(\square\)</span></p>
<h2 id="全概率公式与bayes公式">全概率公式与Bayes公式</h2>
<p><strong>定理2 全概率公式</strong> 设事件 <span
class="math inline">\(E\)</span> 的样本空间为 <span
class="math inline">\(\Omega,\)</span> <span
class="math inline">\(B_1,B_2,\cdots,B_n\)</span> 是 <span
class="math inline">\(\Omega\)</span> 的一个有限划分, 事件 <span
class="math inline">\(A\subset \Omega,\)</span> 则有 <span
class="math display">\[
\boxed{P(A)=\sum_{1\le k\le n}P(B_k)P(A|B_k).}
\]</span> <strong><em>PROOF</em></strong> 显然 <span
class="math inline">\(B_1,B_2,\cdots,B_n\)</span> 相互独立, 则 <span
class="math inline">\(AB_1,AB_2,\cdots,AB_n\)</span> 相互独立, 因此
<span class="math display">\[
\begin{aligned}P(A)&amp;=P(A\Omega)\\ &amp;=P(A(B_1\cup \cdots\cup
B_n))\\&amp;=P(AB_1\cup\cdots\cup AB_n)\\&amp;=\sum_{1\le k\le
n}P(AB_k)\\&amp;=\sum_{1\le k\le n}P(B_k)P(A|B_k)\end{aligned}
\]</span> <span class="math inline">\(\blacksquare\)</span></p>
<p>一种理解全概率公式的方式为: 把事件 <span
class="math inline">\(B_i\)</span> 当作导致事件 <span
class="math inline">\(A\)</span> 发生的原因, 即事件 <span
class="math inline">\(A\)</span> 发生总要以某个事件 <span
class="math inline">\(B_i\)</span> 为途径 , 对于不同途径, 条件概率 <span
class="math inline">\(P(A|B_i)\)</span> 也各不相同,
采用哪个途径也完全是<strong>随机</strong>的, 于是事件 <span
class="math inline">\(A\)</span> 发生是通过途径 <span
class="math inline">\(B_i\)</span> 的概率为 <span
class="math inline">\(P(B_i),\)</span> 而事件 <span
class="math inline">\(A\)</span> 通过途径 <span
class="math inline">\(B_i\)</span> 发生(即在事件 <span
class="math inline">\(B_i\)</span> 发生的条件下) 的概率为 <span
class="math inline">\(P(A|B_i),\)</span>
那么我们可以像求数学期望那样(或者直观感受), 把 <span
class="math inline">\(P(B_i)\)</span> 作为 <span
class="math inline">\(P(A|B_i)\)</span> 的权重, 作为 <span
class="math inline">\(P(A)\)</span> 的一部分, 即 <span
class="math inline">\(P(A)\)</span> 为 <span
class="math inline">\(P(A|B_i)\)</span> 以 <span
class="math inline">\(P(B_i)(i=1,2,\cdots)\)</span> 为权重的加权平均 ,
从而可以得到全概率公式.</p>
<p>全概率公式常用在预测推断中，又称为<strong>事前概率</strong>。</p>
<p><strong><em>REMARK</em></strong>:
需要注意的是，全概率公式不总是需要用 <span
class="math inline">\(\Omega\)</span> 的有限划分，事实上，若存在互斥的
<span class="math inline">\(k\)</span> 个事件 <span
class="math inline">\(B_1,\cdots,B_k\)</span> 满足 <span
class="math inline">\(A\subset \bigcup_{1\le i\le k}B_i,\)</span>
那么在全概率公式中我们只需要用 <span
class="math inline">\(B_1,\cdots,B_k\)</span> 而不需要用 <span
class="math inline">\(\Omega\)</span> 的有限划分。</p>
<p><strong>定理3 Bayes公式</strong> 利用 <span
class="math inline">\(P(AB_i)=P(A)P(B_i|A)=P(B_i)P(A|B_i)\)</span>
以及全概率公式可得: <span class="math display">\[
\boxed{\begin{aligned}P(B_i|A)&amp;=\frac{P(AB_i)}{P(A)}\\&amp;=\frac{P(B_i)P(A|B_i)}{\sum_{j=1}^nP(B_j)P(A|B_j)}\end{aligned}}
\]</span> 这是所谓的Bayes公式. <span
class="math inline">\(\square\)</span></p>
<p>从形式推导来看, Bayes公式平平无奇, 但是它的现实意义是很深刻的.</p>
<p>像上面理解全概率公式那样, 若把事件 <span
class="math inline">\(A\)</span> 看作"结果", 事件 <span
class="math inline">\(B_1,B_2,\cdots\)</span> 看作导致事件 <span
class="math inline">\(A\)</span> 发生的原因，现在有一个结果 <span
class="math inline">\(A\)</span> 发生了, 我们想要知道在众多可能导致
<span class="math inline">\(A\)</span> 发生的原因中是哪一个导致 <span
class="math inline">\(A\)</span> 发生的，或者说,
哪个原因<strong>更可能</strong>导致事件 <span
class="math inline">\(A\)</span> 的发生? Bayes公式告诉了我们, 在 <span
class="math inline">\(A\)</span> 发生的条件下, 是某个原因 <span
class="math inline">\(B_i\)</span> 导致 <span
class="math inline">\(A\)</span> 发生的概率大小.
<strong>在结果已经发生的条件下,
去找出最有可能导致它发生的原因.</strong></p>
<h2 id="习题">习题</h2>
<p>1: 若假定一年按 <span class="math inline">\(365\)</span> 天记, 求
<span class="math inline">\(r\)</span>
各人中至少有两个人生日相同的概率(记此事件为 <span
class="math inline">\(A\)</span>).</p>
<p><strong><em>SOL</em></strong> 记样本空间为 <span
class="math inline">\(\Omega,\)</span> 由乘法原理可知, 每个人的生日都有
<span class="math inline">\(365\)</span> 中情况, 于是 <span
class="math inline">\(|\Omega|=365^r,\)</span> 考虑要求的事件的反面,
即所有人生日都不相同, 于是 <span
class="math inline">\(|\overline{A}|=\binom{365}{r}r!.\)</span> 于是
<span class="math display">\[
P(A)=1-P(\overline{A})=1-\frac{\binom{365}{r}r!}{365^r}=1-\frac{365!}{(365-r)!365^r}=1-\prod_{1\le
k\le r-1}\left(1-\frac{k}{365}\right)
\]</span> 当 <span class="math inline">\(r=50\)</span> 时 <span
class="math inline">\(P(A)\approx 0.9651,\)</span> 这似乎很出乎意料,
因为这意味着只要有五十个人就<em>极有可能</em>出现两个人生日相同,
而与我们的直觉(即这五十个人的生日应该均匀分布在这 <span
class="math inline">\(365\)</span> 天中) 相悖.
这是因为每个人的出生日期对别人的出生日期并无影响,
所以容易产生随机扎堆.</p>
<p><span class="math inline">\(\square\)</span></p>
<p>2: (Buffon投针问题) 平面上画满了间距为 <span
class="math inline">\(a\)</span> 的平行线, 向该平面随机投掷一枚长为
<span class="math inline">\(\ell(\ell&lt;a)\)</span> 的针,
求针与直线相交的概率.</p>
<p><strong><em>SOL</em></strong> 记针与直线相交为事件 <span
class="math inline">\(A,\)</span> 设针与直线的夹角为 <span
class="math inline">\(\theta(0\le \theta\le \pi),\)</span>
针的中点到最近的一条直线的距离为 <span class="math inline">\(x,\)</span>
显然有 <span class="math inline">\(0\le x&lt;a/2.\)</span>
现在针的状态可由序偶 <span class="math inline">\((x,\theta)\)</span>
唯一确定, 我们可以在 <span class="math inline">\(\theta Ox\)</span>
平面上讨论这个问题, 这就转化成了度量为面积的几何概型问题,
现在只需要确定针与直线相交时 <span
class="math inline">\((x,\theta)\)</span> 所形成的图形即可.</p>
<p>于是 <span class="math inline">\(\Omega=\{(x,\theta)\mid 0\le
x&lt;a/2,0\le \theta\le \pi\},\)</span> <span
class="math inline">\(A=\{(x,\theta)\in\Omega\mid
x&lt;\frac{\ell}{2}\sin\theta\}.\)</span> 显然集合 <span
class="math inline">\(\Omega\)</span> 所形成的图形为矩形, <span
class="math inline">\(|\Omega|=\frac{a}{2}\pi,\)</span> <span
class="math inline">\(A\)</span> 为曲线 <span
class="math inline">\(x=\frac{\ell}{2}\sin\theta\)</span> 与直线 <span
class="math inline">\(x=0\)</span> 围成的区域, 于是 <span
class="math display">\[
|A|=\int_0^\pi\frac{\ell}{2}\sin\theta\mathrm{d}\theta=\ell.
\]</span> 这是几何概型, 于是 <span class="math display">\[
P(A)=\frac{|A|}{|\Omega|}=\frac{2\ell}{a\pi}.
\]</span> 这种做法实际上是将整个平面投影到了垂直于平行线的一条直线上,
把二维的问题转化为了一维的问题(即长度确定的一个随机的区间能够包含某些点的概率).</p>
<p>Buffon投针问题可用于估计 <span class="math inline">\(\pi\)</span>
的值. <span class="math inline">\(\square\)</span></p>
<p>3：（抽签具有公平性）设袋子中有 <span
class="math inline">\(n\)</span> 个红球, <span
class="math inline">\(m\)</span> 个白球, 有 <span
class="math inline">\(N(N&lt;n)\)</span> 人依次不放回地各取出一个球,
记第 <span class="math inline">\(k\)</span> 个人取到红球为事件 <span
class="math inline">\(A_k,\)</span> 证明 <span
class="math inline">\(P(A_k)=n/(m+n),k=1,\cdots,N.\)</span></p>
<p><strong><em>PROOF1</em></strong> 设前 <span
class="math inline">\(k-1\)</span> 个人中有 <span
class="math inline">\(\ell(0\le\ell\le k-1)\)</span> 个人取到了白球, 这
<span class="math inline">\(\ell\)</span> 个人取白球的总情况数为 <span
class="math inline">\(P(m,\ell),\)</span> 剩余的连同第 <span
class="math inline">\(k\)</span> 个取到红球的人这 <span
class="math inline">\(k-\ell\)</span> 个人的取法为 <span
class="math inline">\(P(n,k-\ell),\)</span> 则 <span
class="math display">\[
\begin{aligned}
|A_k|
&amp;=\sum_{\ell=0}^{k-1}\binom{k-1}{\ell}P(n,k-\ell)P(m,\ell)\\
&amp;=\sum_{\ell=0}^{k-1}\frac{(k-1)!}{\ell!(k-1-\ell)!}\cdot\frac{n!}{(n-k+\ell)!}\cdot\frac{m!}{(m-\ell)!}\\
&amp;=n(k-1)!\sum_{\ell=0}^{k-1}\frac{(n-1)!}{(n-k+\ell)!(k-1-\ell)!}\cdot\frac{m!}{(m-\ell)!\ell!}\\
&amp;=n(k-1)!\sum_{\ell=0}^{k-1}\binom{n-1}{k-1-\ell}\binom{m}{\ell}\\
\end{aligned}
\]</span> 且 <span class="math display">\[
|\Omega|=P(n+m,k)=\frac{(n+m)!}{(n+m-k)!},
\]</span> 于是 <span class="math display">\[
\begin{aligned}
P(A_k)=\frac{|A_k|}{|\Omega|}&amp;
=\frac{n(k-1)!\sum_{\ell=0}^{k-1}\binom{n-1}{k-1-\ell}\binom{m}{\ell}}{\frac{(n+m)!}{(n+m-k)!}}\\
&amp;=\frac{n}{m+n}\cdot\frac{\sum_{\ell=0}^{k-1}\binom{n-1}{k-1-\ell}\binom{m}{\ell}}{\frac{(n+m-1)!}{(n+m-k)!(k-1)!}}\\
&amp;=\frac{n}{m+n}\cdot\textcolor{blue}{\frac{\sum_{\ell=0}^{k-1}\binom{n-1}{k-1-\ell}\binom{m}{\ell}}{\binom{n+m-1}{k-1}}}\\
\end{aligned}
\]</span> 下面证明蓝色部分为 <span class="math inline">\(1\)</span>
即下面的等式: <span class="math display">\[
\binom{n+m-1}{k-1}=\sum_{\ell=0}^{k-1}\binom{n-1}{k-1-\ell}\binom{m}{\ell},
\]</span> 这等价于证明 <span class="math display">\[
\binom{n+m}{k}=\sum_{\ell=0}^{k}\binom{n}{k-\ell}\binom{m}{\ell},
\]</span> 考虑其组合意义, 等式左边为从 <span
class="math inline">\(n+m\)</span> 个物品中取 <span
class="math inline">\(k\)</span> 个的取法总数; 而我们可以将这 <span
class="math inline">\(n+m\)</span> 个物品分成数量分别为 <span
class="math inline">\(n\)</span> 和 <span
class="math inline">\(m\)</span> 的两部分, 并从数量为 <span
class="math inline">\(m\)</span> 的那堆物品中取 <span
class="math inline">\(\ell\)</span> 个并从数量为 <span
class="math inline">\(n\)</span> 的那堆物品中取 <span
class="math inline">\(k-\ell\)</span> 个, 其中 <span
class="math inline">\(\ell\)</span> 取遍 <span
class="math inline">\(0\)</span> 和 <span
class="math inline">\(k\)</span> 之间的整数, 这两种取法显然是等价的,
且第二种取法可以写成等式右边的式子. 这就证得了该等式, 从而得到 <span
class="math display">\[
P(A_k)=\frac{n}{n+m}.
\]</span> <span class="math inline">\(\square\)</span></p>
<p>其实上述过程偏麻烦了, 计算 <span class="math inline">\(|A_k|\)</span>
还可以采用下面的方法.</p>
<p><strong><em>PROOF2</em></strong></p>
<p>第 <span class="math inline">\(k\)</span> 个人取的红球可以是 <span
class="math inline">\(n\)</span> 个红球的<strong>任意一个</strong><a
href="#fn4" class="footnote-ref" id="fnref4"
role="doc-noteref"><sup>4</sup></a>, 前 <span
class="math inline">\(k-1\)</span> 个人取的 <span
class="math inline">\(k-1\)</span> 个球可以是 <span
class="math inline">\(m+n-1\)</span> 个球中的任意 <span
class="math inline">\(k-1\)</span> 个, 于是 <span
class="math inline">\(|A_k|=nP(m+n-1,k-1),\)</span> 因此 <span
class="math display">\[
P(A_k)=\frac{nP(m+n-1,k-1)}{P(m+n,k)}=\frac{n}{m+n}.
\]</span> <span class="math inline">\(\square\)</span></p>
<p>实际上不用列公式就能解决这问题:</p>
<p><strong><em>PROOF3</em></strong> 在抽前 <span
class="math inline">\(k-1\)</span> 个球时不揭晓抽出的结果,
这相当于这些球被放到后面再抽了, 此时再拿第 <span
class="math inline">\(k\)</span> 个球并揭晓第 <span
class="math inline">\(k\)</span> 个球的结果, 这相当于是第一个抽的球,
是红球的概率自然是 <span class="math inline">\(n/(n+m).\)</span> <span
class="math inline">\(\square\)</span></p>
<p><strong><em>PROOF4</em></strong> 设 <span
class="math inline">\(B_j=\{前k-1个人取走了j个红球\},0\le j\le
k-1.\)</span> 利用全概率公式得 <span class="math display">\[
P(A_k)=\sum_{j=0}^{k-1}P(B_j)P(A_k|B_j)
\]</span> 计算 <span class="math inline">\(P(B_j)\)</span> 时可以采用
<strong><em>PROOF1</em></strong> 的方法, 最后得到的式子也是一样的.
也可以不关注顺序， 将其看作一个组合的问题：</p>
<p>4: (树形图的应用) 两架飞机进行空战，甲机首先开火，击落乙机的概率为
<span
class="math inline">\(0.2\)</span>，若乙机未被击落，进行还击，击落甲机的概率为
<span
class="math inline">\(0.3\)</span>，若甲机又未被击落，它再次向乙机开火，并击落它的概率为
<span class="math inline">\(0.4\)</span>。试求这几个回合中</p>
<ol type="1">
<li>甲机被击落的概率 <span class="math inline">\(p_1\)</span>； (2)
乙机被击落的概率 <span class="math inline">\(p_2\)</span>.</li>
</ol>
<figure>
<img src="1663830101444.png" alt="1663830101444" />
<figcaption aria-hidden="true">1663830101444</figcaption>
</figure>
<ol start="3" type="1">
<li>若第 <span class="math inline">\(k\)</span>
个回合开火的一方击落另一方的概率为 <span
class="math inline">\(q_k,\)</span> 且 <span
class="math inline">\(\{q_n\}_{n\ge 1}\)</span> 递增, 甲先开火,
求甲、乙分别被击落的概率.</li>
</ol>
<blockquote>
<p>对于多次的且有某些终止条件的试验树形图有时候会很有用。</p>
</blockquote>
<p><strong><em>SOL</em></strong> 设 <span
class="math inline">\(A_{k}=\{乙在第k回合中被击落\},\)</span> <span
class="math inline">\(B_{k}=\{甲在第k回合被击落\},\)</span> 于是</p>
<p>5: Network Connectivity A computer network connects two nodes <span
class="math inline">\(A\)</span> and <span
class="math inline">\(B\)</span> through intermediate nodes <span
class="math inline">\(C, D, E, F\)</span>, as shown in following Fig.
For every pair of directly connected nodes. say <span
class="math inline">\(i\)</span> and <span
class="math inline">\(j\)</span>, there is a given probability <span
class="math inline">\(p_{i j}\)</span> that the link from <span
class="math inline">\(i\)</span> to <span
class="math inline">\(j\)</span> is up. We assume that link failures are
independent of each other. What is the probability that there is a path
connecting <span class="math inline">\(A\)</span> and <span
class="math inline">\(B\)</span> in which all links are up?</p>
<p><strong><em>SOL</em></strong></p>
<p>将其看作若干个并联系统与串联系统的组合. <span class="math display">\[
A\to B=(A\to C\to B)\cup (A\to D\to B)
\]</span></p>
<p><span class="math display">\[
P(A\to B)=1-(1-P(A\to C\to B))(1-P(A\to D\to B))
\]</span></p>
<p><span class="math display">\[
C\to B=(C\to E\to B)\cup(C\to E\to B)
\]</span></p>
<p><span class="math display">\[
P(C\to B)=1-(1-P(C\to E\to B))(1-P(C\to E\to B))
\]</span></p>
<figure>
<img src="1664262782167.png" alt="1664262782167" />
<figcaption aria-hidden="true">1664262782167</figcaption>
</figure>
<p>6:</p>
<figure>
<img src="1664264362307.png" alt="1664264362307" />
<figcaption aria-hidden="true">1664264362307</figcaption>
</figure>
<p><strong><em>SOL</em></strong> 根据3的状态分类讨论,
便可将剩余的部分化成串联与并联的组合.</p>
<p>记正常工作为 <span class="math inline">\(A,\)</span> 元件 <span
class="math inline">\(i\)</span> 能正常工作为 <span
class="math inline">\(B_i.\)</span> 由全概率公式可得 <span
class="math display">\[
P(A)=P(B_3)P(A|B_3)+P(\overline{B_3})P(A|\overline{B_3})
\]</span> 计算 <span class="math inline">\(P(A|B_3)\)</span> 时,
电路可看作 <span class="math inline">\(1,2\)</span> 并联, <span
class="math inline">\(4,5\)</span> 并联, 这两者再串联, 于是 <span
class="math display">\[
P(A|B_3)=[1-(1-P(B_1))(1-P(B_2))][1-(1-P(B_4))(1-P(B_5))]=(1-0.1^2)^2
\]</span> 计算 <span class="math inline">\(P(A|\overline{B_3})\)</span>
时, 电路可看作 <span class="math inline">\(1,2\)</span> 串联, <span
class="math inline">\(4,5\)</span> 串联, 两者再并联, 于是 <span
class="math display">\[
P(A|\overline{B_3})=1-(1-P(B_1)P(B_2))(1-P(B_4)P(B_5))=1-(1-0.9^2)^2
\]</span> 因此 <span class="math display">\[
P(A)=0.9\times(1-0.1^2)^2+0.1\times(1-(1-0.9^2)^2).
\]</span> <span class="math inline">\(n\)</span> 个元件串联 <span
class="math display">\[
p_1p_2\cdots p_n
\]</span> <span class="math inline">\(n\)</span> 个元件并联 <span
class="math display">\[
1-(1-p_1)(1-p_2)\cdots (1-p_n)
\]</span></p>
<aside id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>这个定义是陈教材上的定义, 此时还没有基本事件的概念,
并且陈的教材上并无"样本空间"这个词. 补充前面的定义后,
古典概率的定义也可以直接写为 <span
class="math inline">\(P(A)=|A|/|\Omega|.\)</span><a href="#fnref1"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>事件列表示这些事件是"可列的"或"可数的",
至于"可列"是什么意思, 待我查阅一番.<a href="#fnref2"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>这句话是不对的, 因为 <span
class="math inline">\(A\)</span> 可能是无穷集合,
容斥原理不适用于无穷集合的情况. 目前还没找到好的解释.<a href="#fnref3"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>因为每个人都不知道自己拿的是什么球,
可以认为每个人都是"随便拿的", 拿到的球自然是任意的了.<a href="#fnref4"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</aside>
]]></content>
      <categories>
        <category>Math</category>
        <category>probability theory</category>
      </categories>
  </entry>
  <entry>
    <title>Advanced Informed Search</title>
    <url>/2023/08/11/seminar/august2023/advanced-informed-search/</url>
    <content><![CDATA[<p>当我们想要用搜索解决一个问题时, 通常有下述手段可以使用:</p>
<ol type="1">
<li>Search Information. 主要是 branch 的方式.</li>
<li>Search Strategy. 主要是搜索的方式, 包括 回溯, DFS, BFS, <span
class="math inline">\(\rm A^*, IDA^*,SMA^*\)</span> 等, 具体内容在<a
href="https://baoduoxu.github.io/2023/07/29/seminar/july2023/search-strategy/">这篇文章</a>中有介绍.</li>
<li>Bound Techniques. 包括 upper bound 和 lower bound,
一般是通过弱化/加强条件,
放缩松弛(线性规划技术)以及启发式等方法来获取原问题解的上下界,
这些解本身可以直接使用, 也可以用作搜索过程中的剪枝.</li>
<li>Decomposition Techniques.</li>
<li>Techniques for deciding which question to branch on.</li>
<li>Techniques for indentifying and solving tractable subproblems at
each node.</li>
<li>Random restart techniques. 当搜索花费了相当长的时间时,
可以随机选择一个问题来 branching 继而重新尝试搜索. 一般没什么用处.</li>
<li>Caching Techniques. 存储一些子问题,
如果在后续的搜索过程中再次遇到这些子问题就直接取其解而不需要再求解.
一般的规则是: 存储经常碰到的子问题; 存储需要耗费了大量搜索代价的子问题;
存储可以被快速检索到的子问题.</li>
</ol>
<p>值的详细介绍的是 1, 3, 4, 5, 6.</p>
<p>下面以 Winner determination problem(WDP) 为例子来进行介绍,
这个问题表述如下:</p>
<p>给定商品集 <span class="math inline">\(M=[m]\)</span> 和 bid 集合
<span class="math inline">\(\mathcal{B}=\{B_1,\cdots,B_n\}\)</span>,
其中第 <span class="math inline">\(j\)</span> 个竞标 bid <span
class="math inline">\(B_j\)</span> 为二元组 <span
class="math inline">\((S_j,p_j)\)</span>, <span
class="math inline">\(S_j\subset M\)</span> 是商品的集合, <span
class="math inline">\(p_j\)</span> 为价格, 表示第 <span
class="math inline">\(j\)</span> 个 bid 出价 <span
class="math inline">\(p_j\)</span> 来拍卖 <span
class="math inline">\(B_j\)</span> 中的所有商品. WDP
要求选择最优的竞标集使得商品拍卖的总价格最大.</p>
<p>这实际上是一个带权独立集的问题, 即将 <span
class="math inline">\(S_j\)</span> 作为无向图 <span
class="math inline">\(G=(V,E)\)</span> 的顶点 <span
class="math inline">\(v_j\)</span>, 则 <span
class="math inline">\(|V|=n\)</span>, 每个顶点有点权 <span
class="math inline">\(p_j\)</span>, 若商品 <span
class="math inline">\(i\)</span> 满足 <span class="math inline">\(i\in
S_j\land i\in S_k\)</span> 则 <span class="math inline">\((v_j,v_k)\in
E\)</span>, 那么 WDP 就是求 <span class="math inline">\(G\)</span>
的最大权独立集.</p>
<h1 id="branch">Branch</h1>
]]></content>
  </entry>
  <entry>
    <title>搜索策略</title>
    <url>/2023/07/29/seminar/july2023/search-strategy/</url>
    <content><![CDATA[<p>一个well-defined的搜索问题包括下面的组成部分：</p>
<ul>
<li>初始状态</li>
<li>操作算子: 用于状态转换</li>
<li>目标</li>
<li>路径代价函数</li>
</ul>
<p>即从初始状态出发, 扫描操作算子集,
选取适当的操作算子作用在初始状态上得到新的状态,
新的状态满足目标时终止搜索, 反之以新的状态作为当前状态;
如果最终还需要搜索路径, 那么就在搜索的时候维护搜索树中每个状态的父节点.
在搜索过程中, 我们关注能否找到解, 解的质量, 时空复杂度.</p>
<p>根据搜索方向, 搜索策略可以分为正向搜索和逆向搜索:</p>
<ul>
<li>正向搜索: 实际上就是上面所叙述的搜索过程.</li>
<li>逆向搜索: 当操作算子可逆时, 可以从目标出发,
寻找<strong>能产生该目标的操作算子</strong>以及<strong>产生该操作算子需要的条件</strong>.
按照该策略不断进行, 直到找到问题给定的条件即可.</li>
</ul>
<p>根据搜索过程中是否用与问题有关的信息分为盲目搜索和启发式搜索,
启发式搜索可以看作是一种基于经验的贪心策略.</p>
<h1 id="回溯">回溯</h1>
<p>回溯策略就是从初始状态出发, 不断试探寻找可行的路径,
如果遇到了<strong>不可解点</strong>时就回溯到距离最近的父节点,
判断其是否还有其他子节点未被扩展.</p>
<blockquote>
<p>回溯等同于DFS吗?</p>
<p>如果考虑严格定义的话, DFS本身是在图这一抽象出来的结构上使用的算法;
而回溯则是在拥有上述特征的问题中使用的(或者说,
回溯是搜索问题的特征空间映射得到的的树结构上的DFS),
两者的使用场景其实不太一样. 不过在实际使用的时候,
对DFS和回溯这两个名词其实并没有做明显的区分,
在措辞表达方面可能DFS用得更多一些; 除此之外,
再深究一下回溯定义中的"遇到了不可解点就回溯"这一策略,
这实际上是一种剪枝, 即可以认为回溯相比一般的DFS多了剪枝.
反正没有必要做区分.</p>
</blockquote>
<h1 id="bfs和dfs的一些值得注意的地方">BFS和DFS的一些值得注意的地方</h1>
<p>1: BFS一定能找到最优解而DFS不一定. 这很好理解,
如果问题对应的搜索树不是有限的, 那么DFS将一直搜下去,
但显然一层一层搜索的BFS一定可以找到最优解.</p>
<p>2: 一个搜索问题必须具备某种特征才能使用BFS求解. 设 <span
class="math inline">\(g(N)\)</span> 表示从起点到节点 <span
class="math inline">\(N\)</span>
的代价(就是文章最开始的<strong>路径代价函数</strong>), 其中 <span
class="math inline">\(N\)</span> 在搜索树中的层数是 <span
class="math inline">\(d\)</span> , 那么某个问题能使用BFS求解当且仅当
<strong><span class="math inline">\(g\)</span> 关于 <span
class="math inline">\(d\)</span> 是递增的</strong>.
比较经典的例子是Dijkstra算法无法在有负权环的图上应用,
因为Dijkstra算法本质上就是BFS, 若出现了负权环,
那么就可以在负权环上一直搜索下去(搜索深度增加)而代价始终不增,
也就没有最优解了.</p>
<p>3: DFS的一些改进. 主要是迭代加深搜索, 这个很容易想到,
可能在做题的时候就不经意间使用了: 设定一个深度限制, 记录当前深度,
每迭代一次当前深度加一, 当达到限制还没有找到最优解时便回溯.</p>
<h1 id="mathrmaast-和-mathrmidaast"><span
class="math inline">\(\mathrm{A}^{\ast}\)</span> 和 <span
class="math inline">\(\mathrm{IDA}^{\ast}\)</span></h1>
<p>启发式搜索本质上是基于经验或直觉在每一步选择操作算子时都选择较优的,
达到缩小状态空间的目的. 由于严重依赖经验或直觉,
因此启发式算法往往只能得到次优解 , 甚至一无所获.</p>
<p>对于待搜索节点 <span class="math inline">\(n\)</span> ,
定义它的估价函数 <span class="math inline">\(f(n)\)</span>
表示它的"有希望"程度, 那么在搜索时就优先搜索有希望程度更大的的状态; 当然
<span class="math inline">\(f(n)\)</span> 也可以是"没希望程度",
那么就优先搜索没希望程度更小的状态, 此时搜索的过程相当于最小化 <span
class="math inline">\(f(n)\)</span> 的过程, 这与机器学习中的 loss
function 是一样的, 或者说, <span class="math inline">\(f(n)\)</span>
本身就是一个 loss function. 实现这种算法往往要使用优先队列. Dijkstra
算法是一个典型的符合该搜索过程的算法, 有时候会把上面的算法称为 A 算法.
搜索过程中碰到重复结点的处理手段类似于 Dijkstra 算法.</p>
<p>对不同的问题 <span class="math inline">\(f(n)\)</span>
的结构不尽相同, 但都可以写成 <span
class="math inline">\(f(n)=g(n)+h(n)\)</span> 的形式, 其中 <span
class="math inline">\(g(n)\)</span> 表示从起点到结点 <span
class="math inline">\(n\)</span> 搜索所耗费的实际代价,
它衡量了状态在搜索图/树中的深度, <span
class="math inline">\(h(n)\)</span> 为从结点 <span
class="math inline">\(n\)</span>
到目标状态的最佳路径的<strong>估计代价</strong>. <span
class="math inline">\(g(n)\)</span> 在搜索的过程中很容易就能确定, <span
class="math inline">\(h(n)\)</span> 需要根据题目的具体信息来设计,
不同方案会带来显著不同的效果. <span class="math inline">\(g(n)\)</span>
和 <span class="math inline">\(h(n)\)</span>
的大小决定了搜索过程中盲目搜索和基于经验的搜索所占的比例, <span
class="math inline">\(g(n)\gg h(n)\)</span>
时有利于搜索的完备性但状态空间比较大时代价会很高; <span
class="math inline">\(h(n)\gg g(n)\)</span>
时对于比较复杂的问题往往只能得到次优解但效率会有显著提升.</p>
<p>用 Dijkstra 算法求解最短路时 <span
class="math inline">\(h(n)=0\)</span>, 此时必然能找到最优解.</p>
<p>不能保证 A 算法能得到最优解, 能否加上一些条件使其必定能得到最优解呢?
<span class="math inline">\(\mathrm{A}^{\ast}\)</span> 算法是这样的算法.
设 <span class="math inline">\(h^{\ast}(n)\)</span> 表示结点 <span
class="math inline">\(n\)</span> 到目标状态的最优路径的代价,
若对所有节点 <span class="math inline">\(n\)</span> 都有 <span
class="math inline">\(h(n)\le h^{\ast}(n)\)</span> 则 A
算法必定能在有限步搜索到最优的解, 这时它称为 <span
class="math inline">\(\mathrm{A}^{\ast}\)</span> 算法.</p>
<p>值得注意的是 <span class="math inline">\(\mathrm{A}^{\ast}\)</span>
算法仍然是一类算法, 不同的启发策略仍然有优劣, 那么需要一些标准:</p>
<ul>
<li>完备性: 算法是否能在有限步能搜索到最优解. 所有的 <span
class="math inline">\(\mathrm{A}^{\ast}\)</span> 算法都满足.</li>
<li>单调性: 启发函数 <span class="math inline">\(h\)</span> 满足(1) 当
<span class="math inline">\(n_i\)</span> 是 <span
class="math inline">\(n_j\)</span> 的子节点时有 <span
class="math inline">\(h(n_i)-h(n_j)\le \mathrm{cost}(n_j,n_i)\)</span>;
(2) <span class="math inline">\(h(n_{\mathrm{goal}})=0\)</span>.</li>
<li>信息性. 当 <span class="math inline">\(h_2(n)\ge h_1(n)\)</span>
恒成立时称启发策略 <span class="math inline">\(h_2\)</span> 相比 <span
class="math inline">\(h_1\)</span> 具有更多的信息性. <span
class="math inline">\(h\)</span>
越大相当于用了题目中的更多信息来使得状态空间更小,
当然更多的信息性带来的计算代价可能会与减小状态空间所带来的益处抵消.</li>
</ul>
<p><span class="math inline">\(\mathrm{A}^{\ast}\)</span>
算法完备性的证明:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/20230730120653.png" /></p>
<p>类似于迭代加深搜索, 可以提出 Iterative-deepening <span
class="math inline">\(\mathrm{A}^{\ast}\)</span> 即 <span
class="math inline">\(\mathrm{IDA}^{\ast}\)</span>.
不同于迭代加深搜索的深度限制, <span
class="math inline">\(\mathrm{IDA}^{\ast}\)</span> 给 <span
class="math inline">\(f\)</span> 设置了一个限制 <span
class="math inline">\(f&#39;\)</span>, <span
class="math inline">\(f&#39;\)</span> 初始化为 <span
class="math inline">\(f(\mathrm{root})\)</span>, 即初始状态(根结点)
对应的估价函数值; 接着不断地以 <span
class="math inline">\(f&#39;\)</span> 作为限制进行DFS,
找到最优解则返回最优解, 否则返回所有满足 <span
class="math inline">\(f(n)&gt;f&#39;\)</span> 的 <span
class="math inline">\(f(n)\)</span> 的最小值,
或者说搜索终止边界处的结点的估价函数值中的最小值, 依次更新 <span
class="math inline">\(f&#39;\)</span>, 下面是伪代码:</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/20230730160830.png" /></p>
<p>在 <span class="math inline">\(\mathrm{IAD}^{\ast}\)</span>
的基础上对使用的内存做改进可以得到 <span
class="math inline">\(\mathrm{SMA}^{\ast}\)</span>,
基本思路是遗忘掉一些结点,
同时需要用到其他结点的估价函数值来更新当前结点的估价函数值.</p>
]]></content>
  </entry>
  <entry>
    <title>CSP</title>
    <url>/2023/08/05/seminar/august2023/csp/</url>
    <content><![CDATA[<p>CSP 是 Constraint Satisfaction Problem 的缩写,
目的是找到符合约束条件的一组解.</p>
<p>相比搜索问题, CSP 的 <strong>状态(state)</strong> 是由变量 <span
class="math inline">\(X_i\)</span> 及其定义域 <span
class="math inline">\(D_i\)</span> 定义的, <strong>目标状态(goal
test)</strong> 是一组约束, 这些约束确定了变量的取值组合.
主要思想通过寻找违反约束的变量或值组合来减少搜索空间的大小,
即做剪枝.</p>
<p>变量分为离散变量和连续变量, 离散变量的取值可以是有限集(比如
boolean)或者无限集(比如整数集或字符串).
通过约束的变量个数对约束进行分类, 包括 unary, binary以及 higher-order.
下面会更多地介绍 binary-CSP,
因为此时可以很容易地用图来描述变量之间的关系.</p>
<p>作为搜索问题的子集, 解决 CSP 的最简单的方式当然是 DFS,
或者说回溯(backtracking), 此时不关注变量赋值的顺序,
即认为变量赋值这一操作是可交换的.</p>
<p>设变量 <span class="math inline">\(X\)</span> 的值域为 <span
class="math inline">\(D_X\)</span>, 初始情况下默认 <span
class="math inline">\(|D_X|=d\)</span>. 以地图染色为例子, 设 <span
class="math inline">\(D=\{\rm red, blue, yellow\}\)</span>,
相邻的两块地图颜色需要不同, 下面是原图和抽象出来的 graph.</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308101032224.png" style="zoom:50%;" /></p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308101031614.png" style="zoom:50%;" /></p>
<h1 id="提高回溯的效率">提高回溯的效率</h1>
<p>搜索过程中需要枚举不同的变量以及变量不同的取值,
枚举的顺序实际上对效率有较大的影响, 对于下个状态选择哪个变量赋值,
给选择的变量赋哪个值, 以及能否更早地剪枝以避免不必要的搜索,
采用以下策略.</p>
<p>对于变量:</p>
<ul>
<li>Most constrained variable. 即选择"被约束得最厉害的"那个变量,
或者说合法(指不违反约束)取值数目最小的变量. 比如下图在涂过绿色之后, 城市
SA 只剩蓝色这一种选择, 那么优先给 SA 涂上蓝色.</li>
</ul>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308101035585.png" style="zoom:50%;" /></p>
<ul>
<li>Most constraining variable. 选择变量之后,
剩下的变量"被约束得最厉害", 即使剩下的变量的合法取值变得最少.
这样做的是因为所有的变量都必须被赋值, 可以更早地搜索到不成立的情形.
比如在初始状态, 城市 SA 是最好的选择, 因为 SA 的颜色确定之后, WA, NT, Q,
NSW, V 的合法取值均减一, 是减少的最多的.</li>
</ul>
<p>对于变量的取值:</p>
<ul>
<li>Least constraining value.
选择的值对剩余变量的合法取值的减少应该最小.
这样做可以减少对变量取值的尝试, 减少不必要的分支. 比如下面的情况,
应优先给 Q 涂红色而不是蓝色, 否则会导致 SA 没有合法的颜色可选.</li>
</ul>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308101038831.png" style="zoom:50%;" /></p>
<h1 id="forward-checking">Forward Checking</h1>
<p>Forward Checking 是一种进一步减少搜索树规模的技术,
在给某个变量赋值之后, 在进行下一步搜索之前,
可以根据约束先一步减少未赋值变量合法取值的数量, 这称为<strong>一次
check</strong>, 若 check 以后出现了仅剩一种取值的变量 <span
class="math inline">\(X\)</span> , 那么可以根据 <span
class="math inline">\(X\)</span>
这唯一的取值继续根据约束减少剩余变量的合法取值的数量,
这称为<strong>传播(propagation)</strong>.</p>
<p>需要注意 forward checking propagation 并不能提前检测到不成立的情形,
当传播完毕后, 搜索还需要继续进行才能确定是否要终止这一分支的搜索.</p>
<h1 id="arc-consistency">Arc Consistency</h1>
<p><strong>弧一致性检验</strong>主要是在 binary-CSP 中应用, 对于一个
binary-CSP, 以变量为顶点, 约束为弧, 构造有向图 <span
class="math inline">\(G=(V,E)\)</span>, 这里 <span
class="math inline">\(|V|\)</span> 相当于变量数, <span
class="math inline">\(|E|\)</span> 相当于约束数. 对于其中的两个变量
<span class="math inline">\(X,Y\)</span>, 若 <span
class="math inline">\(X,Y\)</span> 出现在同一约束中则 <span
class="math inline">\((X,Y)\in E\land (Y,X)\in E\)</span>, 那么弧 <span
class="math inline">\((X,Y)\)</span> 是一致的当且仅当对于任意 <span
class="math inline">\(x\in D_X\)</span> 都存在合法的 <span
class="math inline">\(y\in D_Y\)</span> 可以取到, 如果某个 <span
class="math inline">\(x\)</span> 使得所有 <span
class="math inline">\(y\in D_Y\)</span> 都不能取到, 那么这个 <span
class="math inline">\(x\)</span> 就没必要再选了, 可以直接删去, 此时
<span class="math inline">\(X\)</span> 的取值丢失了一个值后,
需要重新检查 <span class="math inline">\(X\)</span> 的邻居 .
当存在不一致的弧时, 就说明当前状态已经不满足约束, 是一个失败的状态, 算法
AC-3 可以用来找到一个状态是否存在不一致的弧.</p>
<p><img
src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308091255691.png" /></p>
<p>这个算法维护一个队列存弧, 每次取队首元素 <span
class="math inline">\((X_i,X_j)\)</span> 判断根据当前状态是否可以修改
<span class="math inline">\(X_i\)</span> 的取值 <span
class="math inline">\(D_i\)</span>, 如果修改了且 <span
class="math inline">\(X_i\)</span>
不存在合法取值就意味着找到了不一致的弧, 否则就要重新check <span
class="math inline">\(X_i\)</span> 与其邻居的弧一致性, 因此就将弧 <span
class="math inline">\((X_k,X_i)(X_k\in N(X_i)\backslash\{X_j\})\)</span>
加到队列中. 根据当前状态以及弧 <span
class="math inline">\((X_i,X_j)\)</span> 修改 <span
class="math inline">\(X_i\)</span> 的取值, 只需要删去 <span
class="math inline">\(x\in D_i\)</span> 满足 <span
class="math inline">\(\forall y\in D_j,(x,y)\)</span> 都不满足约束,
如果不存在这样的 <span class="math inline">\(x\)</span>,
则不做任何修改.</p>
<p>对于任意两个变量, 检查它们的弧一致性需要枚举两个变量的所有取值,
这一步骤的复杂度为 <span class="math inline">\(O(d^2)\)</span>, 于是
AC-3算法的复杂度为 <span class="math inline">\(O(|E|d^3)\)</span>.</p>
<p>相比 forward checking, arc consistency
可以更早地检测到当前分支的失败; 同时AC-3算法无法发现所有的不一致的弧,
比如下图的情况:</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308101043893.png" style="zoom:50%;" /></p>
<p>这显然是一种不合法的情况, 不管怎么取值都会有两个相邻的取到相邻的颜色,
但是弧一致性检验只能两两之间检验.</p>
<h1 id="k-consistency"><span
class="math inline">\(k\)</span>-consistency</h1>
<p>如果一个 CSP 问题, 对于它的任意 <span
class="math inline">\(k-1\)</span> 个变量任意地合法赋值, 第 <span
class="math inline">\(k\)</span> 个变量都存在合法的值可以被赋予,
那么就称该 CSP 问题是 <span class="math inline">\(k\)</span>-consistent
的. 显然 <span class="math inline">\(1\)</span>-consisteny 是 node
consistency, <span class="math inline">\(2\)</span>-consistency 是 arc
consistency.</p>
<h1 id="tree-structured-csps">Tree-structured CSPs</h1>
<p>当上文的 binary-CSP 对应的图 <span class="math inline">\(G\)</span>
是一棵树, 那么该 CSP 可以在 <span class="math inline">\(O(nd^2)\)</span>
的时间内解决, 而一般的 CSP 的最坏时间复杂度为 <span
class="math inline">\(O(d^n)\)</span>. 这是一个 DP 算法:</p>
<p>随机选择一个结点作为根节点,
按照拓扑排序得到一个节点序列<strong>保证父节点在子节点</strong>之前,
接着倒序遍历得到的序列, 对 <span
class="math inline">\((\mathrm{fa}(x),x)\)</span> 进行弧一致性检验,
删去一些值, 那么再正序遍历, 给每一个结点 <span
class="math inline">\(x\)</span> 赋一个与其父节点 <span
class="math inline">\(\mathrm{fa}(x)\)</span> 的值相容的值即可,
这是一定可以做到的,
因为前面做过弧一致性检验后保证了对于父节点的任意一个取值,
子结点至少有一个合法取值.</p>
<p>由于大部分图不是树形结构, 但是对于比较接近树结构的图,
我们可以在图中找到最少的点(这是NPC的),
删去这些点之后使得剩下的子图成为一颗树(比如删去城市 SA),
那么就可以用上面的算法来解决, 对于删去的点直接枚举每个点的所有取值即可,
设删去的点的数目为 <span class="math inline">\(c\)</span>, 那么复杂度为
<span class="math inline">\(O(d^c(n-c)d^2)\)</span>, 我们希望 <span
class="math inline">\(c\)</span> 比较小.</p>
<h2 id="tree-decomposition">Tree decomposition</h2>
<p>为了使用 tree-structured CSPs 的复杂度较低的算法, 除了上面的删点手段,
还可以使用 Tree decomposition,
即组合若干相邻节点称为一个"大结点"(meganode), 如下图所示,
同一个结点可以在不同的"大节点"中出现, 使 meganode 之间成为一棵树,
且要保证其赋值的一致性.</p>
<p>定义树宽为 <span class="math inline">\(w= \max
|\mathrm{meganode}|-1\)</span>, 当树宽为 <span
class="math inline">\(1\)</span> 时原图为树.</p>
<p>在 <span class="math inline">\(G\)</span> 中, 若已知 <span
class="math inline">\(\deg(v)\)</span>, 则在 tree decomposition
得到的树中, <span class="math inline">\(v\)</span> 所在的 meganode
的数量为 <span class="math inline">\(\deg(v)-1\)</span> 且这些 megenode
恰好可以连成一条 path.</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308101210596.png" style="zoom: 50%;" /></p>
<p>下面是另一个例子:</p>
<p><img src="https://raw.githubusercontent.com/baoduoxu/BlogImage/main/image/202308142052499.png" style="zoom:50%;" /></p>
<p>处理的时候先处理每个 meganode, 再使用 tree-structured CSPs
的算法处理整棵树即可. 那么复杂度为 <span
class="math inline">\(O(nd^{w+1})\)</span>, 对任意图,
找到它的最小树宽的问题是 NPC 的, 可以用启发式算法找到一个相对小的.</p>
<h1 id="local-search-for-csps">Local Search for CSPs</h1>
<p>对于一个 CSP, 可以随机给一种赋值方案, 这大概率会有违反约束的情况,
local search 指的是通过不断调整不同变量的值来消除违反约束的部分,
最后得到一个可行解.</p>
<h1 id="习题">习题</h1>
<p><strong>6.4</strong> Give precise formulations for each of the
following as constraint satisfaction problems:</p>
<ol type="a">
<li><p>Rectilinear floor-planning: find non-overlapping places in a
large rectangle for a number of smaller rectangles.</p></li>
<li><p>Class scheduling: There is a fixed number of professors and
classrooms, a list of classes to be offered, and a list of possible time
slots for classes. Each professor has a set of classes that he or she
can teach.</p></li>
<li><p>Hamiltonian tour: given a network of cities connected by roads,
choose an order to visit all cities in a country without repeating
any.</p></li>
</ol>
<blockquote>
<p>Find a permutation of <span
class="math inline">\(\{1,\cdots,n\}\)</span> such that <span
class="math inline">\(\forall j\ne k,v_{i_j}\in N(v_{i_k})\)</span>.</p>
</blockquote>
<p><strong>6.6</strong> Show how a single ternary constraint such as
“<span class="math inline">\(A + B = C\)</span>” can be turned into
three binary constraints by using an auxiliary variable. You may assume
finite domains. (Hint: Consider a new variable that takes on values that
are pairs of other values, and consider constraints such as “X is the
first element of the pair Y .”) Next, show how constraints with more
than three variables can be treated similarly. Finally, show how unary
constraints can be eliminated by altering the domains of variables. This
completes the demonstration that any CSP can be transformed into a CSP
with only binary constraints.</p>
<blockquote>
<p>这个问题最终要求证明任意的 CSP 问题都可以转化为 binary-CSP 问题.</p>
<p>根据 hint, 令 <span class="math inline">\(X=(A,B)\in D^2\)</span>,
那么约束 <span class="math inline">\(A+B=C\)</span> 可以转化为如下的三个
binary constraint: <span class="math display">\[
\begin{cases}
\langle X,(1,1)\rangle=C\\
A \text{ is the first element of }X\\
B \text{ is the second element of }X
\end{cases}
\]</span> 对于更多变量的约束, 比如 <span
class="math inline">\(f(X_1,\cdots,X_n)=0\)</span>,
当表达式为线性或者二次型时还能采用上述方法, 但是如果约束比较复杂,
还能怎么办呢?</p>
</blockquote>
<p><strong>6.13</strong> AC-3 puts back on the queue every arc <span
class="math inline">\((X_k, X_i)\)</span> whenever any value is deleted
from the domain of <span class="math inline">\(X_i\)</span>, even if
each value of <span class="math inline">\(X_k\)</span> is consistent
with several remaining values of <span
class="math inline">\(X_i\)</span>. Suppose that, for every arc <span
class="math inline">\((X_k, X_i)\)</span>, we keep track of the number
of remaining values of <span class="math inline">\(X_i\)</span> that are
consistent with each value of <span class="math inline">\(X_k\)</span>.
Explain how to update these numbers efficiently and hence show that arc
consistency can be enforced in total time <span
class="math inline">\(O(n^2d^2)\)</span>.</p>
<p><strong>6.14</strong> The TREE-CSP-SOLVER (Figure 6.10) makes arcs
consistent starting at the leaves and working backwards towards the
root. Why does it do that? What would happen if it went in the opposite
direction?</p>
<blockquote>
<p>弧一致性检验要求当某个结点的合法取值被删去之后要 recheck 其邻居,
对于树形结构的 CSP, 每次删去的都是父节点的取值, 倒序遍历时,
父节点的祖先还没有被更新过, 可以在遍历的过程中一次更新,
而其儿子不需要再更新; 如果正序遍历, 那么删去某个父节点的值后,
还要再检查该父节点的父亲结点, 这个检查有可能会继续传播直到根节点,
造成了大量的开销. 因此倒序遍历保证了每个结点只 check 了一次.</p>
</blockquote>
]]></content>
  </entry>
</search>
